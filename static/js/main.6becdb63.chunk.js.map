{"version":3,"sources":["images/backgroundBig.jpg","images/main_image.png","DisplayMessage.js","Login.js","Join.js","Home.js","Navbar.js","MyCandidateProfil.js","MyHirerProfil.js","CandidateProfil.js","HirerProfil.js","Search.js","App.js","index.js"],"names":["module","exports","DisplayMessage","props","state","displayMessageFlag","message","displayMessage","bind","this","setState","msg","document","querySelector","classList","remove","setTimeout","add","className","React","Component","Login","redirect","toggleLoginFlag","email","password","displayMessageClass","toggleLogin","handleInputChange","handleSubmit","loginForm","style","display","e","target","name","value","data","fetch","method","headers","body","JSON","stringify","response","status","json","localStorage","setItem","temp","to","console","error","loginError","type","minLength","maxLength","placeholder","onChange","onClick","Join","toggleJoinFlag","firstname","lastname","repassword","role","toggleJoin","handleChange","resetAllInput","joinForm","preventDefault","id","getElementById","onSubmit","joinMessage","required","defaultValue","Home","loginButtonText","joinButtonText","joinError","searchInput","onClickLoginHandle","onClickJoinHandle","search","searchChange","loginButton","joinButton","input","src","require","href","title","rel","Navbar","toggleNavbar","handleLogout","toggle","querySelectorAll","forEach","line","index","clear","profilStyle","searchStyle","exitStyle","selectedLink","color","MyCandidateProfil","jwt","getItem","editFlag","disabled","readonly","dropListData","toggleEdit","getUserData","userHeaderChange","availabilityChange","discardChanges","saveChanges","userDataChange","removeUserData","addUserData","getDropListData","imageChange","removeImage","videoChange","removeVideo","resumeChange","removeResume","downloadResume","removeItem","button","contains","attr","split","dataName","push","profession","id_profession","skill","id_skill","education","id_education","education_level","id_education_level","language","id_language","language_level","id_language_level","file","files","fileName","extensions","fileExtention","pop","toLowerCase","includes","formData","FormData","append","then","blob","url","window","URL","createObjectURL","a","createElement","download","click","changeButtons","availabilityButton","addExperienceButton","addSkillButton","addEducationButton","addLanguageButton","editImageButtons","editVideoButtons","editResumeButtons","htmlFor","videoMap","controls","resumeMap","availabilityText","experienceMap","item","removeButton","professionMap","pro_item","pro_index","key","readOnly","company","date","length","skillMap","skillsMap","educationMap","allEducationMap","allEducationLevelsMap","languageMap","allLanguageMap","allLanguageLevelsMap","backgroundColor","MyHirerProfil","addJobPostButton","jobPostMap","description","CandidateProfil","navbar","redirectBack","tmp","HirerProfil","Search","searchType","results","load","changeSearchType","changeSearchInput","searchUsers","viewProfil","goToMain","candidate","postJob","resultsMap","image_path","job_title","returnButton","App","path","ReactDOM","render"],"mappings":"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","file":"static/js/main.6becdb63.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/backgroundBig.f2b86eb1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/main_image.afdbf1d8.png\";","import React from 'react';\r\nimport './DisplayMessage.css'\r\n\r\nclass DisplayMessage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayMessageFlag: this.props.displayMessageFlag,\r\n            message: \"\"\r\n        };\r\n        this.displayMessage = this.displayMessage.bind(this);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(this.props.displayMessageFlag !== this.state.displayMessageFlag) {\r\n            this.setState({\r\n                displayMessageFlag: this.props.displayMessageFlag\r\n            });\r\n            if(this.props.displayMessage !== \"\" && this.props.displayMessage !== null) {\r\n                this.displayMessage();\r\n            }\r\n        }\r\n    }\r\n\r\n    // display each new message given and after 3 seconds close it.\r\n    displayMessage() {\r\n        var msg = document.querySelector(\".DisplayMessage\");\r\n        msg.classList.remove(\"deactivate-display-message\");\r\n        this.setState({\r\n            message: this.props.displayMessage\r\n        });\r\n        setTimeout(()=>{\r\n            msg.classList.add(\"deactivate-display-message\");\r\n            this.setState({\r\n                message: \"\"\r\n            });\r\n        }, 3000);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"DisplayMessage deactivate-display-message\">\r\n                <p>{this.state.message}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DisplayMessage;","import React from 'react';\r\nimport './Login.css';\r\nimport  { Redirect } from 'react-router-dom';\r\nimport DisplayMessage from './DisplayMessage';\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            redirect: \"\",\r\n            toggleLoginFlag: false,\r\n            email: \"\",\r\n            password: \"\",\r\n            displayMessageClass: \"\",\r\n            displayMessage: \"\",\r\n            displayMessageFlag: false\r\n          };\r\n        this.toggleLogin = this.toggleLogin.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        // Parent of login changes the flag state to toggle login form\r\n        if(this.props.toggleLoginFlag !== this.state.toggleLoginFlag) {\r\n            this.setState({\r\n                toggleLoginFlag: this.props.toggleLoginFlag\r\n            });\r\n            this.toggleLogin();\r\n        }\r\n    }\r\n\r\n    // Toggle show login form\r\n    toggleLogin() {\r\n        let loginForm = document.querySelector(\".login\");\r\n        if(loginForm.style.display === \"flex\") {\r\n            loginForm.style.display = \"none\";\r\n            this.setState({\r\n                displayMessageClass: \"\"\r\n            });\r\n        } else {\r\n            loginForm.style.display = \"flex\";\r\n            this.setState({\r\n                displayMessageClass: <DisplayMessage displayMessage={this.state.displayMessage} displayMessageFlag={this.state.displayMessageFlag} />\r\n            });\r\n        }\r\n    }\r\n\r\n    // Handle input change of login form\r\n    handleInputChange(e) {\r\n        if(e.target.name === \"email\") {\r\n            this.setState({\r\n                email: e.target.value\r\n            });\r\n        } else if (e.target.name === \"password\") {\r\n            this.setState({\r\n                password: e.target.value\r\n            });\r\n        }\r\n    }\r\n\r\n    // Handle Submit of login form\r\n    async handleSubmit(e) {\r\n        const url = 'http://localhost/junior-workers/api/login.php';\r\n        const data = {\"email\":this.state.email, \"password\":this.state.password};\r\n\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n            \r\n            if(response.status !== 200) {\r\n                this.setState({\r\n                    displayMessageFlag: !this.state.displayMessageFlag,\r\n                    displayMessageClass: <DisplayMessage displayMessage=\"Unable to login\" displayMessageFlag={!this.state.displayMessageFlag} />\r\n                });\r\n            }\r\n            else if (response.status === 200) {\r\n                const json = await response.json();\r\n                localStorage.setItem(\"jwt\", json[\"jwt\"]);\r\n                var temp = \"\";\r\n                // navigate user to the proper profil according to their role\r\n                if(json[\"role\"] === \"candidate\") {\r\n                    temp = <Redirect to='/my-candidate-profil' />;\r\n                } else if(json[\"role\"] === \"hirer\") {\r\n                    temp = <Redirect to='/my-hirer-profil' />;\r\n                }\r\n                this.setState({redirect : temp});\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            this.setState({\r\n                displayMessageFlag: !this.state.displayMessageFlag,\r\n                displayMessageClass: <DisplayMessage displayMessage=\"Unable to login\" displayMessageFlag={!this.state.displayMessageFlag} />\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"login\">\r\n                {this.state.redirect}\r\n\r\n                {/** use DisplayMessage with updating variable because it's been used by Join class as well and it creates conflicts */}\r\n                {this.state.displayMessageClass}\r\n\r\n                <div className=\"login-form\">\r\n                    <div className=\"login-message\" style={{\"color\":\"#D0321E\"}}>{this.state.loginError}</div>\r\n\r\n                    <div className=\"login-label\">Email</div>\r\n                    <div className=\"login-input-before fa fa-user\" />\r\n                    <input\r\n                        name=\"email\"\r\n                        className=\"login-input-text\" \r\n                        type=\"email\" minLength=\"6\" \r\n                        maxLength=\"90\" \r\n                        placeholder=\"John@mail.com\"\r\n                        onChange={this.handleInputChange} />\r\n                    <div className=\"login-label\">Password</div>\r\n                    <div className=\"login-input-before fa fa-lock\" />\r\n                    <input \r\n                        name=\"password\"\r\n                        className=\"login-input-text\" \r\n                        type=\"password\" \r\n                        minLength=\"6\" \r\n                        maxLength=\"40\" \r\n                        placeholder=\"abc123\" \r\n                        onChange={this.handleInputChange}/>\r\n                    <button className=\"login-submit\" onClick={this.handleSubmit}>Sign in</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport './Join.css';\r\nimport DisplayMessage from './DisplayMessage';\r\n\r\nclass Join extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            toggleJoinFlag: false,\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            repassword: \"\",\r\n            role: \"candidate\",\r\n            displayMessageClass: \"\",\r\n            displayMessage: \"\",\r\n            displayMessageFlag: false\r\n          };\r\n        this.toggleJoin = this.toggleJoin.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.resetAllInput = this.resetAllInput.bind(this);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(this.props.toggleJoinFlag !== this.state.toggleJoinFlag) {\r\n            this.setState({\r\n                toggleJoinFlag: this.props.toggleJoinFlag\r\n            });\r\n            this.toggleJoin();\r\n        }\r\n    }\r\n\r\n    toggleJoin() {\r\n        let joinForm = document.querySelector(\".join\");\r\n        if(joinForm.style.display === \"flex\") {\r\n            joinForm.style.display = \"none\";\r\n            this.setState({\r\n                displayMessageClass: \"\"\r\n            });\r\n        } else {\r\n            joinForm.style.display = \"flex\";\r\n            this.setState({\r\n                displayMessageClass: <DisplayMessage displayMessage={this.state.displayMessage} displayMessageFlag={this.state.displayMessageFlag} />\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange(e) {\r\n        e.preventDefault();\r\n        var id = e.target.id;\r\n        if(id === \"join_firstname\") {\r\n            this.setState({\r\n                firstname: e.target.value\r\n            });\r\n        } else if (id === \"join_lastname\") {\r\n            this.setState({\r\n                lastname: e.target.value\r\n            });\r\n        } else if (id === \"join_email\") {\r\n            this.setState({\r\n                email: e.target.value\r\n            });\r\n        } else if (id === \"join_password\") {\r\n            this.setState({\r\n                password: e.target.value\r\n            });\r\n        } else if (id === \"join_repassword\") {\r\n            this.setState({\r\n                repassword: e.target.value\r\n            });\r\n        } else if (id === \"join_role\") {\r\n            this.setState({\r\n                role: e.target.value\r\n            });\r\n        }\r\n    }\r\n\r\n    async handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        if(this.state.password !== this.state.repassword) {\r\n            this.setState({\r\n                displayMessageFlag: !this.state.displayMessageFlag,\r\n                displayMessageClass: <DisplayMessage displayMessage=\"Password doesn't match the verified password\" displayMessageFlag={!this.state.displayMessageFlag} />\r\n            });\r\n        } else {\r\n            var data = {\r\n                \"email\": this.state.email,\r\n                \"password\": this.state.password,\r\n                \"firstname\": this.state.firstname,\r\n                \"lastname\": this.state.lastname,\r\n                \"role\": this.state.role\r\n            };\r\n    \r\n            var url = \"http://localhost/junior-workers/api/create-user.php\";\r\n            try {\r\n                const response = await fetch(url, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(data),\r\n                });\r\n                \r\n                if(response.status !== 200) {\r\n                    this.setState({\r\n                        displayMessageFlag: !this.state.displayMessageFlag,\r\n                        displayMessageClass: <DisplayMessage displayMessage=\"Email exists\" displayMessageFlag={!this.state.displayMessageFlag} />\r\n                    });\r\n                }\r\n                else if (response.status === 200) {\r\n                    const json = await response.json();\r\n                    this.setState({\r\n                        displayMessageFlag: !this.state.displayMessageFlag,\r\n                        displayMessageClass: <DisplayMessage displayMessage=\"User created\" displayMessageFlag={!this.state.displayMessageFlag} />\r\n                    });\r\n                    this.resetAllInput();\r\n                }\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n                this.setState({\r\n                    displayMessageFlag: !this.state.displayMessageFlag,\r\n                    displayMessageClass: <DisplayMessage displayMessage=\"Unable to create user\" displayMessageFlag={!this.state.displayMessageFlag} />\r\n                });\r\n            }   \r\n        }\r\n    }\r\n\r\n    resetAllInput() {\r\n        document.getElementById(\"join_firstname\").value = \"\";\r\n        document.getElementById(\"join_lastname\").value = \"\";\r\n        document.getElementById(\"join_email\").value = \"\";\r\n        document.getElementById(\"join_password\").value = \"\";\r\n        document.getElementById(\"join_repassword\").value = \"\";\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"join\">\r\n                \r\n                {/** use DisplayMessage with updating variable because it's been used by Login class as well and it creates conflicts */}\r\n                {this.state.displayMessageClass}\r\n                \r\n                <form className=\"join-form\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"join-message\">Account Creation</div>\r\n                    <div className=\"join-message\" style={{\"color\":\"#D0321E\", \"fontSize\":\"26px\"}}>{this.state.joinMessage}</div>\r\n                    <div className=\"join-section\">\r\n                        <div className=\"join-title-label\">Account ID</div>\r\n                        <div className=\"join-label\">Email</div>\r\n                        <input className=\"join-input-text\" type=\"email\" minLength=\"6\" maxLength=\"30\" placeholder=\"johnDelta\" required name=\"email\" id=\"join_email\" onChange={this.handleChange} />\r\n                        <div className=\"join-label\">Password</div>\r\n                        <input className=\"join-input-text\" type=\"password\" minLength=\"6\" maxLength=\"30\" placeholder=\"John123DEL\" required name=\"password\" id=\"join_password\" onChange={this.handleChange} />\r\n                        <div className=\"join-label\">Verify password</div>\r\n                        <input className=\"join-input-text\" type=\"password\" minLength=\"6\" maxLength=\"30\" placeholder=\"John123DEL\" required name=\"repassword\" id=\"join_repassword\" onChange={this.handleChange} />\r\n                        <div className=\"join-label\">Role</div>\r\n                        <select className=\"join-role\" defaultValue=\"candidate\" name=\"role\" id=\"join_role\" onChange={this.handleChange}>\r\n                            <option value=\"candidate\" >Candidate</option>\r\n                            <option value=\"hirer\" >Hirer</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"join-section\">\r\n                        <div className=\"join-title-label\">Personal info</div>\r\n                        <div className=\"join-label\">Name</div>\r\n                        <input className=\"join-input-text\" type=\"text\" minLength=\"2\" maxLength=\"40\" placeholder=\"John\" required name=\"firstname\" id=\"join_firstname\" onChange={this.handleChange} />\r\n                        <div className=\"join-label\">Lastname</div>\r\n                        <input className=\"join-input-text\" type=\"text\" minLength=\"2\" maxLength=\"40\" placeholder=\"Deligiannis\" required name=\"lastname\" id=\"join_lastname\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <button className=\"join-submit\" type=\"submit\" >Create account</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Join;","import React from 'react';\r\nimport './Home.css';\r\nimport Login from './Login.js';\r\nimport Join from './Join.js';\r\nimport  { Redirect } from 'react-router-dom';\r\n\r\nclass Home extends React.Component{\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      toggleLoginFlag: false,\r\n      loginButtonText: \"Login\",\r\n      toggleJoinFlag: false,\r\n      joinButtonText: \"Join our community\",\r\n      joinError : \"\",\r\n      redirect: \"\",\r\n      searchInput: \"\"\r\n    };\r\n    this.onClickLoginHandle = this.onClickLoginHandle.bind(this);\r\n    this.onClickJoinHandle = this.onClickJoinHandle.bind(this);\r\n    this.search = this.search.bind(this);\r\n    this.searchChange = this.searchChange.bind(this);\r\n  }\r\n\r\n  onClickLoginHandle() {\r\n    // if the join panel is open, close it\r\n    if(this.state.joinButtonText === \"X\") {\r\n      this.onClickJoinHandle();\r\n    }\r\n    // toggle login form\r\n    this.setState({\r\n      toggleLoginFlag: !this.state.toggleLoginFlag\r\n    });\r\n    // change text of login button\r\n    let loginButton = document.querySelector(\".login-button\");\r\n    if(this.state.loginButtonText === \"Login\") {\r\n    this.setState({\r\n        loginButtonText: \"X\"\r\n    });\r\n    loginButton.classList.add(\"login-button-active\");\r\n    } else {\r\n    this.setState({\r\n        loginButtonText: \"Login\"\r\n    });\r\n    loginButton.classList.remove(\"login-button-active\");\r\n    }\r\n  }\r\n\r\n  onClickJoinHandle() {\r\n    //if the login panel is open, close it\r\n    if(this.state.loginButtonText === \"X\") {\r\n      this.onClickLoginHandle();\r\n    }\r\n    // toggle join form\r\n    this.setState({\r\n      toggleJoinFlag: !this.state.toggleJoinFlag\r\n    });\r\n    // change text of join button\r\n    let joinButton = document.querySelector(\".join-button\");\r\n    if(this.state.joinButtonText === \"Join our community\") {\r\n      this.setState({\r\n        joinButtonText: \"X\"\r\n      });\r\n      joinButton.classList.add(\"join-button-active\");\r\n    } else {\r\n      this.setState({\r\n        joinButtonText: \"Join our community\"\r\n      });\r\n      joinButton.classList.remove(\"join-button-active\");\r\n    }\r\n  }\r\n\r\n  searchChange(e) {\r\n    e.preventDefault();\r\n    var input = document.getElementById(\"search-input\").value;\r\n    this.setState({\r\n      searchInput: input\r\n    });\r\n  }\r\n\r\n  search(e) {\r\n    e.preventDefault();\r\n    localStorage.setItem(\"searchInput\", this.state.searchInput);\r\n    var temp = <Redirect to=\"/search\" />;\r\n    this.setState({\r\n        redirect: temp\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"Home\">\r\n        {this.state.redirect}\r\n        <img id=\"bg\" className=\"background\" src={require('./images/backgroundBig.jpg')} />\r\n        \r\n        <div className=\"logo\">\r\n          <div className=\"title1\">Junior</div>\r\n          <div className=\"title2\">Workers</div>\r\n          <div className=\"logo-circle\" />\r\n        </div>\r\n\r\n        <button className=\"join-button\" onClick={this.onClickJoinHandle} value=\"join\">\r\n          {this.state.joinButtonText}\r\n        </button>\r\n        <Join toggleJoinFlag={this.state.toggleJoinFlag} />\r\n        \r\n\r\n        <button className=\"login-button\" onClick={this.onClickLoginHandle} value=\"login\">\r\n          {this.state.loginButtonText}\r\n        </button>\r\n        <Login toggleLoginFlag={this.state.toggleLoginFlag} />\r\n        \r\n        <div className=\"main\">\r\n          <h1 className=\"title\">\r\n            <span>Your professional</span>\r\n            <span>career starts</span>\r\n            <span>here</span>\r\n            <div className=\"main-search\">\r\n              <input type=\"text\" placeholder=\"ex. Web Developer\" id=\"search-input\" onChange={this.searchChange} />\r\n              <button onClick={this.search}>\r\n                <i className=\"fa fa-search\" />\r\n              </button>\r\n            </div>\r\n          </h1>\r\n          <img className=\"image\" src={require(`./images/main_image.png`)} />\r\n        </div>\r\n\r\n        <div className=\"infos\" id=\"infos\">\r\n          <h2 className=\"infos-title\">Use Junior Workers and find your place in job industry</h2>\r\n          <div className=\"info\">\r\n            <div className=\"info-title\">Recruiters<br/>can</div>\r\n            <div className=\"info-uses\">\r\n              <div className=\"info-use\">Search workers</div>\r\n              <div className=\"info-use\">Create a job post</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"info\">\r\n            <div className=\"info-title\">Workers<br/>can</div>\r\n            <div className=\"info-uses\">\r\n              <div className=\"info-use\">Search job posts</div>\r\n              <div className=\"info-use\">Create a professional profil</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"footer\">\r\n          <div>Designed and Coded by</div>\r\n          <a \r\n\t\t\t\t\t\thref=\"https://github.com/JohnDelta\"\r\n\t\t\t\t\t\ttarget=\"_blank\" \r\n\t\t\t\t\t\ttitle=\"Visit my github profile!\"\r\n\t\t\t\t\t\trel=\"noopener noreferrer\" >\r\n              John Deligiannis \r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport './Navbar.css';\r\n\r\nclass Navbar extends React.Component{\r\n  constructor(props){\r\n    super();\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.handleLogout = this.handleLogout.bind(this);\r\n  }\r\n\r\n  toggleNavbar() {\r\n    // show nav links\r\n    var navLinks = document.querySelector(\".nav-links\");\r\n    navLinks.classList.toggle(\"nav-links-active\");\r\n    // animate navbar toggle button\r\n    var navLines = document.querySelectorAll(\".nav-toggle div\");\r\n    navLines.forEach((line, index) => {\r\n      line.classList.toggle(\"div\"+(index+1)+\"-active\");\r\n    });\r\n    // change color of navbar\r\n    var navbar = document.querySelector(\".Navbar\");\r\n    navbar.classList.toggle(\"navbar-active\");\r\n  }\r\n\r\n  handleLogout() {\r\n    localStorage.clear();\r\n  }\r\n\r\n  render() {\r\n    var profilStyle = {};\r\n    var searchStyle = {};\r\n    var exitStyle = {};\r\n    if(this.props.selectedLink === \"profil\")\r\n      profilStyle = {color: \"#F25F5C\"};\r\n    if(this.props.selectedLink === \"search\")\r\n      searchStyle = {color: \"#F25F5C\"};\r\n\r\n    return(\r\n      <div className=\"Navbar\">\r\n        <div className=\"nav-toggle\" onClick={this.toggleNavbar}>\r\n          <div/>\r\n          <div/>\r\n          <div/>\r\n        </div>\r\n        <ul className=\"nav-links\">\r\n          <li className=\"nav-link\">\r\n            <Link className=\"text\" to=\"/search\" style={searchStyle}>\r\n              <i className=\"fa fa-search\" style={searchStyle} />\r\n              <p>Home</p>\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-link\">\r\n            <Link className=\"text\" to={\"/my-\"+this.props.role+\"-profil\"} style={profilStyle}>\r\n              <i className=\"fa fa-user\" style={profilStyle}/>\r\n              <p>Profil</p>\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-link nav-down\">\r\n            <Link onClick={this.handleLogout} className=\"text\" to=\"/\" style={exitStyle} >\r\n              <i className=\"fa fa-sign-out\" style={exitStyle} />\r\n              <p>Exit</p>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport './Profil.css';\r\nimport Navbar from './Navbar';\r\nimport  { Redirect } from 'react-router-dom';\r\nimport DisplayMessage from './DisplayMessage';\r\n\r\nclass MyCandidateProfil extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            redirect: \"\",\r\n            jwt: localStorage.getItem(\"jwt\"),\r\n            editFlag: false,\r\n            disabled: true,\r\n            readonly: true,\r\n            dropListData: {\r\n                \"profession\": [],\r\n                \"skill\": [],\r\n                \"education\": [],\r\n                \"education_level\": [],\r\n                \"language\": [],\r\n                \"language_level\": []\r\n            },\r\n            data : {\r\n                \"user\": [],\r\n                \"experience\": [],\r\n                \"skill\": [],\r\n                \"education\": [],\r\n                \"language\": []\r\n            },\r\n            displayMessage: \"\",\r\n            displayMessageFlag: false\r\n        };\r\n\r\n        this.toggleEdit = this.toggleEdit.bind(this);\r\n        this.getUserData = this.getUserData.bind(this);\r\n\r\n        this.userHeaderChange = this.userHeaderChange.bind(this);\r\n        this.availabilityChange = this.availabilityChange.bind(this);\r\n\r\n        this.discardChanges = this.discardChanges.bind(this);\r\n        this.saveChanges = this.saveChanges.bind(this);\r\n        \r\n        this.userDataChange = this.userDataChange.bind(this);\r\n        this.removeUserData = this.removeUserData.bind(this);\r\n        this.addUserData = this.addUserData.bind(this);\r\n\r\n        this.getDropListData = this.getDropListData.bind(this);\r\n\r\n        this.imageChange = this.imageChange.bind(this);\r\n        this.removeImage = this.removeImage.bind(this);\r\n\r\n        this.videoChange = this.videoChange.bind(this);\r\n        this.removeVideo = this.removeVideo.bind(this);\r\n\r\n        this.resumeChange = this.resumeChange.bind(this);\r\n        this.removeResume = this.removeResume.bind(this);\r\n\r\n        this.downloadResume = this.downloadResume.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        localStorage.removeItem(\"email\");\r\n        if(this.state.jwt === null) {\r\n            var temp = <Redirect to=\"/\" />;\r\n            this.setState({\r\n                redirect: temp\r\n            });\r\n        }\r\n        this.getUserData();\r\n        this.getDropListData();\r\n    }\r\n\r\n    // open edit mode - be able to edit all values (remove and add new)\r\n    toggleEdit() {\r\n        this.setState({\r\n            editFlag : !this.state.editFlag\r\n        });\r\n        var button = document.getElementById(\"edit-button\");\r\n        // if you close edit without saving first, reset changes\r\n        if(button.classList.contains(\"fa-times\")) {\r\n            // change edit button icon\r\n            button.classList.remove(\"fa-times\");\r\n            button.classList.add(\"fa-edit\");\r\n        } else {\r\n            button.classList.remove(\"fa-edit\");\r\n            button.classList.add(\"fa-times\");\r\n        }\r\n        // change lock of input fields\r\n        this.setState({\r\n            disabled: !this.state.disabled,\r\n            readonly: !this.state.readonly\r\n        });\r\n    }\r\n\r\n    // handle user data input change \r\n    userHeaderChange(e) {\r\n        e.preventDefault();\r\n        var id = e.target.id;\r\n        var value = e.target.value;\r\n        var temp = this.state.data;\r\n\r\n        if(id === \"firstname\") {\r\n            temp[\"user\"][\"firstname\"] = value;\r\n        } else if(id === \"lastname\") {\r\n            temp[\"user\"][\"lastname\"] = value;\r\n        } else if(id === \"title\") {\r\n            temp[\"user\"][\"title\"] = value;\r\n        } else if(id === \"bio\") {\r\n            temp[\"user\"][\"bio\"] = value;\r\n        }\r\n\r\n        this.setState({\r\n            data: temp\r\n        });\r\n    }\r\n\r\n    // handle the change state of availability\r\n    availabilityChange() {\r\n        var temp;\r\n        if(this.state.data[\"user\"][\"availability\"] === \"1\") {\r\n            temp = this.state.data;\r\n            temp[\"user\"][\"availability\"] = \"0\";\r\n            this.setState({\r\n                data: temp\r\n            });\r\n        } else {\r\n            temp = this.state.data;\r\n            temp[\"user\"][\"availability\"] = \"1\";\r\n            this.setState({\r\n                data: temp\r\n            });\r\n        }\r\n    }\r\n\r\n    // handle user's data input change\r\n    // each Data component is distinguished by an id with the form : nameOfData__indexInJson__nameOfItem\r\n    // ex. skill__0__title means the data item skill with index 0 and name title called the function \r\n    userDataChange(e) {\r\n        e.preventDefault();\r\n        var value = e.target.value;\r\n        var attr = e.target.id.split(\"__\");\r\n        var dataName = attr[0];\r\n        var index = attr[1];\r\n        var name = attr[2];\r\n        var temp = this.state.data;\r\n        temp[dataName][index][name] = value;\r\n        this.setState({\r\n            data: temp\r\n        });\r\n    }\r\n\r\n    // add user's skill item\r\n    addUserData(e) {\r\n        e.preventDefault();\r\n        var temp = this.state.data;\r\n        var dataName = e.target.name;\r\n        if(dataName === \"experience\") {\r\n            temp[\"experience\"].push({\r\n                \"id_profession\": this.state.dropListData.profession[0].id_profession, \"company\": \"\", \"date\": \"\"\r\n            });\r\n        } else if (dataName === \"skill\") {\r\n            temp[\"skill\"].push({\r\n                \"id_skill\": this.state.dropListData.skill[0].id_skill});\r\n        } else if (dataName === \"education\") {\r\n            temp[\"education\"].push({\r\n                \"id_education\": this.state.dropListData.education[0].id_education, \r\n                \"id_education_level\": this.state.dropListData.education_level[0].id_education_level \r\n            });\r\n        } else if (dataName === \"language\") {\r\n            temp[\"language\"].push({\r\n                \"id_language\": this.state.dropListData.language[0].id_language, \r\n                \"id_language_level\": this.state.dropListData.language_level[0].id_language_level \r\n            });\r\n        }\r\n        this.setState({\r\n            data: temp\r\n        });\r\n    }\r\n\r\n    // remove user's data\r\n    // each data component remove button is distinguished by an id with the form : dataName__indexInJson__remove\r\n    // ex. skill__0__title means the data item experience with index 0 and name title will be removed from json \r\n    removeUserData(e) {\r\n        e.preventDefault();\r\n        var attr = e.target.id.split(\"__\");\r\n        var dataName = attr[0];\r\n        var index = attr[1];\r\n        var temp = this.state.data;\r\n        temp[dataName][index] = \"\";\r\n        this.setState({\r\n            data: temp\r\n        });\r\n    }\r\n\r\n    // remove all user's data and get them from db again\r\n    discardChanges() {\r\n        this.setState({\r\n            data : {\r\n                \"user\": [],\r\n                \"experience\": [],\r\n                \"skill\": [],\r\n                \"education\": [],\r\n                \"language\": []\r\n            }\r\n        });\r\n        this.getUserData();\r\n        this.toggleEdit();\r\n    }\r\n\r\n    async imageChange(e) {\r\n        e.preventDefault();\r\n\r\n        var file = document.getElementById(\"image-file\").files[0];\r\n        var fileName = file.name;\r\n        var extensions = [\"png\", \"jpg\", \"jpeg\"];\r\n        var fileExtention = fileName.split(\".\").pop().toLowerCase();\r\n        //var fileSize = file.size;\r\n\r\n        if(extensions.includes(fileExtention)) {\r\n           /*\r\n            NOTE : codes returned from the post-image.php\r\n            $SUCCESS_CODE = \"0\";\r\n            $ERROR_CODE = \"1\";\r\n            $ERROR_FORMAT_CODE = \"2\";\r\n            $ERROR_SIZE_CODE = \"3\";\r\n            */\r\n\r\n            // procced to upload image\r\n            const url = 'http://localhost:80//junior-workers/api/post-image.php';\r\n            //const data = {\"jwt\": this.state.jwt, \"data\": this.state.imageFile};\r\n            var formData = new FormData();\r\n            formData.append(\"image_file\", file);\r\n            formData.append(\"jwt\", this.state.jwt);\r\n\r\n            try {\r\n                const response = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: formData,\r\n                });\r\n                const json = await response.json();\r\n                if(response.status !== 200) {\r\n                    if(json[\"code\"] === \"1\") {\r\n                        this.setState({\r\n                            displayMessage: \"Unable to upload image\"\r\n                        });\r\n                    } else if (json[\"code\"] === \"2\") {\r\n                        this.setState({\r\n                            displayMessage: \"Image not in proper format\"\r\n                        });\r\n                    } else if (json[\"code\"] === \"3\") {\r\n                        this.setState({\r\n                            displayMessage: \"Image's size cannot be larger than 10mb\"\r\n                        });\r\n                    }\r\n                }\r\n                else if (response.status === 200 && json[\"code\"] === \"0\") {\r\n                    this.setState({\r\n                        displayMessage: \"Profil image has been updated\"\r\n                    });\r\n                    this.getUserData();\r\n                }\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n                this.setState({\r\n                    displayMessage: \"Unable to upload image\"\r\n                });\r\n            }\r\n        } else {\r\n            this.setState({\r\n                displayMessage: \"File doesn't have valid image extension.\"\r\n            });\r\n        }\r\n        this.setState({\r\n            displayMessageFlag: !this.state.displayMessageFlag\r\n        });\r\n    }\r\n\r\n    // remove user's image\r\n    async removeImage() {\r\n\r\n        var url = 'http://localhost:80//junior-workers/api/remove-user-image.php';\r\n        var data = {\"jwt\": this.state.jwt};\r\n\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to post user's data\");\r\n                this.setState({\r\n                    displayMessage: \"Unable to remove image\",\r\n                    displayMessageFlag: !this.state.displayMessageFlag\r\n                });\r\n            }\r\n            else if (response.status === 200) {\r\n                //var json = await response.json();\r\n                //console.log(\"Data posted\");\r\n                this.setState({\r\n                    displayMessage: \"Profil image has been removed\",\r\n                    displayMessageFlag: !this.state.displayMessageFlag\r\n                });\r\n                this.getUserData();\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    async videoChange(e) {\r\n        e.preventDefault();\r\n\r\n        var file = document.getElementById(\"video-file\").files[0];\r\n        var fileName = file.name;\r\n        var extensions = [\"mp4\"];\r\n        var fileExtention = fileName.split(\".\").pop().toLowerCase();\r\n        //var fileSize = file.size;\r\n\r\n        if(extensions.includes(fileExtention)) {\r\n           /*\r\n            NOTE : codes returned from the post-video.php\r\n            $SUCCESS_CODE = \"0\";\r\n            $ERROR_CODE = \"1\";\r\n            $ERROR_FORMAT_CODE = \"2\";\r\n            $ERROR_SIZE_CODE = \"3\";\r\n            */\r\n\r\n            // procced to upload video\r\n            const url = 'http://localhost:80//junior-workers/api/post-video.php';\r\n            //const data = {\"jwt\": this.state.jwt, \"data\": this.state.imageFile};\r\n            var formData = new FormData();\r\n            formData.append(\"video_file\", file);\r\n            formData.append(\"jwt\", this.state.jwt);\r\n\r\n            try {\r\n                const response = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: formData,\r\n                });\r\n                const json = await response.json();\r\n                if(json[\"code\"] === \"1\") {\r\n                    this.setState({\r\n                        displayMessage: \"Unable to upload video\",\r\n                    });\r\n                } else if (json[\"code\"] === \"2\") {\r\n                    this.setState({\r\n                        displayMessage: \"Video not in proper format (MP4)\",\r\n                    });\r\n                } else if (json[\"code\"] === \"3\") {\r\n                    this.setState({\r\n                        displayMessage: \"Video's size cannot be larger than 50mb\",\r\n                    });\r\n                } else if (json[\"code\"] === \"0\") {\r\n                    this.setState({\r\n                        displayMessage: \"Video has been Added\"\r\n                    });\r\n                    this.getUserData();\r\n                }\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n                this.setState({\r\n                    displayMessage: \"Unable to upload video\",\r\n                });\r\n            }\r\n        } else {\r\n            this.setState({\r\n                displayMessage: \"File doesn't have valid image extension (MP4).\",\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            displayMessageFlag: !this.state.displayMessageFlag\r\n        });\r\n    }\r\n\r\n    // remove user's video\r\n    async removeVideo(e) {\r\n        e.preventDefault();\r\n\r\n        var url = 'http://localhost:80//junior-workers/api/remove-user-video.php';\r\n        var data = {\"jwt\": this.state.jwt};\r\n\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n            //const json = await response.json();\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to post user's data\");\r\n                this.setState({\r\n                    displayMessage: \"Unable to remove video\",\r\n                    displayMessageFlag: !this.state.displayMessageFlag\r\n                });\r\n            }\r\n            else if (response.status === 200) {\r\n                //var json = await response.json();\r\n                //console.log(\"Data posted\");\r\n                this.setState({\r\n                    displayMessage: \"Profil video has been removed\",\r\n                    displayMessageFlag: !this.state.displayMessageFlag\r\n                });\r\n            }\r\n            this.getUserData();\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    // add user's resume\r\n    async resumeChange(e) {\r\n        e.preventDefault();\r\n\r\n        var file = document.getElementById(\"resume-file\").files[0];\r\n        var fileName = file.name;\r\n        var extensions = [\"pdf\"];\r\n        var fileExtention = fileName.split(\".\").pop().toLowerCase();\r\n        //var fileSize = file.size;\r\n\r\n        if(extensions.includes(fileExtention)) {\r\n           /*\r\n            NOTE : codes returned from the post-resume.php\r\n            $SUCCESS_CODE = \"0\";\r\n            $ERROR_CODE = \"1\";\r\n            $ERROR_FORMAT_CODE = \"2\";\r\n            $ERROR_SIZE_CODE = \"3\";\r\n            */\r\n\r\n            // procced to upload resume\r\n            const url = 'http://localhost:80//junior-workers/api/post-resume.php';\r\n            //const data = {\"jwt\": this.state.jwt, \"data\": this.state.imageFile};\r\n            var formData = new FormData();\r\n            formData.append(\"resume_file\", file);\r\n            formData.append(\"jwt\", this.state.jwt);\r\n\r\n            try {\r\n                const response = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: formData,\r\n                });\r\n                const json = await response.json();\r\n                if(json[\"code\"] === \"1\") {\r\n                    this.setState({\r\n                        displayMessage: \"Unable to upload resume\",\r\n                    });\r\n                } else if (json[\"code\"] === \"2\") {\r\n                    this.setState({\r\n                        displayMessage: \"Resume not in proper format\",\r\n                    });\r\n                } else if (json[\"code\"] === \"3\") {\r\n                    this.setState({\r\n                        displayMessage: \"Resume's size cannot be larger than 10mb\",\r\n                    });\r\n                } else if(json[\"code\"] === \"0\") {\r\n                    this.setState({\r\n                        displayMessage: \"Resume has been Added\"\r\n                    });\r\n                    this.getUserData();\r\n                }\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n                this.setState({\r\n                    displayMessage: \"Unable to upload resume\",\r\n                });\r\n            }\r\n        } else {\r\n            this.setState({\r\n                displayMessage: \"File doesn't have valid image extension.\",\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            displayMessageFlag: !this.state.displayMessageFlag\r\n        });\r\n    }\r\n\r\n    // remove user's resume\r\n    async removeResume() {\r\n\r\n        var url = 'http://localhost:80//junior-workers/api/remove-user-resume.php';\r\n        var data = {\"jwt\": this.state.jwt};\r\n\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to post user's data\");\r\n                this.setState({\r\n                    displayMessage: \"Unable to remove resume\",\r\n                    displayMessageFlag: !this.state.displayMessageFlag\r\n                });\r\n            }\r\n            else if (response.status === 200) {\r\n                //var json = await response.json();\r\n                //console.log(\"Data posted\");\r\n                this.setState({\r\n                    displayMessage: \"Resume has been removed\",\r\n                    displayMessageFlag: !this.state.displayMessageFlag\r\n                });\r\n                this.getUserData();\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    // post all user's data changes to db\r\n    async saveChanges(e) {\r\n        e.preventDefault();\r\n\r\n        var url = 'http://localhost:80//junior-workers/api/post-user-data.php';\r\n        var data = {\"jwt\": this.state.jwt, \"data\": this.state.data};\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to post user's data\")\r\n            }\r\n            else if (response.status === 200) {\r\n                //var json = await response.json();\r\n                //console.log(\"Data posted\");\r\n                this.getUserData();\r\n                this.toggleEdit();\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    // Get all user's data using their jwt auth\r\n    async getUserData() {\r\n        var url = 'http://localhost:80//junior-workers/api/get-user-data.php';\r\n        var data = {\"jwt\": this.state.jwt};\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to get user's data\")\r\n            }\r\n            else if (response.status === 200) {\r\n                var json = await response.json();\r\n                this.setState({data : json});\r\n\r\n                // if the returned data are for a hirer and not a candidate, open the hirer's profil\r\n                var temp = \"\";\r\n                if(this.state.data[\"user\"][\"role\"] === \"hirer\") {\r\n                    temp = <Redirect to=\"/my-hirer-profil\" />;\r\n                }\r\n                this.setState({redirect: temp});\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    async getDropListData() {\r\n        var url = 'http://localhost:80//junior-workers/api/get-droplist-data.php';\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            });\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to get drop list data\")\r\n            }\r\n            else if (response.status === 200) {\r\n                var json = await response.json();\r\n                this.setState({\r\n                    dropListData: json\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    async downloadResume() {\r\n        /*\r\n        NOTE : codes returned from the get-user-resume.php\r\n        $SUCCESS_CODE = \"0\";\r\n        $ERROR_CODE = \"1\";\r\n        $FILE_CANNOT_FOUND_CODE = \"2\";\r\n        */\r\n\r\n        // procced to upload resume\r\n        const url = 'http://localhost:80//junior-workers/api/get-user-resume.php';\r\n        // const data = {\r\n        //     \"jwt\": this.state.jwt,\r\n        //     \"email\": this.state[\"data\"][\"user\"][\"email\"]\r\n        // };\r\n        var formData = new FormData();\r\n        formData.append(\"email\", this.state[\"data\"][\"user\"][\"email\"]);\r\n        formData.append(\"jwt\", this.state.jwt);\r\n\r\n        fetch(url, {\r\n                method: 'POST',\r\n                body: formData,\r\n            })\r\n\t\t\t.then(response => {\r\n                if(response.status === 200) {\r\n                    response.blob().then(blob => {\r\n                        let url = window.URL.createObjectURL(blob);\r\n                        let a = document.createElement('a');\r\n                        a.href = url;\r\n                        a.download = 'resume.pdf';\r\n                        a.click();\r\n                    });\r\n                    //window.location.href = response.url;\r\n                } else {\r\n                    this.setState({\r\n                        displayMessage: \"Unable to download resume\",\r\n                        displayMessageFlag: !this.state.displayMessageFlag\r\n                    });\r\n                }\r\n\t\t});\r\n    }\r\n\r\n    render() {\r\n\r\n        // On edit mode change\r\n        var changeButtons = \"\";\r\n        var availabilityButton = \"\";\r\n        var addExperienceButton = \"\";\r\n        var addSkillButton = \"\";\r\n        var addEducationButton = \"\";\r\n        var addLanguageButton = \"\";\r\n        var editImageButtons = \"\";\r\n        var editVideoButtons = \"\";\r\n        var editResumeButtons = \"\";\r\n\r\n        if(this.state.editFlag) {\r\n            // display save and exit changes button\r\n            changeButtons = <div className=\"change-buttons\">\r\n                                <button type=\"submit\"><i className=\"fa fa-check\" /></button>\r\n                                <button onClick={this.discardChanges}><i className=\"fa fa-times\" /></button>\r\n                            </div>;\r\n            // add availability change button\r\n            availabilityButton = <button className=\"profil-availability-button\" onClick={this.availabilityChange}>\r\n                                    <i className=\"fa fa-refresh\" />\r\n                                </button>;\r\n            // display add experience option\r\n            addExperienceButton = <button className=\"add-btn\" onClick={this.addUserData} name=\"experience\">\r\n                                    <i className=\"fa fa-plus\" />Add Experience\r\n                                </button>;\r\n            // display add Skill option\r\n            addSkillButton = <button className=\"add-btn\" onClick={this.addUserData} name=\"skill\">\r\n                                    <i className=\"fa fa-plus\" />Add Skill\r\n                                </button>;\r\n            // display add Education option\r\n            addEducationButton = <button className=\"add-btn\" onClick={this.addUserData} name=\"education\">\r\n                                    <i className=\"fa fa-plus\" />Add Education\r\n                                </button>;\r\n            // display add Language option\r\n            addLanguageButton = <button className=\"add-btn\" onClick={this.addUserData} name=\"language\">\r\n                                    <i className=\"fa fa-plus\" />Add Language\r\n                                </button>;\r\n            // display buttons to edit profil image\r\n            editImageButtons = <div className=\"profil-image-buttons\">\r\n                                    <label htmlFor=\"image-file\" title=\"upload new profil picture\">\r\n                                        <i className=\"fa fa-upload\" />\r\n                                    </label>\r\n                                    <input id=\"image-file\" type=\"file\" onChange={this.imageChange} name=\"image\" />\r\n                                    <button title=\"remove saved profil picture\" onClick={this.removeImage}>\r\n                                        <i className=\"fa fa-trash\" />\r\n                                    </button>\r\n                                </div>;\r\n            // display buttons to edit video\r\n            editVideoButtons = <div className=\"video-buttons\">\r\n                                    <label htmlFor=\"video-file\" className=\"label\" title=\"Upload new video\">\r\n                                        <i className=\"fa fa-upload\" />\r\n                                    </label>\r\n                                    <input id=\"video-file\" type=\"file\"  name=\"video-file\" onChange={this.videoChange} />\r\n                                    <button title=\"Remove current video\" onClick={this.removeVideo}>\r\n                                        <i className=\"fa fa-trash\" />\r\n                                    </button>\r\n                                </div>;\r\n            // display buttons to edit resume\r\n            editResumeButtons = <div className=\"resume-edit-buttons\">\r\n                                    <label htmlFor=\"resume-file\" className=\"label\" title=\"Upload new resume\">\r\n                                        <i className=\"fa fa-upload\" />\r\n                                    </label>\r\n                                    <input id=\"resume-file\" type=\"file\"  name=\"resume\" onChange={this.resumeChange}/>\r\n                                    <button title=\"Remove current resume\" onClick={this.removeResume} >\r\n                                        <i className=\"fa fa-trash\" />\r\n                                    </button>\r\n                                </div>;\r\n        }\r\n\r\n        // display video if the user has any\r\n        var videoMap = \"\";\r\n        if(this.state.data[\"user\"][\"video_path\"] !== \"\" && this.state.data[\"user\"][\"video_path\"] !== null) {\r\n            videoMap = <video \r\n                            className=\"video\"\r\n                            type=\"video/mp4\"\r\n                            src={\"http://localhost/junior-workers/api/uploads/\"+this.state.data[\"user\"][\"video_path\"]}\r\n                            controls={true}>\r\n                            Unable to play video. Please consider updating your browser.\r\n                        </video>;\r\n        }\r\n\r\n        // display resume if the user has\r\n        var resumeMap = \"\";\r\n        if(this.state.data[\"user\"][\"resume_path\"] !== \"\" && this.state.data[\"user\"][\"resume_path\"] !== null) {\r\n            resumeMap = <button className=\"profil-resume-button\" onClick={this.downloadResume}>\r\n                            <i className=\"fa fa-arrow-down\" />\r\n                            Resume\r\n                        </button>;\r\n        } else if(this.state.editFlag) {\r\n            resumeMap = <div style={{color: \"#ffffff\"}}>Upload your resume here</div>;\r\n        }\r\n\r\n        // display availability according to state\r\n        var availabilityText = <p>Not available</p>;\r\n        if(this.state.data[\"user\"][\"availability\"] === \"1\") availabilityText = <p>Available</p>; \r\n\r\n        // Map experience from json to div\r\n        var experienceMap = [];\r\n        this.state.data[\"experience\"].forEach((item, index) => {\r\n            if(item !== \"\"){\r\n                // display remove job if you are on edit mode\r\n                var removeButton = \"\";\r\n                if(this.state.editFlag) {\r\n                    removeButton = <button className=\"work-remove\" id={\"experience__\"+index+\"__remove\"} onClick={this.removeUserData}>\r\n                        <i className=\"fa fa-times\" />\r\n                    </button>;\r\n                }\r\n                // map all professions into option - select\r\n                var professionMap = [];\r\n                this.state.dropListData[\"profession\"].forEach((pro_item, pro_index) => {\r\n                    professionMap.push(\r\n                        <option value={pro_item.id_profession} key={\"profession_option__\"+index+\"__\"+pro_index}>{pro_item.title}</option>\r\n                    );\r\n                });\r\n                // push experience div\r\n                experienceMap.push(\r\n                    <div className=\"work\" key={\"experience\"+index}>\r\n                        <p className=\"work-label\">Worked as</p>\r\n                        <select \r\n                            id={\"experience__\"+index+\"__id_profession\"}\r\n                            disabled={this.state.disabled} \r\n                            value={item.id_profession}\r\n                            onChange={this.userDataChange} >\r\n                            {professionMap}\r\n                        </select>\r\n                        <p className=\"work-label\">At</p>\r\n                        <input \r\n                            type=\"text\" \r\n                            readOnly={this.state.readonly} \r\n                            id={\"experience__\"+index+\"__company\"} \r\n                            onChange={this.userDataChange} \r\n                            defaultValue={item.company}\r\n                            placeholder=\"company\"\r\n                            required={true} />\r\n                        <p className=\"work-label\">Between</p>\r\n                        <input \r\n                            type=\"text\" \r\n                            readOnly={this.state.readonly} \r\n                            id={\"experience__\"+index+\"__date\"} \r\n                            onChange={this.userDataChange} \r\n                            defaultValue={item.date}\r\n                            placeholder=\"date\"\r\n                            required={true} />\r\n                        {removeButton}\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n        if(this.state.data[\"experience\"] === [] || this.state.data[\"experience\"].length === 0) experienceMap = \"No experience so far\";\r\n        \r\n        // Map skill from json to div\r\n        var skillMap = [];\r\n        this.state.data[\"skill\"].forEach((item, index) => {\r\n            if(item !== \"\"){\r\n                // display remove skill if you are on edit mode\r\n                var removeButton = \"\";\r\n                if(this.state.editFlag) {\r\n                    removeButton = <button className=\"skill-remove\" id={\"skill__\"+index+\"__remove\"} onClick={this.removeUserData}>\r\n                        <i className=\"fa fa-times\" />\r\n                    </button>;\r\n                }\r\n                // map all skills into option - select\r\n                var skillsMap = [];\r\n                this.state.dropListData[\"skill\"].forEach((pro_item, pro_index) => {\r\n                    skillsMap.push(\r\n                        <option value={pro_item.id_skill} key={\"skill_option__\"+index+\"__\"+pro_index}>{pro_item.title}</option>\r\n                    );\r\n                });\r\n                // push skill div\r\n                skillMap.push(\r\n                    <div className=\"skill\" key={\"skill\"+index}>\r\n                        <div className=\"skill-dot\"></div>\r\n                        <select \r\n                            id={\"skill__\"+index+\"__id_skill\"}\r\n                            disabled={this.state.disabled} \r\n                            value={item.id_skill}\r\n                            onChange={this.userDataChange} >\r\n                            {skillsMap}\r\n                        </select>\r\n                        {removeButton}\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n        if(this.state.data[\"skill\"] === [] || this.state.data[\"skill\"].length === 0) skillMap = \"No skills so far\";\r\n\r\n        // Map education from json to div\r\n        var educationMap = [];\r\n        this.state.data[\"education\"].forEach((item, index) => {\r\n            if(item !== \"\"){\r\n                // display remove education if you are on edit mode\r\n                var removeButton = \"\";\r\n                if(this.state.editFlag) {\r\n                    removeButton = <button className=\"education-remove\" id={\"education__\"+index+\"__remove\"} onClick={this.removeUserData}>\r\n                        <i className=\"fa fa-times\" />\r\n                    </button>;\r\n                }\r\n                // map all education into option - select\r\n                var allEducationMap = [];\r\n                this.state.dropListData[\"education\"].forEach((pro_item, pro_index) => {\r\n                    allEducationMap.push(\r\n                        <option value={pro_item.id_education} key={\"education_option__\"+index+\"__\"+pro_index}>{pro_item.title}</option>\r\n                    );\r\n                });\r\n                // map all education levels into option - select\r\n                var allEducationLevelsMap = [];\r\n                this.state.dropListData[\"education_level\"].forEach((pro_item, pro_index) => {\r\n                    allEducationLevelsMap.push(\r\n                        <option value={pro_item.id_education_level} key={\"education_level_option__\"+index+\"__\"+pro_index}>{pro_item.title}</option>\r\n                    );\r\n                });\r\n                // push education div\r\n                educationMap.push(\r\n                    <div className=\"education\" key={\"education\"+index}>\r\n                        <div className=\"education-dot\"></div>\r\n                        <select \r\n                            id={\"education__\"+index+\"__id_education_level\"}\r\n                            disabled={this.state.disabled} \r\n                            value={item.id_education_level}\r\n                            onChange={this.userDataChange} >\r\n                            {allEducationLevelsMap}\r\n                        </select>\r\n                        <select \r\n                            id={\"education__\"+index+\"__id_education\"}\r\n                            disabled={this.state.disabled}\r\n                            value={item.id_education}\r\n                            onChange={this.userDataChange} >\r\n                            {allEducationMap}\r\n                        </select>\r\n                        {removeButton}\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n        if(this.state.data[\"education\"] === [] || this.state.data[\"education\"].length === 0) educationMap = \"No education so far\";\r\n\r\n        // Map language from json to div\r\n        var languageMap = [];\r\n        this.state.data[\"language\"].forEach((item, index) => {\r\n            if(item !== \"\"){\r\n                // display remove language if you are on edit mode\r\n                var removeButton = \"\";\r\n                if(this.state.editFlag) {\r\n                    removeButton = <button className=\"language-remove\" id={\"language__\"+index+\"__remove\"} onClick={this.removeUserData}>\r\n                        <i className=\"fa fa-times\" />\r\n                    </button>;\r\n                }\r\n                // map all language into option - select\r\n                var allLanguageMap = [];\r\n                this.state.dropListData[\"language\"].forEach((pro_item, pro_index) => {\r\n                    allLanguageMap.push(\r\n                        <option value={pro_item.id_language} key={\"language_option__\"+index+\"__\"+pro_index}>{pro_item.title}</option>\r\n                    );\r\n                });\r\n                // map all language levels into option - select\r\n                var allLanguageLevelsMap = [];\r\n                this.state.dropListData[\"language_level\"].forEach((pro_item, pro_index) => {\r\n                    allLanguageLevelsMap.push(\r\n                        <option value={pro_item.id_language_level} key={\"language_level_option__\"+index+\"__\"+pro_index}>{pro_item.title}</option>\r\n                    );\r\n                });\r\n                // push language div\r\n                languageMap.push(\r\n                    <div className=\"language\" key={\"language\"+index}>\r\n                        <div className=\"language-dot\"></div>\r\n                        <select \r\n                            id={\"language__\"+index+\"__id_language_level\"}\r\n                            disabled={this.state.disabled}\r\n                            value={item.id_language_level}\r\n                            onChange={this.userDataChange} >\r\n                            {allLanguageLevelsMap}\r\n                        </select>\r\n                        <select \r\n                            id={\"language__\"+index+\"__id_language\"} \r\n                            value={item.id_language}\r\n                            disabled={this.state.disabled}\r\n                            onChange={this.userDataChange} >\r\n                            {allLanguageMap}\r\n                        </select>\r\n                        {removeButton}\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n        if(this.state.data[\"language\"] === [] || this.state.data[\"language\"].length === 0) languageMap = \"No language so far\";\r\n\r\n        return(\r\n            <div className=\"Profil\">\r\n                {this.state.redirect}\r\n\r\n                <DisplayMessage displayMessage={this.state.displayMessage} displayMessageFlag={this.state.displayMessageFlag} />\r\n\r\n                <img id=\"bg\" className=\"background\" src={require('./images/backgroundBig.jpg')} />\r\n\r\n                <div className=\"logo\">\r\n                    <div className=\"title1\" style={{color: \"#232323\", backgroundColor:\"#F25F5C\"}}>Junior</div>\r\n                    <div className=\"title2\">Workers</div>\r\n                </div>\r\n\r\n                <Navbar selectedLink=\"profil\" role={this.state.data[\"user\"][\"role\"]} />\r\n\r\n                <div className=\"profil-container\">\r\n                    <img className=\"profil-image\" src={\"http://localhost/junior-workers/api/uploads/\"+this.state.data[\"user\"][\"image_path\"]} />\r\n                    <div className=\"profil-header\">\r\n                        <button className=\"profil-edit-btn\" onClick={this.toggleEdit}>\r\n                            <i className=\"fa fa-edit\" id=\"edit-button\"/>\r\n                        </button>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"profil-name firstname\"\r\n                            value={this.state.data[\"user\"][\"firstname\"]}\r\n                            readOnly={this.state.readonly}\r\n                            placeholder=\"Firstname\"\r\n                            id=\"firstname\"\r\n                            onChange={this.userHeaderChange}\r\n                        />\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"profil-name lastname\"\r\n                            value={this.state.data[\"user\"][\"lastname\"]}\r\n                            readOnly={this.state.readonly}\r\n                            placeholder=\"Lastname\"\r\n                            id=\"lastname\"\r\n                            onChange={this.userHeaderChange}\r\n                        />\r\n                        <input\r\n                            type=\"text\" \r\n                            className=\"profil-headline\"\r\n                            value={this.state.data[\"user\"][\"title\"]}\r\n                            readOnly={this.state.readonly}\r\n                            placeholder=\"Profession title\"\r\n                            id=\"title\"\r\n                            onChange={this.userHeaderChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"profil-header2\">\r\n                        {editImageButtons}\r\n                        <div className=\"profil-availability\">\r\n                            {availabilityText}{availabilityButton}\r\n                        </div>\r\n                        <div className=\"profil-resume\">\r\n                            {resumeMap}\r\n                            {editResumeButtons}\r\n                        </div>\r\n                    </div>\r\n                    <form className=\"profil-content\" id=\"profil-form\" onSubmit={this.saveChanges}>\r\n                        <div className=\"title title-first\">\r\n                            <p>About</p>\r\n                        </div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            <div className=\"about\">\r\n                                <textarea\r\n                                    readOnly={this.state.readonly}\r\n                                    className=\"text\"\r\n                                    id=\"bio\"\r\n                                    onChange={this.userHeaderChange}\r\n                                    placeholder=\"Write something about yourself...\"\r\n                                    value={this.state.data[\"user\"][\"bio\"]}>\r\n                                </textarea>\r\n                                {videoMap}\r\n                                {editVideoButtons}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"title\"><p>Work Experience</p></div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            {experienceMap}\r\n                            {addExperienceButton}\r\n                        </div>\r\n                        <div className=\"title\"><p>Skills</p></div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            {skillMap}\r\n                            {addSkillButton}\r\n                        </div>\r\n                        <div className=\"title\"><p>Education</p></div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            {educationMap}\r\n                            {addEducationButton}\r\n                        </div>\r\n                        <div className=\"title\"><p>Language</p></div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            {languageMap}\r\n                            {addLanguageButton}\r\n                        </div>\r\n                        <div className=\"title\"><p>Contact Info</p></div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            Email : {this.state.data[\"user\"][\"email\"]}\r\n                        </div>\r\n                        {changeButtons}\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyCandidateProfil;","import React from 'react';\r\nimport './Profil.css';\r\nimport Navbar from './Navbar';\r\nimport  { Redirect } from 'react-router-dom';\r\nimport DisplayMessage from './DisplayMessage';\r\n\r\nclass MyHirerProfil extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            redirect: \"\",\r\n            jwt: localStorage.getItem(\"jwt\"),\r\n            editFlag: false,\r\n            disabled: true,\r\n            readonly: true,\r\n            dropListData: {\r\n                \"profession\": [],\r\n                \"skill\": [],\r\n                \"education\": [],\r\n                \"education_level\": [],\r\n                \"language\": [],\r\n                \"language_level\": []\r\n            },\r\n            data : {\r\n                \"user\": [],\r\n                \"job_post\": []\r\n            },\r\n            displayMessage: \"\",\r\n            displayMessageFlag: false\r\n        };\r\n\r\n        this.toggleEdit = this.toggleEdit.bind(this);\r\n        this.getUserData = this.getUserData.bind(this);\r\n\r\n        this.userHeaderChange = this.userHeaderChange.bind(this);\r\n        this.availabilityChange = this.availabilityChange.bind(this);\r\n\r\n        this.discardChanges = this.discardChanges.bind(this);\r\n        this.saveChanges = this.saveChanges.bind(this);\r\n        \r\n        this.userDataChange = this.userDataChange.bind(this);\r\n        this.removeUserData = this.removeUserData.bind(this);\r\n        this.addUserData = this.addUserData.bind(this);\r\n\r\n        this.getDropListData = this.getDropListData.bind(this);\r\n\r\n        this.imageChange = this.imageChange.bind(this);\r\n        this.removeImage = this.removeImage.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        localStorage.removeItem(\"email\");\r\n        if(this.state.jwt === null) {\r\n            var temp = <Redirect to=\"/\" />;\r\n            this.setState({\r\n                redirect: temp\r\n            });\r\n        }\r\n        this.getUserData();\r\n        this.getDropListData();\r\n    }\r\n\r\n    // open edit mode - be able to edit all values (remove and add new)\r\n    toggleEdit() {\r\n        this.setState({\r\n            editFlag : !this.state.editFlag\r\n        });\r\n        var button = document.getElementById(\"edit-button\");\r\n        // if you close edit without saving first, reset changes\r\n        if(button.classList.contains(\"fa-times\")) {\r\n            // change edit button icon\r\n            button.classList.remove(\"fa-times\");\r\n            button.classList.add(\"fa-edit\");\r\n        } else {\r\n            button.classList.remove(\"fa-edit\");\r\n            button.classList.add(\"fa-times\");\r\n        }\r\n        // change lock of input fields\r\n        this.setState({\r\n            disabled: !this.state.disabled,\r\n            readonly: !this.state.readonly\r\n        });\r\n    }\r\n\r\n    // handle user data input change \r\n    userHeaderChange(e) {\r\n        e.preventDefault();\r\n        var id = e.target.id;\r\n        var value = e.target.value;\r\n        var temp = this.state.data;\r\n\r\n        if(id === \"firstname\") {\r\n            temp[\"user\"][\"firstname\"] = value;\r\n        } else if(id === \"lastname\") {\r\n            temp[\"user\"][\"lastname\"] = value;\r\n        } else if(id === \"title\") {\r\n            temp[\"user\"][\"title\"] = value;\r\n        } else if(id === \"bio\") {\r\n            temp[\"user\"][\"bio\"] = value;\r\n        }\r\n\r\n        this.setState({\r\n            data: temp\r\n        });\r\n    }\r\n\r\n    // handle the change state of availability\r\n    availabilityChange() {\r\n        var temp;\r\n        if(this.state.data[\"user\"][\"availability\"] === \"1\") {\r\n            temp = this.state.data;\r\n            temp[\"user\"][\"availability\"] = \"0\";\r\n            this.setState({\r\n                data: temp\r\n            });\r\n        } else {\r\n            temp = this.state.data;\r\n            temp[\"user\"][\"availability\"] = \"1\";\r\n            this.setState({\r\n                data: temp\r\n            });\r\n        }\r\n    }\r\n\r\n    // handle user's data input change\r\n    // each Data component is distinguished by an id with the form : nameOfData__indexInJson__nameOfItem\r\n    // ex. skill__0__title means the data item skill with index 0 and name title called the function \r\n    userDataChange(e) {\r\n        e.preventDefault();\r\n        var value = e.target.value;\r\n        var attr = e.target.id.split(\"__\");\r\n        var dataName = attr[0];\r\n        var index = attr[1];\r\n        var name = attr[2];\r\n        var temp = this.state.data;\r\n        temp[dataName][index][name] = value;\r\n        this.setState({\r\n            data: temp\r\n        });\r\n    }\r\n\r\n    // add user's skill item\r\n    addUserData(e) {\r\n        e.preventDefault();\r\n        var temp = this.state.data;\r\n        var dataName = e.target.name;\r\n        if(dataName === \"job_post\") {\r\n            temp[\"job_post\"].push({\r\n                \"id_profession\": this.state.dropListData.profession[0].id_profession,\r\n                \"title\": \"\",\r\n                \"description\": \"\"\r\n            });\r\n        }\r\n        this.setState({\r\n            data: temp\r\n        });\r\n    }\r\n\r\n    // remove user's data\r\n    // each data component remove button is distinguished by an id with the form : dataName__indexInJson__remove\r\n    // ex. skill__0__title means the data item experience with index 0 and name title will be removed from json \r\n    removeUserData(e) {\r\n        e.preventDefault();\r\n        var attr = e.target.id.split(\"__\");\r\n        var dataName = attr[0];\r\n        var index = attr[1];\r\n        var temp = this.state.data;\r\n        temp[dataName][index] = \"\";\r\n        this.setState({\r\n            data: temp\r\n        });\r\n    }\r\n\r\n    // remove all user's data and get them from db again\r\n    discardChanges() {\r\n        this.setState({\r\n            data : {\r\n                \"user\": [],\r\n                \"job_post\": []\r\n            }\r\n        });\r\n        this.getUserData();\r\n        this.toggleEdit();\r\n    }\r\n\r\n    async imageChange(e) {\r\n        e.preventDefault();\r\n\r\n        var file = document.getElementById(\"image-file\").files[0];\r\n        var fileName = file.name;\r\n        var extensions = [\"png\", \"jpg\", \"jpeg\"];\r\n        var fileExtention = fileName.split(\".\").pop().toLowerCase();\r\n        //var fileSize = file.size;\r\n\r\n        if(extensions.includes(fileExtention)) {\r\n           /*\r\n            NOTE : codes returned from the post-image.php\r\n            $SUCCESS_CODE = \"0\";\r\n            $ERROR_CODE = \"1\";\r\n            $ERROR_FORMAT_CODE = \"2\";\r\n            $ERROR_SIZE_CODE = \"3\";\r\n            */\r\n\r\n            // procced to upload image\r\n            const url = 'http://localhost:80//junior-workers/api/post-image.php';\r\n            //const data = {\"jwt\": this.state.jwt, \"data\": this.state.imageFile};\r\n            var formData = new FormData();\r\n            formData.append(\"image_file\", file);\r\n            formData.append(\"jwt\", this.state.jwt);\r\n\r\n            try {\r\n                const response = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: formData,\r\n                });\r\n                const json = await response.json();\r\n                if(response.status !== 200) {\r\n                    if(json[\"code\"] === \"1\") {\r\n                        this.setState({\r\n                            displayMessage: \"Unable to upload image\",\r\n                        });\r\n                    } else if (json[\"code\"] === \"2\") {\r\n                        this.setState({\r\n                            displayMessage: \"Image not in proper format\",\r\n                        });\r\n                    } else if (json[\"code\"] === \"3\") {\r\n                        this.setState({\r\n                            displayMessage: \"Image's size cannot be larger than 10mb\",\r\n                        });\r\n                    }\r\n                }\r\n                else if (response.status === 200 && json[\"code\"] === \"0\") {\r\n                    this.setState({\r\n                        displayMessage: \"Profil image has been updated\"\r\n                    });\r\n                    this.getUserData();\r\n                }\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n                this.setState({\r\n                    displayMessage: \"Unable to upload image\",\r\n                });\r\n            }\r\n        } else {\r\n            this.setState({\r\n                displayMessage: \"File doesn't have valid image extension.\",\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            displayMessageFlag: !this.state.displayMessageFlag\r\n        });\r\n        \r\n    }\r\n\r\n    // remove user's image\r\n    async removeImage() {\r\n\r\n        var url = 'http://localhost:80//junior-workers/api/remove-user-image.php';\r\n        var data = {\"jwt\": this.state.jwt};\r\n\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to post user's data\");\r\n                this.setState({\r\n                    displayMessage: \"Unable to remove image\",\r\n                    displayMessageFlag: !this.state.displayMessageFlag\r\n                });\r\n            }\r\n            else if (response.status === 200) {\r\n                //var json = await response.json();\r\n                //console.log(\"Data posted\");\r\n                this.setState({\r\n                    displayMessage: \"Profil image has been removed\",\r\n                    displayMessageFlag: !this.state.displayMessageFlag\r\n                });\r\n                this.getUserData();\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    // post all user's data changes to db\r\n    async saveChanges(e) {\r\n        e.preventDefault();\r\n\r\n        var url = 'http://localhost:80//junior-workers/api/post-user-data.php';\r\n        var data = {\"jwt\": this.state.jwt, \"data\": this.state.data};\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to post user's data\")\r\n            }\r\n            else if (response.status === 200) {\r\n                //var json = await response.json();\r\n                //console.log(\"Data posted\");\r\n                this.getUserData();\r\n                this.toggleEdit();\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    // Get all user's data using their jwt auth\r\n    async getUserData() {\r\n        var url = 'http://localhost:80//junior-workers/api/get-user-data.php';\r\n        var data = {\"jwt\": this.state.jwt};\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to get user's data\")\r\n            }\r\n            else if (response.status === 200) {\r\n                var json = await response.json();\r\n                this.setState({data : json});\r\n\r\n                // if the returned data are for a hirer and not a candidate, open the hirer's profil\r\n                var temp = \"\";\r\n                if(this.state.data[\"user\"][\"role\"] === \"candidate\") {\r\n                    temp = <Redirect to=\"/my-candidate-profil\" />;\r\n                }\r\n                this.setState({redirect: temp});\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    async getDropListData() {\r\n        var url = 'http://localhost:80//junior-workers/api/get-droplist-data.php';\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            });\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to get drop list data\")\r\n            }\r\n            else if (response.status === 200) {\r\n                var json = await response.json();\r\n                this.setState({\r\n                    dropListData: json\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        // On edit mode change\r\n        var changeButtons = \"\";\r\n        var availabilityButton = \"\";\r\n        var addJobPostButton = \"\";\r\n        var editImageButtons = \"\";\r\n\r\n        if(this.state.editFlag) {\r\n            // display save and exit changes button\r\n            changeButtons = <div className=\"change-buttons\">\r\n                                <button type=\"submit\"><i className=\"fa fa-check\" /></button>\r\n                                <button onClick={this.discardChanges}><i className=\"fa fa-times\" /></button>\r\n                            </div>;\r\n            // add availability change button\r\n            availabilityButton = <button className=\"profil-availability-button\" onClick={this.availabilityChange}>\r\n                                    <i className=\"fa fa-refresh\" />\r\n                                </button>;\r\n            // display add experience option\r\n            addJobPostButton = <button className=\"add-btn\" onClick={this.addUserData} name=\"job_post\">\r\n                                    <i className=\"fa fa-plus\" />Add Job Post\r\n                                </button>;\r\n            // display buttons to edit profil image\r\n            editImageButtons = <div className=\"profil-image-buttons\">\r\n                                    <label htmlFor=\"image-file\" title=\"upload new profil picture\">\r\n                                        <i className=\"fa fa-upload\" />\r\n                                    </label>\r\n                                    <input id=\"image-file\" type=\"file\" onChange={this.imageChange} name=\"image\" />\r\n                                    <button title=\"remove saved profil picture\" onClick={this.removeImage}>\r\n                                        <i className=\"fa fa-trash\" />\r\n                                    </button>\r\n                                </div>;\r\n        }\r\n\r\n        // display availability according to state\r\n        var availabilityText = <p>Not Hiring</p>;\r\n        if(this.state.data[\"user\"][\"availability\"] === \"1\") availabilityText = <p>Hiring</p>; \r\n\r\n        // Map jobPost from json to div\r\n        var jobPostMap = [];\r\n        this.state.data[\"job_post\"].forEach((item, index) => {\r\n            if(item !== \"\"){\r\n                // display remove job if you are on edit mode\r\n                var removeButton = \"\";\r\n                if(this.state.editFlag) {\r\n                    removeButton = <button className=\"work-remove\" id={\"job_post__\"+index+\"__remove\"} onClick={this.removeUserData}>\r\n                        <i className=\"fa fa-times\" />\r\n                    </button>;\r\n                }\r\n                // map all professions into option - select\r\n                var professionMap = [];\r\n                this.state.dropListData[\"profession\"].forEach((pro_item, pro_index) => {\r\n                    professionMap.push(\r\n                        <option value={pro_item.id_profession} key={\"profession_option__\"+index+\"__\"+pro_index}>{pro_item.title}</option>\r\n                    );\r\n                });\r\n                // push job_post div\r\n                jobPostMap.push(\r\n                    <div className=\"post\" key={\"job_post\"+index}>\r\n                        <p className=\"post-label\">Job title</p>\r\n                        <textarea\r\n                            type=\"text\" \r\n                            readOnly={this.state.readonly} \r\n                            id={\"job_post__\"+index+\"__title\"} \r\n                            onChange={this.userDataChange} \r\n                            defaultValue={item.title}\r\n                            placeholder=\"Job title\"\r\n                            required={true} />\r\n                        <p className=\"post-label\">Looking for</p>\r\n                        <select \r\n                            id={\"job_post__\"+index+\"__id_profession\"}\r\n                            disabled={this.state.disabled} \r\n                            value={item.id_profession}\r\n                            onChange={this.userDataChange} >\r\n                            {professionMap}\r\n                        </select>\r\n                        <p className=\"post-label\">Job Description</p>\r\n                        <textarea \r\n                            readOnly={this.state.readonly} \r\n                            id={\"job_post__\"+index+\"__description\"} \r\n                            onChange={this.userDataChange} \r\n                            defaultValue={item.description}\r\n                            placeholder=\"Describe the position for the job here\"\r\n                            required={true} />\r\n                        {removeButton}\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n        if(this.state.data[\"job_post\"] === [] || this.state.data[\"job_post\"].length === 0) jobPostMap = \"No Job posts yet\";\r\n        \r\n        return(\r\n            <div className=\"Profil\">\r\n                {this.state.redirect}\r\n\r\n                <DisplayMessage displayMessage={this.state.displayMessage} displayMessageFlag={this.state.displayMessageFlag} />\r\n\r\n                <img id=\"bg\" className=\"background\" src={require('./images/backgroundBig.jpg')} />\r\n\r\n                <div className=\"logo\">\r\n                    <div className=\"title1\" style={{color: \"#232323\", backgroundColor:\"#F25F5C\"}}>Junior</div>\r\n                    <div className=\"title2\">Workers</div>\r\n                </div>\r\n\r\n                <Navbar selectedLink=\"profil\" role={this.state.data[\"user\"][\"role\"]} />\r\n\r\n                <div className=\"profil-container\">\r\n                    <img className=\"profil-image\" src={\"http://localhost/junior-workers/api/uploads/\"+this.state.data[\"user\"][\"image_path\"]} />\r\n                    <div className=\"profil-header\">\r\n                        <button className=\"profil-edit-btn\" onClick={this.toggleEdit}>\r\n                            <i className=\"fa fa-edit\" id=\"edit-button\"/>\r\n                        </button>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"profil-name firstname\"\r\n                            value={this.state.data[\"user\"][\"firstname\"]}\r\n                            readOnly={this.state.readonly}\r\n                            placeholder=\"Firstname\"\r\n                            id=\"firstname\"\r\n                            onChange={this.userHeaderChange}\r\n                        />\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"profil-name lastname\"\r\n                            value={this.state.data[\"user\"][\"lastname\"]}\r\n                            readOnly={this.state.readonly}\r\n                            placeholder=\"Lastname\"\r\n                            id=\"lastname\"\r\n                            onChange={this.userHeaderChange}\r\n                        />\r\n                        <input\r\n                            type=\"text\" \r\n                            className=\"profil-headline\"\r\n                            value={this.state.data[\"user\"][\"title\"]}\r\n                            readOnly={this.state.readonly}\r\n                            placeholder=\"Company name\"\r\n                            id=\"title\"\r\n                            onChange={this.userHeaderChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"profil-header2\">\r\n                        {editImageButtons}\r\n                        <div className=\"profil-availability\">\r\n                            {availabilityText}{availabilityButton}\r\n                        </div>\r\n                    </div>\r\n                    <form className=\"profil-content\" id=\"profil-form\" onSubmit={this.saveChanges}>\r\n                        <div className=\"title title-first\">\r\n                            <p>About</p>\r\n                        </div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            <div className=\"about\">\r\n                                <textarea\r\n                                    readOnly={this.state.readonly}\r\n                                    className=\"text\"\r\n                                    id=\"bio\"\r\n                                    onChange={this.userHeaderChange}\r\n                                    placeholder=\"Write something about your company...\"\r\n                                    value={this.state.data[\"user\"][\"bio\"]}>\r\n                                </textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"title\"><p>Job Posts</p></div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            {jobPostMap}\r\n                            {addJobPostButton}\r\n                        </div>\r\n                        <div className=\"title\"><p>Contact Info</p></div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            Email : {this.state.data[\"user\"][\"email\"]}\r\n                        </div>\r\n                        {changeButtons}\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyHirerProfil;","import React from 'react';\r\nimport './Profil.css';\r\nimport Navbar from './Navbar';\r\nimport  { Redirect } from 'react-router-dom';\r\n\r\nclass CandidateProfil extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            redirect: \"\",\r\n            email: localStorage.getItem(\"email\"), // email to get data from\r\n            role: localStorage.getItem(\"role\"), // role of user to setup navbar\r\n            jwt: localStorage.getItem(\"jwt\"),\r\n            disabled: true,\r\n            readonly: true,\r\n            data : {\r\n                \"user\": [],\r\n                \"experience\": [],\r\n                \"skill\": [],\r\n                \"education\": [],\r\n                \"language\": [],\r\n                \"job_post\": []\r\n            },\r\n            dropListData: {\r\n                \"profession\": [],\r\n                \"skill\": [],\r\n                \"education\": [],\r\n                \"education_level\": [],\r\n                \"language\": [],\r\n                \"language_level\": []\r\n            },\r\n            navbar: \"\"\r\n        };\r\n        this.getUserData = this.getUserData.bind(this);\r\n        this.getDropListData = this.getDropListData.bind(this);\r\n        this.redirectBack = this.redirectBack.bind(this);\r\n        this.downloadResume = this.downloadResume.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.state.email === \"\" || this.state.email === null) {\r\n            var temp = <Redirect to=\"/\" />;\r\n            this.setState({\r\n                redirect: temp\r\n            });\r\n        } else {\r\n            this.getDropListData();\r\n            this.getUserData();\r\n        }\r\n    }\r\n\r\n    async getDropListData() {\r\n        var url = 'http://localhost:80//junior-workers/api/get-droplist-data.php';\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            });\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to get drop list data\")\r\n            }\r\n            else if (response.status === 200) {\r\n                var json = await response.json();\r\n                this.setState({\r\n                    dropListData: json\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    // Get all user's data using their email\r\n    async getUserData() {\r\n        var url = 'http://localhost:80//junior-workers/api/get-view-user-data.php';\r\n        var data = {\r\n            \"email\": this.state.email\r\n        };\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to get user's data\");\r\n                var temp = <Redirect to=\"/search\" />;\r\n                this.setState({redirect: temp});\r\n            }\r\n            else if (response.status === 200) {\r\n                var json = await response.json();\r\n                this.setState({data : json});\r\n\r\n                // if the user is logged in show the navbar too.\r\n                if(this.state.jwt !== null && this.state.jwt !== \"\") {\r\n                    var tmp = <Navbar selectedLink=\"nothing\" role={this.state.role} />\r\n                    this.setState({\r\n                        navbar: tmp\r\n                    });\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    async downloadResume() {\r\n        /*\r\n        NOTE : codes returned from the get-user-resume.php\r\n        $SUCCESS_CODE = \"0\";\r\n        $ERROR_CODE = \"1\";\r\n        $FILE_CANNOT_FOUND_CODE = \"2\";\r\n        */\r\n\r\n        // procced to upload resume\r\n        const url = 'http://localhost:80//junior-workers/api/get-user-resume.php';\r\n        // const data = {\r\n        //     \"jwt\": this.state.jwt,\r\n        //     \"email\": this.state[\"data\"][\"user\"][\"email\"]\r\n        // };\r\n        var formData = new FormData();\r\n        formData.append(\"email\", this.state.email);\r\n\r\n        fetch(url, {\r\n                method: 'POST',\r\n                body: formData,\r\n            })\r\n\t\t\t.then(response => {\r\n                if(response.status === 200) {\r\n                    response.blob().then(blob => {\r\n                        let url = window.URL.createObjectURL(blob);\r\n                        let a = document.createElement('a');\r\n                        a.href = url;\r\n                        a.download = 'resume.pdf';\r\n                        a.click();\r\n                    });\r\n                    //window.location.href = response.url;\r\n                } else {\r\n                    this.setState({\r\n                        displayMessage: \"Unable to download resume\",\r\n                        displayMessageFlag: !this.state.displayMessageFlag\r\n                    });\r\n                }\r\n\t\t});\r\n    }\r\n\r\n    redirectBack() {\r\n        var temp = <Redirect to=\"/search\" />;\r\n        this.setState({redirect: temp});\r\n    }\r\n\r\n    render() {\r\n\r\n        // display video if the user has any\r\n        var videoMap = \"\";\r\n        if(this.state.data[\"user\"][\"video_path\"] !== \"\" && this.state.data[\"user\"][\"video_path\"] !== null) {\r\n            videoMap = <video \r\n                            className=\"video\"\r\n                            type=\"video/mp4\"\r\n                            src={\"http://localhost/junior-workers/api/uploads/\"+this.state.data[\"user\"][\"video_path\"]}\r\n                            controls={true}>\r\n                            Unable to play video. Please consider updating your browser.\r\n                        </video>;\r\n        }\r\n\r\n        // display resume if the user has\r\n        var resumeMap = \"\";\r\n        if(this.state.data[\"user\"][\"resume_path\"] !== \"\" && this.state.data[\"user\"][\"resume_path\"] !== null) {\r\n            resumeMap = <button className=\"profil-resume-button\" onClick={this.downloadResume} >\r\n                            <i className=\"fa fa-arrow-down\" />\r\n                            Resume\r\n                        </button>;\r\n        } \r\n\r\n        // display availability according to state\r\n        var availabilityText = <p>Not available</p>;\r\n        if(this.state.data[\"user\"][\"availability\"] === \"1\") availabilityText = <p>Available</p>; \r\n\r\n        // Map experience from json to div\r\n        var experienceMap = [];\r\n        this.state.data[\"experience\"].forEach((item, index) => {\r\n            if(item !== \"\"){\r\n                // display remove job if you are on edit mode\r\n                var removeButton = \"\";\r\n                if(this.state.editFlag) {\r\n                    removeButton = <button className=\"work-remove\" id={\"experience__\"+index+\"__remove\"} onClick={this.removeUserData}>\r\n                        <i className=\"fa fa-times\" />\r\n                    </button>;\r\n                }\r\n                // map all professions into option - select\r\n                var professionMap = [];\r\n                this.state.dropListData[\"profession\"].forEach((pro_item, pro_index) => {\r\n                    professionMap.push(\r\n                        <option value={pro_item.id_profession} key={\"profession_option__\"+index+\"__\"+pro_index}>{pro_item.title}</option>\r\n                    );\r\n                });\r\n                // push experience div\r\n                experienceMap.push(\r\n                    <div className=\"work\" key={\"experience\"+index}>\r\n                        <p className=\"work-label\">Worked as</p>\r\n                        <select \r\n                            id={\"experience__\"+index+\"__id_profession\"}\r\n                            disabled={this.state.disabled} \r\n                            value={item.id_profession} >\r\n                            {professionMap}\r\n                        </select>\r\n                        <p className=\"work-label\">At</p>\r\n                        <input \r\n                            type=\"text\" \r\n                            readOnly={this.state.readonly} \r\n                            id={\"experience__\"+index+\"__company\"} \r\n                            defaultValue={item.company}\r\n                            placeholder=\"company\"\r\n                            required={true} />\r\n                        <p className=\"work-label\">Between</p>\r\n                        <input \r\n                            type=\"text\" \r\n                            readOnly={this.state.readonly} \r\n                            id={\"experience__\"+index+\"__date\"} \r\n                            defaultValue={item.date}\r\n                            placeholder=\"date\"\r\n                            required={true} />\r\n                        {removeButton}\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n        if(this.state.data[\"experience\"] === [] || this.state.data[\"experience\"].length === 0) experienceMap = \"No experience added so far\";\r\n        \r\n        // Map skill from json to div\r\n        var skillMap = [];\r\n        this.state.data[\"skill\"].forEach((item, index) => {\r\n            if(item !== \"\"){\r\n                // map all skills into option - select\r\n                var skillsMap = [];\r\n                this.state.dropListData[\"skill\"].forEach((pro_item, pro_index) => {\r\n                    skillsMap.push(\r\n                        <option value={pro_item.id_skill} key={\"skill_option__\"+index+\"__\"+pro_index}>{pro_item.title}</option>\r\n                    );\r\n                });\r\n                // push skill div\r\n                skillMap.push(\r\n                    <div className=\"skill\" key={\"skill\"+index}>\r\n                        <div className=\"skill-dot\"></div>\r\n                        <select \r\n                            id={\"skill__\"+index+\"__id_skill\"}\r\n                            disabled={this.state.disabled} \r\n                            value={item.id_skill} >\r\n                            {skillsMap}\r\n                        </select>\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n        if(this.state.data[\"skill\"] === [] || this.state.data[\"skill\"].length === 0) skillMap = \"No skills so far\";\r\n\r\n        // Map education from json to div\r\n        var educationMap = [];\r\n        this.state.data[\"education\"].forEach((item, index) => {\r\n            if(item !== \"\"){\r\n                // display remove education if you are on edit mode\r\n                var removeButton = \"\";\r\n                if(this.state.editFlag) {\r\n                    removeButton = <button className=\"education-remove\" id={\"education__\"+index+\"__remove\"} onClick={this.removeUserData}>\r\n                        <i className=\"fa fa-times\" />\r\n                    </button>;\r\n                }\r\n                // map all education into option - select\r\n                var allEducationMap = [];\r\n                this.state.dropListData[\"education\"].forEach((pro_item, pro_index) => {\r\n                    allEducationMap.push(\r\n                        <option value={pro_item.id_education} key={\"education_option__\"+index+\"__\"+pro_index}>{pro_item.title}</option>\r\n                    );\r\n                });\r\n                // map all education levels into option - select\r\n                var allEducationLevelsMap = [];\r\n                this.state.dropListData[\"education_level\"].forEach((pro_item, pro_index) => {\r\n                    allEducationLevelsMap.push(\r\n                        <option value={pro_item.id_education_level} key={\"education_level_option__\"+index+\"__\"+pro_index}>{pro_item.title}</option>\r\n                    );\r\n                });\r\n                // push education div\r\n                educationMap.push(\r\n                    <div className=\"education\" key={\"education\"+index}>\r\n                        <div className=\"education-dot\"></div>\r\n                        <select \r\n                            id={\"education__\"+index+\"__id_education_level\"}\r\n                            disabled={this.state.disabled} \r\n                            value={item.id_education_level} >\r\n                            {allEducationLevelsMap}\r\n                        </select>\r\n                        <select \r\n                            id={\"education__\"+index+\"__id_education\"}\r\n                            disabled={this.state.disabled}\r\n                            value={item.id_education} >\r\n                            {allEducationMap}\r\n                        </select>\r\n                        {removeButton}\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n        if(this.state.data[\"education\"] === [] || this.state.data[\"education\"].length === 0) educationMap = \"No education added so far\";\r\n\r\n        // Map language from json to div\r\n        var languageMap = [];\r\n        this.state.data[\"language\"].forEach((item, index) => {\r\n            if(item !== \"\"){\r\n                // display remove language if you are on edit mode\r\n                var removeButton = \"\";\r\n                if(this.state.editFlag) {\r\n                    removeButton = <button className=\"language-remove\" id={\"language__\"+index+\"__remove\"} onClick={this.removeUserData}>\r\n                        <i className=\"fa fa-times\" />\r\n                    </button>;\r\n                }\r\n                // map all language into option - select\r\n                var allLanguageMap = [];\r\n                this.state.dropListData[\"language\"].forEach((pro_item, pro_index) => {\r\n                    allLanguageMap.push(\r\n                        <option value={pro_item.id_language} key={\"language_option__\"+index+\"__\"+pro_index}>{pro_item.title}</option>\r\n                    );\r\n                });\r\n                // map all language levels into option - select\r\n                var allLanguageLevelsMap = [];\r\n                this.state.dropListData[\"language_level\"].forEach((pro_item, pro_index) => {\r\n                    allLanguageLevelsMap.push(\r\n                        <option value={pro_item.id_language_level} key={\"language_level_option__\"+index+\"__\"+pro_index}>{pro_item.title}</option>\r\n                    );\r\n                });\r\n                // push language div\r\n                languageMap.push(\r\n                    <div className=\"language\" key={\"language\"+index}>\r\n                        <div className=\"language-dot\"></div>\r\n                        <select \r\n                            id={\"language__\"+index+\"__id_language_level\"}\r\n                            disabled={this.state.disabled}\r\n                            value={item.id_language_level} >\r\n                            {allLanguageLevelsMap}\r\n                        </select>\r\n                        <select \r\n                            id={\"language__\"+index+\"__id_language\"} \r\n                            value={item.id_language}\r\n                            disabled={this.state.disabled} >\r\n                            {allLanguageMap}\r\n                        </select>\r\n                        {removeButton}\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n        if(this.state.data[\"language\"] === [] || this.state.data[\"language\"].length === 0) languageMap = \"No languages added so far\";\r\n\r\n        return(\r\n            <div className=\"Profil\">\r\n                {this.state.redirect}\r\n\r\n                <img id=\"bg\" className=\"background\" src={require('./images/backgroundBig.jpg')} />\r\n\r\n                <div className=\"logo\">\r\n                    <div className=\"title1\" style={{color: \"#232323\", backgroundColor:\"#F25F5C\"}}>Junior</div>\r\n                    <div className=\"title2\">Workers</div>\r\n                </div>\r\n\r\n                {this.state.navbar}\r\n\r\n                <div className=\"profil-container\">\r\n                    <img className=\"profil-image\" src={\"http://localhost/junior-workers/api/uploads/\"+this.state.data[\"user\"][\"image_path\"]} />\r\n                    <div className=\"profil-header\">\r\n                        <button className=\"profil-edit-btn\" onClick={this.redirectBack}>\r\n                            <i className=\"fa fa-arrow-left\" id=\"edit-button\"/>\r\n                        </button>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"profil-name firstname\"\r\n                            value={this.state.data[\"user\"][\"firstname\"]}\r\n                            readOnly={this.state.readonly}\r\n                            placeholder=\"Firstname\"\r\n                            id=\"firstname\"\r\n                        />\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"profil-name lastname\"\r\n                            value={this.state.data[\"user\"][\"lastname\"]}\r\n                            readOnly={this.state.readonly}\r\n                            placeholder=\"Lastname\"\r\n                            id=\"lastname\"\r\n                        />\r\n                        <input\r\n                            type=\"text\" \r\n                            className=\"profil-headline\"\r\n                            value={this.state.data[\"user\"][\"title\"]}\r\n                            readOnly={this.state.readonly}\r\n                            placeholder=\"Profession title\"\r\n                            id=\"title\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"profil-header2\">\r\n                        <div className=\"profil-availability\">\r\n                            {availabilityText}\r\n                        </div>\r\n                        <div className=\"profil-resume\">\r\n                            {resumeMap}\r\n                        </div>\r\n                    </div>\r\n                    <form className=\"profil-content\" id=\"profil-form\">\r\n                        <div className=\"title title-first\">\r\n                            <p>About</p>\r\n                        </div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            <div className=\"about\">\r\n                                <textarea\r\n                                    readOnly={this.state.readonly}\r\n                                    className=\"text\"\r\n                                    id=\"bio\"\r\n                                    placeholder=\"Write something about yourself...\"\r\n                                    value={this.state.data[\"user\"][\"bio\"]}>\r\n                                </textarea>\r\n                                {videoMap}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"title\"><p>Work Experience</p></div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            {experienceMap}\r\n                        </div>\r\n                        <div className=\"title\"><p>Skills</p></div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            {skillMap}\r\n                        </div>\r\n                        <div className=\"title\"><p>Education</p></div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            {educationMap}\r\n                        </div>\r\n                        <div className=\"title\"><p>Language</p></div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            {languageMap}\r\n                        </div>\r\n                        <div className=\"title\"><p>Contact Info</p></div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            Email : {this.state.data[\"user\"][\"email\"]}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CandidateProfil;","import React from 'react';\r\nimport './Profil.css';\r\nimport Navbar from './Navbar';\r\nimport  { Redirect } from 'react-router-dom';\r\nimport DisplayMessage from './DisplayMessage';\r\n\r\nclass HirerProfil extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            redirect: \"\",\r\n            email: localStorage.getItem(\"email\"),\r\n            role: localStorage.getItem(\"role\"),\r\n            jwt: localStorage.getItem(\"jwt\"),\r\n            editFlag: false,\r\n            disabled: true,\r\n            readonly: true,\r\n            dropListData: {\r\n                \"profession\": [],\r\n                \"skill\": [],\r\n                \"education\": [],\r\n                \"education_level\": [],\r\n                \"language\": [],\r\n                \"language_level\": []\r\n            },\r\n            data : {\r\n                \"user\": [],\r\n                \"experience\": [],\r\n                \"skill\": [],\r\n                \"education\": [],\r\n                \"language\": [],\r\n                \"job_post\": []\r\n            },\r\n            displayMessage: \"\",\r\n            displayMessageFlag: false,\r\n            navbar: \"\"\r\n        };\r\n        this.getUserData = this.getUserData.bind(this);\r\n\r\n        this.getDropListData = this.getDropListData.bind(this);\r\n        \r\n        this.redirectBack = this.redirectBack.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.state.email === \"\" || this.state.email === null) {\r\n            var temp = <Redirect to=\"/\" />;\r\n            this.setState({\r\n                redirect: temp\r\n            });\r\n        } else {\r\n            this.getDropListData();\r\n            this.getUserData();\r\n        }\r\n    }\r\n\r\n    // Get all user's data using their email\r\n    async getUserData() {\r\n        var url = 'http://localhost:80//junior-workers/api/get-view-user-data.php';\r\n        var data = {\r\n            \"email\": this.state.email\r\n        };\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to get user's data\");\r\n                var temp = <Redirect to=\"/search\" />;\r\n                this.setState({redirect: temp});\r\n            }\r\n            else if (response.status === 200) {\r\n                var json = await response.json();\r\n                this.setState({data : json});\r\n\r\n                // if the user is logged in show the navbar too.\r\n                if(this.state.jwt !== null && this.state.jwt !== \"\") {\r\n                    var tmp = <Navbar selectedLink=\"nothing\" role={this.state.role} />\r\n                    this.setState({\r\n                        navbar: tmp\r\n                    });\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    async getDropListData() {\r\n        var url = 'http://localhost:80//junior-workers/api/get-droplist-data.php';\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            });\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to get drop list data\")\r\n            }\r\n            else if (response.status === 200) {\r\n                var json = await response.json();\r\n                this.setState({\r\n                    dropListData: json\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    redirectBack() {\r\n        var temp = <Redirect to=\"/search\" />;\r\n        this.setState({redirect: temp});\r\n    }\r\n\r\n    render() {\r\n\r\n        // display availability according to state\r\n        var availabilityText = <p>Not Hiring</p>;\r\n        if(this.state.data[\"user\"][\"availability\"] === \"1\") availabilityText = <p>Hiring</p>; \r\n\r\n        // Map jobPost from json to div\r\n        var jobPostMap = [];\r\n        this.state.data[\"job_post\"].forEach((item, index) => {\r\n            if(item !== \"\"){\r\n                // map all professions into option - select\r\n                var professionMap = [];\r\n                this.state.dropListData[\"profession\"].forEach((pro_item, pro_index) => {\r\n                    professionMap.push(\r\n                        <option value={pro_item.id_profession} key={\"profession_option__\"+index+\"__\"+pro_index}>{pro_item.title}</option>\r\n                    );\r\n                });\r\n                // push job_post div\r\n                jobPostMap.push(\r\n                    <div className=\"post\" key={\"job_post\"+index}>\r\n                        <p className=\"post-label\">Job title</p>\r\n                        <textarea\r\n                            type=\"text\" \r\n                            readOnly={this.state.readonly} \r\n                            id={\"job_post__\"+index+\"__title\"} \r\n                            defaultValue={item.title}\r\n                            placeholder=\"Job title\"\r\n                            required={true} />\r\n                        <p className=\"post-label\">Looking for</p>\r\n                        <select \r\n                            id={\"job_post__\"+index+\"__id_profession\"}\r\n                            disabled={this.state.disabled} \r\n                            value={item.id_profession} >\r\n                            {professionMap}\r\n                        </select>\r\n                        <p className=\"post-label\">Job Description</p>\r\n                        <textarea \r\n                            readOnly={this.state.readonly} \r\n                            id={\"job_post__\"+index+\"__description\"} \r\n                            defaultValue={item.description}\r\n                            placeholder=\"Describe the position for the job here\"\r\n                            required={true} />\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n        if(this.state.data[\"job_post\"] === [] || this.state.data[\"job_post\"].length === 0) jobPostMap = \"No Job posts yet\";\r\n        \r\n        return(\r\n            <div className=\"Profil\">\r\n                {this.state.redirect}\r\n\r\n                <DisplayMessage displayMessage={this.state.displayMessage} displayMessageFlag={this.state.displayMessageFlag} />\r\n\r\n                <img id=\"bg\" className=\"background\" src={require('./images/backgroundBig.jpg')} />\r\n\r\n                <div className=\"logo\">\r\n                    <div className=\"title1\" style={{color: \"#232323\", backgroundColor:\"#F25F5C\"}}>Junior</div>\r\n                    <div className=\"title2\">Workers</div>\r\n                </div>\r\n\r\n                {this.state.navbar}\r\n\r\n                <div className=\"profil-container\">\r\n                    <img className=\"profil-image\" src={\"http://localhost/junior-workers/api/uploads/\"+this.state.data[\"user\"][\"image_path\"]} />\r\n                    <div className=\"profil-header\">\r\n                        <button className=\"profil-edit-btn\" onClick={this.redirectBack}>\r\n                            <i className=\"fa fa-arrow-left\" id=\"edit-button\"/>\r\n                        </button>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"profil-name firstname\"\r\n                            value={this.state.data[\"user\"][\"firstname\"]}\r\n                            readOnly={this.state.readonly}\r\n                            placeholder=\"Firstname\"\r\n                            id=\"firstname\"\r\n                        />\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"profil-name lastname\"\r\n                            value={this.state.data[\"user\"][\"lastname\"]}\r\n                            readOnly={this.state.readonly}\r\n                            placeholder=\"Lastname\"\r\n                            id=\"lastname\"\r\n                        />\r\n                        <input\r\n                            type=\"text\" \r\n                            className=\"profil-headline\"\r\n                            value={this.state.data[\"user\"][\"title\"]}\r\n                            readOnly={this.state.readonly}\r\n                            placeholder=\"Company name\"\r\n                            id=\"title\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"profil-header2\">\r\n                        <div className=\"profil-availability\">\r\n                            {availabilityText}\r\n                        </div>\r\n                    </div>\r\n                    <form className=\"profil-content\" id=\"profil-form\" onSubmit={this.saveChanges}>\r\n                        <div className=\"title title-first\">\r\n                            <p>About</p>\r\n                        </div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            <div className=\"about\">\r\n                                <textarea\r\n                                    readOnly={this.state.readonly}\r\n                                    className=\"text\"\r\n                                    id=\"bio\"\r\n                                    placeholder=\"Write something about your company...\"\r\n                                    value={this.state.data[\"user\"][\"bio\"]}>\r\n                                </textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"title\"><p>Job Posts</p></div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            {jobPostMap}\r\n                        </div>\r\n                        <div className=\"title\"><p>Contact Info</p></div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            Email : {this.state.data[\"user\"][\"email\"]}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HirerProfil;","import React from 'react';\r\nimport './Search.css';\r\nimport Navbar from './Navbar.js';\r\nimport  { Redirect } from 'react-router-dom';\r\n\r\nclass Search extends React.Component{\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            redirect: \"\",\r\n            jwt: localStorage.getItem(\"jwt\"),\r\n            dropListData: {\r\n                \"profession\": [],\r\n                \"skill\": [],\r\n                \"education\": [],\r\n                \"education_level\": [],\r\n                \"language\": [],\r\n                \"language_level\": []\r\n            },\r\n            data : {\r\n                \"user\": [],\r\n                \"experience\": [],\r\n                \"skill\": [],\r\n                \"education\": [],\r\n                \"language\": [],\r\n                \"job_post\": []\r\n            },\r\n            navbar: \"\",\r\n            searchType: \"candidate\",\r\n            searchInput: \"\",\r\n            results: [\r\n                {\r\n                    \"role\":\"candidate\"\r\n                }\r\n            ],\r\n            load: \"candidate\"\r\n        };\r\n\r\n        this.changeSearchType = this.changeSearchType.bind(this);\r\n        this.changeSearchInput = this.changeSearchInput.bind(this);\r\n        this.getUserData = this.getUserData.bind(this);\r\n        this.searchUsers = this.searchUsers.bind(this);\r\n        this.getDropListData = this.getDropListData.bind(this);\r\n        this.viewProfil = this.viewProfil.bind(this);\r\n        this.goToMain = this.goToMain.bind(this);\r\n    }\r\n\r\n\r\n    // Check if the jwt of user is valid in order to display the navbar\r\n    componentDidMount() {\r\n        localStorage.removeItem(\"email\");\r\n        if(this.state.jwt !== \"\" || this.state.jwt !== null) {\r\n            this.getUserData();\r\n        }\r\n        this.getDropListData();\r\n        this.searchUsers();\r\n        if(localStorage.getItem(\"searchInput\") !== \"\") {\r\n            this.setState({\r\n                searchInput: localStorage.getItem(\"searchInput\")\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    // Get all user's data using their jwt auth\r\n    async getUserData() {\r\n        var url = 'http://localhost:80//junior-workers/api/get-user-data.php';\r\n        var data = {\"jwt\": this.state.jwt};\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to get user's data\")\r\n            }\r\n            else if (response.status === 200) {\r\n                var json = await response.json();\r\n                this.setState({data : json});\r\n                var tmp = <Navbar selectedLink=\"search\" role={this.state.data[\"user\"][\"role\"]} />\r\n                this.setState({\r\n                    navbar: tmp\r\n                });\r\n                localStorage.setItem(\"role\", this.state.data[\"user\"][\"role\"]);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    async getDropListData() {\r\n        var url = 'http://localhost:80//junior-workers/api/get-droplist-data.php';\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            });\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to get drop list data\")\r\n            }\r\n            else if (response.status === 200) {\r\n                var json = await response.json();\r\n                this.setState({\r\n                    dropListData: json\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    // Get all users from search\r\n    async searchUsers() {\r\n        var url = 'http://localhost:80//junior-workers/api/search.php';\r\n        var data = {\r\n            \"searchType\": this.state.searchType,\r\n            \"searchInput\": this.state.searchInput\r\n        };\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to search\")\r\n            }\r\n            else if (response.status === 200) {\r\n                var json = await response.json();\r\n                this.setState({\r\n                        \"results\" : json.results,\r\n                        \"load\": this.state.searchType\r\n                    });\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    changeSearchInput(e) {\r\n        e.preventDefault();\r\n        var input = document.getElementById(\"search-input\");\r\n        this.setState({\r\n            searchInput: input.value\r\n        });\r\n    }\r\n\r\n    changeSearchType(e) {\r\n        e.preventDefault();\r\n        var candidate = document.getElementById(\"candidate-search\");\r\n        var postJob = document.getElementById(\"job-post-search\");\r\n        \r\n        if(e.target.id === \"candidate-search\") {\r\n            candidate.classList.add(\"search-button-active\");\r\n            postJob.classList.remove(\"search-button-active\");\r\n            this.setState({\r\n                searchType: \"candidate\"\r\n            });\r\n        } else if (e.target.id === \"job-post-search\") {\r\n            candidate.classList.remove(\"search-button-active\");\r\n            postJob.classList.add(\"search-button-active\");\r\n            this.setState({\r\n                searchType: \"hirer\"\r\n            });\r\n        }\r\n    }\r\n\r\n    viewProfil(e) {\r\n        e.preventDefault();\r\n        var email = e.target.id.split(\"_\")[1];\r\n        var role = e.target.id.split(\"_\")[2];\r\n        localStorage.setItem(\"email\", email);\r\n        var tmp;\r\n        if(role === \"candidate\") {\r\n            tmp = <Redirect to=\"/candidate-profil\" />;\r\n        }else if (role === \"hirer\") {\r\n            tmp = <Redirect to=\"/hirer-profil\" />;\r\n        }\r\n        this.setState({\r\n            redirect: tmp\r\n        });\r\n    }\r\n\r\n    goToMain() {\r\n        var tmp = <Redirect to=\"/\" />;\r\n        this.setState({\r\n            redirect: tmp\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        var resultsMap = <div className=\"msg\">No results found</div>;\r\n        if(this.state.results !== []) {\r\n            if(this.state.load === \"candidate\") {\r\n                resultsMap = [];\r\n                this.state.results.forEach((item, index) => {\r\n                    resultsMap.push(\r\n                        <div className=\"result\" key={\"result\"+index}>\r\n                            <img src={\"http://localhost/junior-workers/api/uploads/\"+item.image_path} />\r\n                            <div className=\"labels\">\r\n                                <div className=\"name\">{item.firstname}</div>\r\n                                <div className=\"lastname\">{item.lastname}</div>\r\n                                <div className=\"title\">{item.title}</div>\r\n                                <button id={\"view-profil\"+index+\"_\"+item.email+\"_\"+item.role} onClick={this.viewProfil}>\r\n                                    <i className=\"fa fa-eye\" />\r\n                                    <div>View profil</div>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                });  \r\n            }\r\n            else if(this.state.load === \"hirer\") {\r\n                resultsMap = [];\r\n                this.state.results.forEach((item, index) => {\r\n                    // map all professions into option - select\r\n                    var professionMap = [];\r\n                    this.state.dropListData[\"profession\"].forEach((pro_item, pro_index) => {\r\n                        professionMap.push(\r\n                            <option value={pro_item.id_profession} key={\"profession_option__\"+index+\"__\"+pro_index}>{pro_item.title}</option>\r\n                        );\r\n                    });\r\n                    resultsMap.push(\r\n                        <div className=\"result\" key={\"result\"+index}>\r\n                            <img src={\"http://localhost/junior-workers/api/uploads/\"+item.image_path} />\r\n                            <div className=\"labels\">\r\n                                <div className=\"name\">{item.firstname}</div>\r\n                                <div className=\"lastname\">{item.lastname}</div>\r\n                                <div className=\"title\">{item.title}</div>\r\n                                <button id={\"view-profil\"+index+\"_\"+item.email+\"_\"+item.role} onClick={this.viewProfil}>\r\n                                    <i className=\"fa fa-eye\" />\r\n                                    <div>View profil</div>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"job\">\r\n                                <div className=\"title\">\r\n                                    {item.job_title}\r\n                                </div>\r\n                                <div className=\"description\">\r\n                                    {item.description}\r\n                                </div>\r\n                                <div className=\"looking\">\r\n                                    <div className=\"label\">Looking for a</div>\r\n                                    <select \r\n                                        disabled={true} \r\n                                        value={item.id_profession} >\r\n                                        {professionMap}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                });\r\n            }\r\n        }\r\n\r\n        var returnButton = \"\";\r\n        if(this.state.jwt === \"\" || this.state.jwt === null) {\r\n            returnButton = <button className=\"return-button\" onClick={this.goToMain}>\r\n                                <i className=\"fa fa-arrow-left\" />\r\n                            </button>;\r\n        }\r\n\r\n        return(\r\n            <div className=\"Search\">\r\n                {this.state.redirect}\r\n\r\n                {this.state.navbar}\r\n\r\n                <img id=\"bg\" className=\"background\" src={require('./images/backgroundBig.jpg')} />\r\n\r\n                <div className=\"logo\">\r\n                    <div className=\"title1\" style={{color: \"#232323\", backgroundColor:\"#F25F5C\"}}>Junior</div>\r\n                    <div className=\"title2\">Workers</div>\r\n                </div>\r\n\r\n                {returnButton}\r\n\r\n                <div className=\"search-container\">\r\n                    <div className=\"control\">\r\n                        <div className=\"search-field\">\r\n                            <i className=\"fa fa-search\" />\r\n                            <input type=\"text\" placeholder=\"Type...\" id=\"search-input\" onChange={this.changeSearchInput} />\r\n                            <hr />\r\n                            <button onClick={this.searchUsers}>\r\n                                Search\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"target-field\">\r\n                            <button id=\"candidate-search\" onClick={this.changeSearchType} className=\"search-button-active\" >\r\n                                Candidate\r\n                            </button>\r\n                            <button id=\"job-post-search\" onClick={this.changeSearchType} >\r\n                                Job post\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"results\">\r\n                        {resultsMap}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport './App.css';\r\nimport Home from './Home.js';\r\nimport MyCandidateProfil from './MyCandidateProfil.js';\r\nimport MyHirerProfil from './MyHirerProfil.js';\r\nimport CandidateProfil from './CandidateProfil.js';\r\nimport HirerProfil from './HirerProfil.js';\r\nimport Search from './Search.js';\r\n\r\nclass App extends React.Component{\r\n  render() {\r\n    return(\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route path=\"/my-candidate-profil\">\r\n              <MyCandidateProfil />\r\n            </Route>\r\n            <Route path=\"/my-hirer-profil\">\r\n              <MyHirerProfil />\r\n            </Route>\r\n            <Route path=\"/search\">\r\n              <Search />\r\n            </Route>\r\n            <Route path=\"/candidate-profil\">\r\n              <CandidateProfil />\r\n            </Route>\r\n            <Route path=\"/hirer-profil\">\r\n              <HirerProfil />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}