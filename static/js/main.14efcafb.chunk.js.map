{"version":3,"sources":["images/backgroundBig.jpg","images/main_image.png","Login.js","Join.js","Home.js","Navbar.js","DisplayMessage.js","MyCandidateProfil.js","MyHirerProfil.js","CandidateProfil.js","HirerProfil.js","Search.js","App.js","index.js"],"names":["module","exports","Login","props","state","redirect","loginError","toggleLoginFlag","email","password","toggleLogin","bind","handleInputChange","handleSubmit","this","setState","loginForm","document","querySelector","style","display","e","target","name","value","data","fetch","method","headers","body","JSON","stringify","response","status","json","localStorage","setItem","temp","to","console","error","className","type","minLength","maxLength","placeholder","onChange","onClick","React","Component","Join","joinMessage","toggleJoinFlag","firstname","lastname","repassword","role","toggleJoin","handleChange","resetAllInput","joinForm","preventDefault","id","getElementById","onSubmit","required","defaultValue","Home","loginButtonText","joinButtonText","joinError","searchInput","onClickLoginHandle","onClickJoinHandle","search","searchChange","loginButton","classList","add","remove","joinButton","input","src","require","href","title","rel","Navbar","toggleNavbar","handleLogout","toggle","querySelectorAll","forEach","line","index","clear","profilStyle","searchStyle","exitStyle","selectedLink","color","DisplayMessage","displayMessageFlag","message","displayMessage","msg","setTimeout","MyCandidateProfil","jwt","getItem","editFlag","disabled","readonly","dropListData","toggleEdit","getUserData","userHeaderChange","availabilityChange","discardChanges","saveChanges","userDataChange","removeUserData","addUserData","getDropListData","imageChange","removeImage","videoChange","removeVideo","resumeChange","removeResume","downloadResume","removeItem","button","contains","attr","split","dataName","push","profession","id_profession","skill","id_skill","education","id_education","education_level","id_education_level","language","id_language","language_level","id_language_level","file","files","fileName","extensions","fileExtention","pop","toLowerCase","includes","formData","FormData","append","then","blob","url","window","URL","createObjectURL","a","createElement","download","click","changeButtons","availabilityButton","addExperienceButton","addSkillButton","addEducationButton","addLanguageButton","editImageButtons","editVideoButtons","editResumeButtons","htmlFor","videoMap","controls","resumeMap","availabilityText","experienceMap","item","removeButton","professionMap","pro_item","pro_index","key","readOnly","company","date","length","skillMap","skillsMap","educationMap","allEducationMap","allEducationLevelsMap","languageMap","allLanguageMap","allLanguageLevelsMap","backgroundColor","MyHirerProfil","addJobPostButton","jobPostMap","description","CandidateProfil","navbar","redirectBack","tmp","HirerProfil","Search","searchType","results","load","changeSearchType","changeSearchInput","searchUsers","viewProfil","goToMain","candidate","postJob","resultsMap","image_path","job_title","returnButton","App","path","ReactDOM","render"],"mappings":"sHAAAA,EAAOC,QAAU,IAA0B,2C,gLCA3CD,EAAOC,QAAU,IAA0B,wC,gOC6H5BC,G,kBAxHX,WAAYC,GAAQ,IAAD,8BACf,+CACKC,MAAQ,CACTC,SAAU,GACVC,WAAY,GACZC,iBAAiB,EACjBC,MAAO,GACPC,SAAU,IAEd,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gBACzB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBAXL,E,kFAgBZG,KAAKX,MAAMI,kBAAoBO,KAAKV,MAAMG,kBACzCO,KAAKC,SAAS,CACVR,gBAAiBO,KAAKX,MAAMI,kBAEhCO,KAAKJ,iB,oCAMT,IAAIM,EAAYC,SAASC,cAAc,UACR,SAA5BF,EAAUG,MAAMC,QACnBJ,EAAUG,MAAMC,QAAU,OAE1BJ,EAAUG,MAAMC,QAAU,S,wCAKZC,GACO,UAAlBA,EAAEC,OAAOC,KACRT,KAAKC,SAAS,CACVP,MAAOa,EAAEC,OAAOE,QAEK,aAAlBH,EAAEC,OAAOC,MAChBT,KAAKC,SAAS,CACVN,SAAUY,EAAEC,OAAOE,U,mCAMZH,G,oFACH,gDACNI,EAAO,CAAC,MAAQX,KAAKV,MAAMI,MAAO,SAAWM,KAAKV,MAAMK,U,4BAGnCiB,MAJf,gDAI0B,CAC9BC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUN,M,UAGF,OATjBO,E,QASMC,O,iBACRnB,KAAKC,SAAS,CACVT,WAAa,oB,2BAGQ,MAApB0B,EAASC,O,4CACKD,EAASE,Q,QAAtBA,E,OACNC,aAAaC,QAAQ,MAAOF,EAAI,KAC5BG,EAAO,GAES,cAAjBH,EAAI,KACHG,EAAO,kBAAC,IAAD,CAAUC,GAAG,yBACG,UAAjBJ,EAAI,OACVG,EAAO,kBAAC,IAAD,CAAUC,GAAG,sBAExBxB,KAAKC,SAAS,CAACV,SAAWgC,I,0DAG9BE,QAAQC,MAAM,SAAd,MACA1B,KAAKC,SAAS,CACVT,WAAa,oB,0FAMrB,OACI,yBAAKmC,UAAU,SACV3B,KAAKV,MAAMC,SACZ,yBAAKoC,UAAU,cACX,yBAAKA,UAAU,gBAAgBtB,MAAO,CAAC,MAAQ,YAAaL,KAAKV,MAAME,YAEvE,yBAAKmC,UAAU,eAAf,SACA,yBAAKA,UAAU,kCACf,2BACIlB,KAAK,QACLkB,UAAU,mBACVC,KAAK,QAAQC,UAAU,IACvBC,UAAU,KACVC,YAAY,gBACZC,SAAUhC,KAAKF,oBACnB,yBAAK6B,UAAU,eAAf,YACA,yBAAKA,UAAU,kCACf,2BACIlB,KAAK,WACLkB,UAAU,mBACVC,KAAK,WACLC,UAAU,IACVC,UAAU,KACVC,YAAY,SACZC,SAAUhC,KAAKF,oBACnB,4BAAQ6B,UAAU,eAAeM,QAASjC,KAAKD,cAA/C,iB,GAlHAmC,IAAMC,YCoJXC,G,kBApJX,WAAY/C,GAAQ,IAAD,8BACf,+CACKC,MAAQ,CACT+C,YAAa,GACbC,gBAAgB,EAChBC,UAAW,GACXC,SAAU,GACV9C,MAAO,GACPC,SAAU,GACV8C,WAAY,GACZC,KAAM,aAEV,EAAKC,WAAa,EAAKA,WAAW9C,KAAhB,gBAClB,EAAK+C,aAAe,EAAKA,aAAa/C,KAAlB,gBACpB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKgD,cAAgB,EAAKA,cAAchD,KAAnB,gBAfN,E,kFAmBZG,KAAKX,MAAMiD,iBAAmBtC,KAAKV,MAAMgD,iBACxCtC,KAAKC,SAAS,CACVqC,eAAgBtC,KAAKX,MAAMiD,iBAE/BtC,KAAK2C,gB,mCAKT,IAAIG,EAAW3C,SAASC,cAAc,SACR,SAA3B0C,EAASzC,MAAMC,QAClBwC,EAASzC,MAAMC,QAAU,OAEzBwC,EAASzC,MAAMC,QAAU,S,mCAIhBC,GACTA,EAAEwC,iBACF,IAAIC,EAAKzC,EAAEC,OAAOwC,GACR,mBAAPA,EACChD,KAAKC,SAAS,CACVsC,UAAWhC,EAAEC,OAAOE,QAEV,kBAAPsC,EACPhD,KAAKC,SAAS,CACVuC,SAAUjC,EAAEC,OAAOE,QAET,eAAPsC,EACPhD,KAAKC,SAAS,CACVP,MAAOa,EAAEC,OAAOE,QAEN,kBAAPsC,EACPhD,KAAKC,SAAS,CACVN,SAAUY,EAAEC,OAAOE,QAET,oBAAPsC,EACPhD,KAAKC,SAAS,CACVwC,WAAYlC,EAAEC,OAAOE,QAEX,cAAPsC,GACPhD,KAAKC,SAAS,CACVyC,KAAMnC,EAAEC,OAAOE,U,mCAKRH,G,iFACfA,EAAEwC,iBACEpC,EAAO,CACP,MAASX,KAAKV,MAAMI,MACpB,SAAYM,KAAKV,MAAMK,SACvB,UAAaK,KAAKV,MAAMiD,UACxB,SAAYvC,KAAKV,MAAMkD,SACvB,KAAQxC,KAAKV,MAAMoD,MAEb,sD,4BAEiB9B,MAFjB,sDAE4B,CAC9BC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUN,M,UAGF,OATjBO,E,QASMC,O,iBACRnB,KAAKC,SAAS,CACVoC,YAAc,iB,2BAGO,MAApBnB,EAASC,O,4CACKD,EAASE,Q,eAC5BpB,KAAKC,SAAS,CACVoC,YAAc,iBAElBrC,KAAK6C,gB,0DAGTpB,QAAQC,MAAM,SAAd,MACA1B,KAAKC,SAAS,CACVoC,YAAc,0B,iGAMtBlC,SAAS8C,eAAe,kBAAkBvC,MAAQ,GAClDP,SAAS8C,eAAe,iBAAiBvC,MAAQ,GACjDP,SAAS8C,eAAe,cAAcvC,MAAQ,GAC9CP,SAAS8C,eAAe,iBAAiBvC,MAAQ,GACjDP,SAAS8C,eAAe,mBAAmBvC,MAAQ,K,+BAInD,OACI,yBAAKiB,UAAU,QACX,0BAAMA,UAAU,YAAYuB,SAAUlD,KAAKD,cACvC,yBAAK4B,UAAU,gBAAf,oBACA,yBAAKA,UAAU,eAAetB,MAAO,CAAC,MAAQ,UAAW,SAAW,SAAUL,KAAKV,MAAM+C,aACzF,yBAAKV,UAAU,gBACX,yBAAKA,UAAU,oBAAf,cACA,yBAAKA,UAAU,cAAf,SACA,2BAAOA,UAAU,kBAAkBC,KAAK,QAAQC,UAAU,IAAIC,UAAU,KAAKC,YAAY,YAAYoB,UAAQ,EAAC1C,KAAK,QAAQuC,GAAG,aAAahB,SAAUhC,KAAK4C,eAC1J,yBAAKjB,UAAU,cAAf,YACA,2BAAOA,UAAU,kBAAkBC,KAAK,WAAWC,UAAU,IAAIC,UAAU,KAAKC,YAAY,aAAaoB,UAAQ,EAAC1C,KAAK,WAAWuC,GAAG,gBAAgBhB,SAAUhC,KAAK4C,eACpK,yBAAKjB,UAAU,cAAf,mBACA,2BAAOA,UAAU,kBAAkBC,KAAK,WAAWC,UAAU,IAAIC,UAAU,KAAKC,YAAY,aAAaoB,UAAQ,EAAC1C,KAAK,aAAauC,GAAG,kBAAkBhB,SAAUhC,KAAK4C,eACxK,yBAAKjB,UAAU,cAAf,QACA,4BAAQA,UAAU,YAAYyB,aAAa,YAAY3C,KAAK,OAAOuC,GAAG,YAAYhB,SAAUhC,KAAK4C,cAC7F,4BAAQlC,MAAM,aAAd,aACA,4BAAQA,MAAM,SAAd,WAGR,yBAAKiB,UAAU,gBACX,yBAAKA,UAAU,oBAAf,iBACA,yBAAKA,UAAU,cAAf,QACA,2BAAOA,UAAU,kBAAkBC,KAAK,OAAOC,UAAU,IAAIC,UAAU,KAAKC,YAAY,OAAOoB,UAAQ,EAAC1C,KAAK,YAAYuC,GAAG,iBAAiBhB,SAAUhC,KAAK4C,eAC5J,yBAAKjB,UAAU,cAAf,YACA,2BAAOA,UAAU,kBAAkBC,KAAK,OAAOC,UAAU,IAAIC,UAAU,KAAKC,YAAY,cAAcoB,UAAQ,EAAC1C,KAAK,WAAWuC,GAAG,gBAAgBhB,SAAUhC,KAAK4C,gBAErK,4BAAQjB,UAAU,cAAcC,KAAK,UAArC,wB,GA9IDM,IAAMC,YC6JVkB,E,YAzJb,aAAe,IAAD,8BACZ,+CACK/D,MAAQ,CACXG,iBAAiB,EACjB6D,gBAAiB,QACjBhB,gBAAgB,EAChBiB,eAAgB,qBAChBC,UAAY,GACZjE,SAAU,GACVkE,YAAa,IAEf,EAAKC,mBAAqB,EAAKA,mBAAmB7D,KAAxB,gBAC1B,EAAK8D,kBAAoB,EAAKA,kBAAkB9D,KAAvB,gBACzB,EAAK+D,OAAS,EAAKA,OAAO/D,KAAZ,gBACd,EAAKgE,aAAe,EAAKA,aAAahE,KAAlB,gBAdR,E,kFAmBqB,MAA9BG,KAAKV,MAAMiE,gBACZvD,KAAK2D,oBAGP3D,KAAKC,SAAS,CACZR,iBAAkBO,KAAKV,MAAMG,kBAG/B,IAAIqE,EAAc3D,SAASC,cAAc,iBACP,UAA/BJ,KAAKV,MAAMgE,iBACdtD,KAAKC,SAAS,CACVqD,gBAAiB,MAErBQ,EAAYC,UAAUC,IAAI,yBAE1BhE,KAAKC,SAAS,CACVqD,gBAAiB,UAErBQ,EAAYC,UAAUE,OAAO,0B,0CAMK,MAA/BjE,KAAKV,MAAMgE,iBACZtD,KAAK0D,qBAGP1D,KAAKC,SAAS,CACZqC,gBAAiBtC,KAAKV,MAAMgD,iBAG9B,IAAI4B,EAAa/D,SAASC,cAAc,gBACP,uBAA9BJ,KAAKV,MAAMiE,gBACZvD,KAAKC,SAAS,CACZsD,eAAgB,MAElBW,EAAWH,UAAUC,IAAI,wBAEzBhE,KAAKC,SAAS,CACZsD,eAAgB,uBAElBW,EAAWH,UAAUE,OAAO,yB,mCAInB1D,GACXA,EAAEwC,iBACF,IAAIoB,EAAQhE,SAAS8C,eAAe,gBAAgBvC,MACpDV,KAAKC,SAAS,CACZwD,YAAaU,M,6BAIV5D,GACLA,EAAEwC,iBACF1B,aAAaC,QAAQ,cAAetB,KAAKV,MAAMmE,aAC/C,IAAIlC,EAAO,kBAAC,IAAD,CAAUC,GAAG,YACxBxB,KAAKC,SAAS,CACVV,SAAUgC,M,+BAKd,OACE,yBAAKI,UAAU,QACZ3B,KAAKV,MAAMC,SACZ,yBAAKyD,GAAG,KAAKrB,UAAU,aAAayC,IAAKC,EAAQ,MAEjD,yBAAK1C,UAAU,QACb,yBAAKA,UAAU,UAAf,UACA,yBAAKA,UAAU,UAAf,WACA,yBAAKA,UAAU,iBAGjB,4BAAQA,UAAU,cAAcM,QAASjC,KAAK2D,kBAAmBjD,MAAM,QACpEV,KAAKV,MAAMiE,gBAEd,kBAAC,EAAD,CAAMjB,eAAgBtC,KAAKV,MAAMgD,iBAGjC,4BAAQX,UAAU,eAAeM,QAASjC,KAAK0D,mBAAoBhD,MAAM,SACtEV,KAAKV,MAAMgE,iBAEd,kBAAC,EAAD,CAAO7D,gBAAiBO,KAAKV,MAAMG,kBAEnC,yBAAKkC,UAAU,QACb,wBAAIA,UAAU,SACZ,mDACA,+CACA,sCACA,yBAAKA,UAAU,eACb,2BAAOC,KAAK,OAAOG,YAAY,oBAAoBiB,GAAG,eAAehB,SAAUhC,KAAK6D,eACpF,4BAAQ5B,QAASjC,KAAK4D,QACpB,uBAAGjC,UAAU,oBAInB,yBAAKA,UAAU,QAAQyC,IAAKC,EAAQ,OAGtC,yBAAK1C,UAAU,QAAQqB,GAAG,SACxB,wBAAIrB,UAAU,eAAd,0DACA,yBAAKA,UAAU,QACb,yBAAKA,UAAU,cAAf,aAAsC,6BAAtC,OACA,yBAAKA,UAAU,aACb,yBAAKA,UAAU,YAAf,kBACA,yBAAKA,UAAU,YAAf,uBAGJ,yBAAKA,UAAU,QACb,yBAAKA,UAAU,cAAf,UAAmC,6BAAnC,OACA,yBAAKA,UAAU,aACb,yBAAKA,UAAU,YAAf,oBACA,yBAAKA,UAAU,YAAf,mCAKN,yBAAKA,UAAU,UACb,sDACA,uBACJ2C,KAAK,+BACL9D,OAAO,SACP+D,MAAM,2BACNC,IAAI,uBAJA,0B,GA7IStC,IAAMC,WCkEVsC,G,wBAjEb,WAAYpF,GAAO,IAAD,8BAChB,+CACKqF,aAAe,EAAKA,aAAa7E,KAAlB,gBACpB,EAAK8E,aAAe,EAAKA,aAAa9E,KAAlB,gBAHJ,E,4EAQDM,SAASC,cAAc,cAC7B2D,UAAUa,OAAO,oBAEXzE,SAAS0E,iBAAiB,mBAChCC,SAAQ,SAACC,EAAMC,GACtBD,EAAKhB,UAAUa,OAAO,OAAOI,EAAM,GAAG,cAG3B7E,SAASC,cAAc,WAC7B2D,UAAUa,OAAO,mB,qCAIxBvD,aAAa4D,U,+BAIb,IAAIC,EAAc,GACdC,EAAc,GACdC,EAAY,GAMhB,MAL+B,WAA5BpF,KAAKX,MAAMgG,eACZH,EAAc,CAACI,MAAO,YACO,WAA5BtF,KAAKX,MAAMgG,eACZF,EAAc,CAACG,MAAO,YAGtB,yBAAK3D,UAAU,UACb,yBAAKA,UAAU,aAAaM,QAASjC,KAAK0E,cACxC,8BACA,8BACA,+BAEF,wBAAI/C,UAAU,aACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,OAAOH,GAAG,UAAUnB,MAAO8E,GACzC,uBAAGxD,UAAU,eAAetB,MAAO8E,IACnC,qCAGJ,wBAAIxD,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,OAAOH,GAAI,OAAOxB,KAAKX,MAAMqD,KAAK,UAAWrC,MAAO6E,GAClE,uBAAGvD,UAAU,aAAatB,MAAO6E,IACjC,uCAGJ,wBAAIvD,UAAU,qBACZ,kBAAC,IAAD,CAAMM,QAASjC,KAAK2E,aAAchD,UAAU,OAAOH,GAAG,IAAInB,MAAO+E,GAC/D,uBAAGzD,UAAU,iBAAiBtB,MAAO+E,IACrC,2C,GAzDOlD,IAAMC,YC0CZoD,G,kBA5CX,WAAYlG,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTkG,mBAAoB,EAAKnG,MAAMmG,mBAC/BC,QAAS,IAEb,EAAKC,eAAiB,EAAKA,eAAe7F,KAApB,gBANP,E,kFAUZG,KAAKX,MAAMmG,qBAAuBxF,KAAKV,MAAMkG,qBAC5CxF,KAAKC,SAAS,CACVuF,mBAAoBxF,KAAKX,MAAMmG,qBAEF,KAA9BxF,KAAKX,MAAMqG,gBAAuD,OAA9B1F,KAAKX,MAAMqG,gBAC9C1F,KAAK0F,oB,uCAMC,IAAD,OACTC,EAAMxF,SAASC,cAAc,mBACjCuF,EAAI5B,UAAUE,OAAO,8BACrBjE,KAAKC,SAAS,CACVwF,QAASzF,KAAKX,MAAMqG,iBAExBE,YAAW,WACPD,EAAI5B,UAAUC,IAAI,8BAClB,EAAK/D,SAAS,CACVwF,QAAS,OAEd,O,+BAIH,OACI,yBAAK9D,UAAU,6CACX,2BAAI3B,KAAKV,MAAMmG,c,GAvCFvD,IAAMC,YCwhCpB0D,E,YAphCX,WAAYxG,GAAQ,IAAD,8BACf,+CACKC,MAAQ,CACTC,SAAU,GACVuG,IAAKzE,aAAa0E,QAAQ,OAC1BC,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,aAAc,CACV,WAAc,GACd,MAAS,GACT,UAAa,GACb,gBAAmB,GACnB,SAAY,GACZ,eAAkB,IAEtBxF,KAAO,CACH,KAAQ,GACR,WAAc,GACd,MAAS,GACT,UAAa,GACb,SAAY,IAEhB+E,eAAgB,GAChBF,oBAAoB,GAGxB,EAAKY,WAAa,EAAKA,WAAWvG,KAAhB,gBAClB,EAAKwG,YAAc,EAAKA,YAAYxG,KAAjB,gBAEnB,EAAKyG,iBAAmB,EAAKA,iBAAiBzG,KAAtB,gBACxB,EAAK0G,mBAAqB,EAAKA,mBAAmB1G,KAAxB,gBAE1B,EAAK2G,eAAiB,EAAKA,eAAe3G,KAApB,gBACtB,EAAK4G,YAAc,EAAKA,YAAY5G,KAAjB,gBAEnB,EAAK6G,eAAiB,EAAKA,eAAe7G,KAApB,gBACtB,EAAK8G,eAAiB,EAAKA,eAAe9G,KAApB,gBACtB,EAAK+G,YAAc,EAAKA,YAAY/G,KAAjB,gBAEnB,EAAKgH,gBAAkB,EAAKA,gBAAgBhH,KAArB,gBAEvB,EAAKiH,YAAc,EAAKA,YAAYjH,KAAjB,gBACnB,EAAKkH,YAAc,EAAKA,YAAYlH,KAAjB,gBAEnB,EAAKmH,YAAc,EAAKA,YAAYnH,KAAjB,gBACnB,EAAKoH,YAAc,EAAKA,YAAYpH,KAAjB,gBAEnB,EAAKqH,aAAe,EAAKA,aAAarH,KAAlB,gBACpB,EAAKsH,aAAe,EAAKA,aAAatH,KAAlB,gBAEpB,EAAKuH,eAAiB,EAAKA,eAAevH,KAApB,gBAnDP,E,iFAwDf,GADAwB,aAAagG,WAAW,SACF,OAAnBrH,KAAKV,MAAMwG,IAAc,CACxB,IAAIvE,EAAO,kBAAC,IAAD,CAAUC,GAAG,MACxBxB,KAAKC,SAAS,CACVV,SAAUgC,IAGlBvB,KAAKqG,cACLrG,KAAK6G,oB,mCAKL7G,KAAKC,SAAS,CACV+F,UAAYhG,KAAKV,MAAM0G,WAE3B,IAAIsB,EAASnH,SAAS8C,eAAe,eAElCqE,EAAOvD,UAAUwD,SAAS,aAEzBD,EAAOvD,UAAUE,OAAO,YACxBqD,EAAOvD,UAAUC,IAAI,aAErBsD,EAAOvD,UAAUE,OAAO,WACxBqD,EAAOvD,UAAUC,IAAI,aAGzBhE,KAAKC,SAAS,CACVgG,UAAWjG,KAAKV,MAAM2G,SACtBC,UAAWlG,KAAKV,MAAM4G,a,uCAKb3F,GACbA,EAAEwC,iBACF,IAAIC,EAAKzC,EAAEC,OAAOwC,GACdtC,EAAQH,EAAEC,OAAOE,MACjBa,EAAOvB,KAAKV,MAAMqB,KAEZ,cAAPqC,EACCzB,EAAI,KAAJ,UAA4Bb,EACf,aAAPsC,EACNzB,EAAI,KAAJ,SAA2Bb,EACd,UAAPsC,EACNzB,EAAI,KAAJ,MAAwBb,EACX,QAAPsC,IACNzB,EAAI,KAAJ,IAAsBb,GAG1BV,KAAKC,SAAS,CACVU,KAAMY,M,2CAMV,IAAIA,EAC2C,MAA5CvB,KAAKV,MAAMqB,KAAX,oBACCY,EAAOvB,KAAKV,MAAMqB,MACd,KAAJ,aAA+B,IAC/BX,KAAKC,SAAS,CACVU,KAAMY,OAGVA,EAAOvB,KAAKV,MAAMqB,MACd,KAAJ,aAA+B,IAC/BX,KAAKC,SAAS,CACVU,KAAMY,O,qCAQHhB,GACXA,EAAEwC,iBACF,IAAIrC,EAAQH,EAAEC,OAAOE,MACjB8G,EAAOjH,EAAEC,OAAOwC,GAAGyE,MAAM,MACzBC,EAAWF,EAAK,GAChBxC,EAAQwC,EAAK,GACb/G,EAAO+G,EAAK,GACZjG,EAAOvB,KAAKV,MAAMqB,KACtBY,EAAKmG,GAAU1C,GAAOvE,GAAQC,EAC9BV,KAAKC,SAAS,CACVU,KAAMY,M,kCAKFhB,GACRA,EAAEwC,iBACF,IAAIxB,EAAOvB,KAAKV,MAAMqB,KAClB+G,EAAWnH,EAAEC,OAAOC,KACR,eAAbiH,EACCnG,EAAI,WAAeoG,KAAK,CACpB,cAAiB3H,KAAKV,MAAM6G,aAAayB,WAAW,GAAGC,cAAe,QAAW,GAAI,KAAQ,KAE7E,UAAbH,EACPnG,EAAI,MAAUoG,KAAK,CACf,SAAY3H,KAAKV,MAAM6G,aAAa2B,MAAM,GAAGC,WAC7B,cAAbL,EACPnG,EAAI,UAAcoG,KAAK,CACnB,aAAgB3H,KAAKV,MAAM6G,aAAa6B,UAAU,GAAGC,aACrD,mBAAsBjI,KAAKV,MAAM6G,aAAa+B,gBAAgB,GAAGC,qBAEjD,aAAbT,GACPnG,EAAI,SAAaoG,KAAK,CAClB,YAAe3H,KAAKV,MAAM6G,aAAaiC,SAAS,GAAGC,YACnD,kBAAqBrI,KAAKV,MAAM6G,aAAamC,eAAe,GAAGC,oBAGvEvI,KAAKC,SAAS,CACVU,KAAMY,M,qCAOChB,GACXA,EAAEwC,iBACF,IAAIyE,EAAOjH,EAAEC,OAAOwC,GAAGyE,MAAM,MACzBC,EAAWF,EAAK,GAChBxC,EAAQwC,EAAK,GACbjG,EAAOvB,KAAKV,MAAMqB,KACtBY,EAAKmG,GAAU1C,GAAS,GACxBhF,KAAKC,SAAS,CACVU,KAAMY,M,uCAMVvB,KAAKC,SAAS,CACVU,KAAO,CACH,KAAQ,GACR,WAAc,GACd,MAAS,GACT,UAAa,GACb,SAAY,MAGpBX,KAAKqG,cACLrG,KAAKoG,e,kCAGS7F,G,uFACdA,EAAEwC,iBAEEyF,EAAOrI,SAAS8C,eAAe,cAAcwF,MAAM,GACnDC,EAAWF,EAAK/H,KAChBkI,EAAa,CAAC,MAAO,MAAO,QAC5BC,EAAgBF,EAASjB,MAAM,KAAKoB,MAAMC,eAG3CH,EAAWI,SAASH,G,uBAUP,0DAERI,EAAW,IAAIC,UACVC,OAAO,aAAcV,GAC9BQ,EAASE,OAAO,MAAOlJ,KAAKV,MAAMwG,K,8BAGPlF,MAPf,yDAO0B,CAC9BC,OAAQ,OACRE,KAAMiI,K,eAFJ9H,E,2BAIaA,EAASE,Q,QAAtBA,E,OACiB,MAApBF,EAASC,OACY,MAAjBC,EAAI,KACHpB,KAAKC,SAAS,CACVyF,eAAgB,2BAEI,MAAjBtE,EAAI,KACXpB,KAAKC,SAAS,CACVyF,eAAgB,+BAEI,MAAjBtE,EAAI,MACXpB,KAAKC,SAAS,CACVyF,eAAgB,4CAIC,MAApBxE,EAASC,QAAmC,MAAjBC,EAAI,OACpCpB,KAAKC,SAAS,CACVyF,eAAgB,kCAEpB1F,KAAKqG,e,mDAGT5E,QAAQC,MAAM,SAAd,MACA1B,KAAKC,SAAS,CACVyF,eAAgB,2B,gCAIxB1F,KAAKC,SAAS,CACVyF,eAAgB,6C,QAGxB1F,KAAKC,SAAS,CACVuF,oBAAqBxF,KAAKV,MAAMkG,qB,gLAO1B,gEACN7E,EAAO,CAAC,IAAOX,KAAKV,MAAMwG,K,4BAGLlF,MAJf,gEAI0B,CAC5BC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUN,M,OAEF,OARnBO,E,QAQQC,QACRM,QAAQC,MAAM,8BACd1B,KAAKC,SAAS,CACVyF,eAAgB,yBAChBF,oBAAqBxF,KAAKV,MAAMkG,sBAGX,MAApBtE,EAASC,SAGdnB,KAAKC,SAAS,CACVyF,eAAgB,gCAChBF,oBAAqBxF,KAAKV,MAAMkG,qBAEpCxF,KAAKqG,e,gDAGT5E,QAAQC,MAAM,SAAd,M,4FAIUnB,G,uFACdA,EAAEwC,iBAEEyF,EAAOrI,SAAS8C,eAAe,cAAcwF,MAAM,GACnDC,EAAWF,EAAK/H,KAChBkI,EAAa,CAAC,OACdC,EAAgBF,EAASjB,MAAM,KAAKoB,MAAMC,eAG3CH,EAAWI,SAASH,G,uBAUP,0DAERI,EAAW,IAAIC,UACVC,OAAO,aAAcV,GAC9BQ,EAASE,OAAO,MAAOlJ,KAAKV,MAAMwG,K,8BAGPlF,MAPf,yDAO0B,CAC9BC,OAAQ,OACRE,KAAMiI,K,eAFJ9H,E,2BAIaA,EAASE,Q,QACR,OADdA,E,QACC,KACHpB,KAAKC,SAAS,CACVyF,eAAgB,2BAEI,MAAjBtE,EAAI,KACXpB,KAAKC,SAAS,CACVyF,eAAgB,qCAEI,MAAjBtE,EAAI,KACXpB,KAAKC,SAAS,CACVyF,eAAgB,4CAEI,MAAjBtE,EAAI,OACXpB,KAAKC,SAAS,CACVyF,eAAgB,yBAEpB1F,KAAKqG,e,mDAGT5E,QAAQC,MAAM,SAAd,MACA1B,KAAKC,SAAS,CACVyF,eAAgB,2B,gCAIxB1F,KAAKC,SAAS,CACVyF,eAAgB,mD,QAIxB1F,KAAKC,SAAS,CACVuF,oBAAqBxF,KAAKV,MAAMkG,qB,8FAKtBjF,G,iFACdA,EAAEwC,iBAEQ,gEACNpC,EAAO,CAAC,IAAOX,KAAKV,MAAMwG,K,4BAGLlF,MAJf,gEAI0B,CAC5BC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUN,M,OAGF,OATnBO,E,QASQC,QACRM,QAAQC,MAAM,8BACd1B,KAAKC,SAAS,CACVyF,eAAgB,yBAChBF,oBAAqBxF,KAAKV,MAAMkG,sBAGX,MAApBtE,EAASC,QAGdnB,KAAKC,SAAS,CACVyF,eAAgB,gCAChBF,oBAAqBxF,KAAKV,MAAMkG,qBAGxCxF,KAAKqG,c,kDAEL5E,QAAQC,MAAM,SAAd,M,8FAKWnB,G,uFACfA,EAAEwC,iBAEEyF,EAAOrI,SAAS8C,eAAe,eAAewF,MAAM,GACpDC,EAAWF,EAAK/H,KAChBkI,EAAa,CAAC,OACdC,EAAgBF,EAASjB,MAAM,KAAKoB,MAAMC,eAG3CH,EAAWI,SAASH,G,uBAUP,2DAERI,EAAW,IAAIC,UACVC,OAAO,cAAeV,GAC/BQ,EAASE,OAAO,MAAOlJ,KAAKV,MAAMwG,K,8BAGPlF,MAPf,0DAO0B,CAC9BC,OAAQ,OACRE,KAAMiI,K,eAFJ9H,E,2BAIaA,EAASE,Q,QACR,OADdA,E,QACC,KACHpB,KAAKC,SAAS,CACVyF,eAAgB,4BAEI,MAAjBtE,EAAI,KACXpB,KAAKC,SAAS,CACVyF,eAAgB,gCAEI,MAAjBtE,EAAI,KACXpB,KAAKC,SAAS,CACVyF,eAAgB,6CAEG,MAAjBtE,EAAI,OACVpB,KAAKC,SAAS,CACVyF,eAAgB,0BAEpB1F,KAAKqG,e,mDAGT5E,QAAQC,MAAM,SAAd,MACA1B,KAAKC,SAAS,CACVyF,eAAgB,4B,gCAIxB1F,KAAKC,SAAS,CACVyF,eAAgB,6C,QAIxB1F,KAAKC,SAAS,CACVuF,oBAAqBxF,KAAKV,MAAMkG,qB,iLAO1B,iEACN7E,EAAO,CAAC,IAAOX,KAAKV,MAAMwG,K,4BAGLlF,MAJf,iEAI0B,CAC5BC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUN,M,OAEF,OARnBO,E,QAQQC,QACRM,QAAQC,MAAM,8BACd1B,KAAKC,SAAS,CACVyF,eAAgB,0BAChBF,oBAAqBxF,KAAKV,MAAMkG,sBAGX,MAApBtE,EAASC,SAGdnB,KAAKC,SAAS,CACVyF,eAAgB,0BAChBF,oBAAqBxF,KAAKV,MAAMkG,qBAEpCxF,KAAKqG,e,gDAGT5E,QAAQC,MAAM,SAAd,M,4FAKUnB,G,iFACdA,EAAEwC,iBAEQ,6DACNpC,EAAO,CAAC,IAAOX,KAAKV,MAAMwG,IAAK,KAAQ9F,KAAKV,MAAMqB,M,4BAE7BC,MAHf,6DAG0B,CAC5BC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUN,M,OAEF,OARnBO,E,QAQQC,OACRM,QAAQC,MAAM,8BAEW,MAApBR,EAASC,SAGdnB,KAAKqG,cACLrG,KAAKoG,c,kDAGT3E,QAAQC,MAAM,SAAd,M,mLAMM,4DACNf,EAAO,CAAC,IAAOX,KAAKV,MAAMwG,K,4BAELlF,MAHf,4DAG0B,CAC5BC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUN,M,UAEF,OARnBO,E,QAQQC,O,iBACRM,QAAQC,MAAM,6B,2BAEW,MAApBR,EAASC,O,4CACGD,EAASE,Q,QAAtBA,E,OACJpB,KAAKC,SAAS,CAACU,KAAOS,IAGlBG,EAAO,GAC4B,UAApCvB,KAAKV,MAAMqB,KAAX,YACCY,EAAO,kBAAC,IAAD,CAAUC,GAAG,sBAExBxB,KAAKC,SAAS,CAACV,SAAUgC,I,0DAG7BE,QAAQC,MAAM,SAAd,M,mLAKM,gE,4BAEed,MAFf,gEAE0B,CAC5BC,OAAQ,MACRC,QAAS,CACL,OAAU,mBACV,eAAgB,uB,UAGD,OAPnBI,E,QAOQC,O,gBACRM,QAAQC,MAAM,gC,0BAEW,MAApBR,EAASC,O,4CACGD,EAASE,Q,QAAtBA,E,OACJpB,KAAKC,SAAS,CACVkG,aAAc/E,I,0DAItBK,QAAQC,MAAM,SAAd,M,iLAaQ,+DAKRsH,EAAW,IAAIC,UACVC,OAAO,QAASlJ,KAAKV,MAAL,iBACzB0J,EAASE,OAAO,MAAOlJ,KAAKV,MAAMwG,KAElClF,MATY,8DASD,CACHC,OAAQ,OACRE,KAAMiI,IAElBG,MAAK,SAAAjI,GAC8B,MAApBA,EAASC,OACRD,EAASkI,OAAOD,MAAK,SAAAC,GACjB,IAAIC,EAAMC,OAAOC,IAAIC,gBAAgBJ,GACjCK,EAAItJ,SAASuJ,cAAc,KAC/BD,EAAEnF,KAAO+E,EACTI,EAAEE,SAAW,aACbF,EAAEG,WAIN,EAAK3J,SAAS,CACVyF,eAAgB,4BAChBF,oBAAqB,EAAKlG,MAAMkG,wB,gFAM1C,IAAD,OAGDqE,EAAgB,GAChBC,EAAqB,GACrBC,EAAsB,GACtBC,EAAiB,GACjBC,EAAqB,GACrBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAmB,GACnBC,EAAoB,GAErBrK,KAAKV,MAAM0G,WAEV6D,EAAgB,yBAAKlI,UAAU,kBACX,4BAAQC,KAAK,UAAS,uBAAGD,UAAU,iBACnC,4BAAQM,QAASjC,KAAKwG,gBAAgB,uBAAG7E,UAAU,kBAGvEmI,EAAqB,4BAAQnI,UAAU,6BAA6BM,QAASjC,KAAKuG,oBAC1D,uBAAG5E,UAAU,mBAGrCoI,EAAsB,4BAAQpI,UAAU,UAAUM,QAASjC,KAAK4G,YAAanG,KAAK,cAC1D,uBAAGkB,UAAU,eADf,kBAItBqI,EAAiB,4BAAQrI,UAAU,UAAUM,QAASjC,KAAK4G,YAAanG,KAAK,SACrD,uBAAGkB,UAAU,eADpB,aAIjBsI,EAAqB,4BAAQtI,UAAU,UAAUM,QAASjC,KAAK4G,YAAanG,KAAK,aACzD,uBAAGkB,UAAU,eADhB,iBAIrBuI,EAAoB,4BAAQvI,UAAU,UAAUM,QAASjC,KAAK4G,YAAanG,KAAK,YACxD,uBAAGkB,UAAU,eADjB,gBAIpBwI,EAAmB,yBAAKxI,UAAU,wBACV,2BAAO2I,QAAQ,aAAa/F,MAAM,6BAC9B,uBAAG5C,UAAU,kBAEjB,2BAAOqB,GAAG,aAAapB,KAAK,OAAOI,SAAUhC,KAAK8G,YAAarG,KAAK,UACpE,4BAAQ8D,MAAM,8BAA8BtC,QAASjC,KAAK+G,aACtD,uBAAGpF,UAAU,kBAIzCyI,EAAmB,yBAAKzI,UAAU,iBACV,2BAAO2I,QAAQ,aAAa3I,UAAU,QAAQ4C,MAAM,oBAChD,uBAAG5C,UAAU,kBAEjB,2BAAOqB,GAAG,aAAapB,KAAK,OAAQnB,KAAK,aAAauB,SAAUhC,KAAKgH,cACrE,4BAAQzC,MAAM,uBAAuBtC,QAASjC,KAAKiH,aAC/C,uBAAGtF,UAAU,kBAIzC0I,EAAoB,yBAAK1I,UAAU,uBACX,2BAAO2I,QAAQ,cAAc3I,UAAU,QAAQ4C,MAAM,qBACjD,uBAAG5C,UAAU,kBAEjB,2BAAOqB,GAAG,cAAcpB,KAAK,OAAQnB,KAAK,SAASuB,SAAUhC,KAAKkH,eAClE,4BAAQ3C,MAAM,wBAAwBtC,QAASjC,KAAKmH,cAChD,uBAAGxF,UAAU,mBAM7C,IAAI4I,EAAW,GAC8B,KAA1CvK,KAAKV,MAAMqB,KAAX,iBAA0F,OAA1CX,KAAKV,MAAMqB,KAAX,kBAC/C4J,EAAW,2BACK5I,UAAU,QACVC,KAAK,YACLwC,IAAK,+CAA+CpE,KAAKV,MAAMqB,KAAX,gBACpD6J,UAAU,GAJf,iEAUf,IAAIC,EAAY,GAC8B,KAA3CzK,KAAKV,MAAMqB,KAAX,kBAA4F,OAA3CX,KAAKV,MAAMqB,KAAX,iBAChD8J,EAAY,4BAAQ9I,UAAU,uBAAuBM,QAASjC,KAAKoH,gBACnD,uBAAGzF,UAAU,qBADjB,UAIN3B,KAAKV,MAAM0G,WACjByE,EAAY,yBAAKpK,MAAO,CAACiF,MAAO,YAApB,4BAIhB,IAAIoF,EAAmB,4CACwB,MAA5C1K,KAAKV,MAAMqB,KAAX,oBAAiD+J,EAAmB,yCAGvE,IAAIC,EAAgB,GACpB3K,KAAKV,MAAMqB,KAAX,WAA8BmE,SAAQ,SAAC8F,EAAM5F,GACzC,GAAY,KAAT4F,EAAY,CAEX,IAAIC,EAAe,GAChB,EAAKvL,MAAM0G,WACV6E,EAAe,4BAAQlJ,UAAU,cAAcqB,GAAI,eAAegC,EAAM,WAAY/C,QAAS,EAAK0E,gBAC9F,uBAAGhF,UAAU,kBAIrB,IAAImJ,EAAgB,GACpB,EAAKxL,MAAM6G,aAAX,WAAsCrB,SAAQ,SAACiG,EAAUC,GACrDF,EAAcnD,KACV,4BAAQjH,MAAOqK,EAASlD,cAAeoD,IAAK,sBAAsBjG,EAAM,KAAKgG,GAAYD,EAASxG,WAI1GoG,EAAchD,KACV,yBAAKhG,UAAU,OAAOsJ,IAAK,aAAajG,GACpC,uBAAGrD,UAAU,cAAb,aACA,4BACIqB,GAAI,eAAegC,EAAM,kBACzBiB,SAAU,EAAK3G,MAAM2G,SACrBvF,MAAOkK,EAAK/C,cACZ7F,SAAU,EAAK0E,gBACdoE,GAEL,uBAAGnJ,UAAU,cAAb,MACA,2BACIC,KAAK,OACLsJ,SAAU,EAAK5L,MAAM4G,SACrBlD,GAAI,eAAegC,EAAM,YACzBhD,SAAU,EAAK0E,eACftD,aAAcwH,EAAKO,QACnBpJ,YAAY,UACZoB,UAAU,IACd,uBAAGxB,UAAU,cAAb,WACA,2BACIC,KAAK,OACLsJ,SAAU,EAAK5L,MAAM4G,SACrBlD,GAAI,eAAegC,EAAM,SACzBhD,SAAU,EAAK0E,eACftD,aAAcwH,EAAKQ,KACnBrJ,YAAY,OACZoB,UAAU,IACb0H,QAKd7K,KAAKV,MAAMqB,KAAX,aAAkC,IAA+C,IAAzCX,KAAKV,MAAMqB,KAAX,WAA8B0K,SAAcV,EAAgB,wBAGvG,IAAIW,EAAW,GACftL,KAAKV,MAAMqB,KAAX,MAAyBmE,SAAQ,SAAC8F,EAAM5F,GACpC,GAAY,KAAT4F,EAAY,CAEX,IAAIC,EAAe,GAChB,EAAKvL,MAAM0G,WACV6E,EAAe,4BAAQlJ,UAAU,eAAeqB,GAAI,UAAUgC,EAAM,WAAY/C,QAAS,EAAK0E,gBAC1F,uBAAGhF,UAAU,kBAIrB,IAAI4J,EAAY,GAChB,EAAKjM,MAAM6G,aAAX,MAAiCrB,SAAQ,SAACiG,EAAUC,GAChDO,EAAU5D,KACN,4BAAQjH,MAAOqK,EAAShD,SAAUkD,IAAK,iBAAiBjG,EAAM,KAAKgG,GAAYD,EAASxG,WAIhG+G,EAAS3D,KACL,yBAAKhG,UAAU,QAAQsJ,IAAK,QAAQjG,GAChC,yBAAKrD,UAAU,cACf,4BACIqB,GAAI,UAAUgC,EAAM,aACpBiB,SAAU,EAAK3G,MAAM2G,SACrBvF,MAAOkK,EAAK7C,SACZ/F,SAAU,EAAK0E,gBACd6E,GAEJV,QAKd7K,KAAKV,MAAMqB,KAAX,QAA6B,IAA0C,IAApCX,KAAKV,MAAMqB,KAAX,MAAyB0K,SAAcC,EAAW,oBAGxF,IAAIE,EAAe,GACnBxL,KAAKV,MAAMqB,KAAX,UAA6BmE,SAAQ,SAAC8F,EAAM5F,GACxC,GAAY,KAAT4F,EAAY,CAEX,IAAIC,EAAe,GAChB,EAAKvL,MAAM0G,WACV6E,EAAe,4BAAQlJ,UAAU,mBAAmBqB,GAAI,cAAcgC,EAAM,WAAY/C,QAAS,EAAK0E,gBAClG,uBAAGhF,UAAU,kBAIrB,IAAI8J,EAAkB,GACtB,EAAKnM,MAAM6G,aAAX,UAAqCrB,SAAQ,SAACiG,EAAUC,GACpDS,EAAgB9D,KACZ,4BAAQjH,MAAOqK,EAAS9C,aAAcgD,IAAK,qBAAqBjG,EAAM,KAAKgG,GAAYD,EAASxG,WAIxG,IAAImH,EAAwB,GAC5B,EAAKpM,MAAM6G,aAAX,gBAA2CrB,SAAQ,SAACiG,EAAUC,GAC1DU,EAAsB/D,KAClB,4BAAQjH,MAAOqK,EAAS5C,mBAAoB8C,IAAK,2BAA2BjG,EAAM,KAAKgG,GAAYD,EAASxG,WAIpHiH,EAAa7D,KACT,yBAAKhG,UAAU,YAAYsJ,IAAK,YAAYjG,GACxC,yBAAKrD,UAAU,kBACf,4BACIqB,GAAI,cAAcgC,EAAM,uBACxBiB,SAAU,EAAK3G,MAAM2G,SACrBvF,MAAOkK,EAAKzC,mBACZnG,SAAU,EAAK0E,gBACdgF,GAEL,4BACI1I,GAAI,cAAcgC,EAAM,iBACxBiB,SAAU,EAAK3G,MAAM2G,SACrBvF,MAAOkK,EAAK3C,aACZjG,SAAU,EAAK0E,gBACd+E,GAEJZ,QAKd7K,KAAKV,MAAMqB,KAAX,YAAiC,IAA8C,IAAxCX,KAAKV,MAAMqB,KAAX,UAA6B0K,SAAcG,EAAe,uBAGpG,IAAIG,EAAc,GAiDlB,OAhDA3L,KAAKV,MAAMqB,KAAX,SAA4BmE,SAAQ,SAAC8F,EAAM5F,GACvC,GAAY,KAAT4F,EAAY,CAEX,IAAIC,EAAe,GAChB,EAAKvL,MAAM0G,WACV6E,EAAe,4BAAQlJ,UAAU,kBAAkBqB,GAAI,aAAagC,EAAM,WAAY/C,QAAS,EAAK0E,gBAChG,uBAAGhF,UAAU,kBAIrB,IAAIiK,EAAiB,GACrB,EAAKtM,MAAM6G,aAAX,SAAoCrB,SAAQ,SAACiG,EAAUC,GACnDY,EAAejE,KACX,4BAAQjH,MAAOqK,EAAS1C,YAAa4C,IAAK,oBAAoBjG,EAAM,KAAKgG,GAAYD,EAASxG,WAItG,IAAIsH,EAAuB,GAC3B,EAAKvM,MAAM6G,aAAX,eAA0CrB,SAAQ,SAACiG,EAAUC,GACzDa,EAAqBlE,KACjB,4BAAQjH,MAAOqK,EAASxC,kBAAmB0C,IAAK,0BAA0BjG,EAAM,KAAKgG,GAAYD,EAASxG,WAIlHoH,EAAYhE,KACR,yBAAKhG,UAAU,WAAWsJ,IAAK,WAAWjG,GACtC,yBAAKrD,UAAU,iBACf,4BACIqB,GAAI,aAAagC,EAAM,sBACvBiB,SAAU,EAAK3G,MAAM2G,SACrBvF,MAAOkK,EAAKrC,kBACZvG,SAAU,EAAK0E,gBACdmF,GAEL,4BACI7I,GAAI,aAAagC,EAAM,gBACvBtE,MAAOkK,EAAKvC,YACZpC,SAAU,EAAK3G,MAAM2G,SACrBjE,SAAU,EAAK0E,gBACdkF,GAEJf,QAKd7K,KAAKV,MAAMqB,KAAX,WAAgC,IAA6C,IAAvCX,KAAKV,MAAMqB,KAAX,SAA4B0K,SAAcM,EAAc,sBAG7F,yBAAKhK,UAAU,UACV3B,KAAKV,MAAMC,SAEZ,kBAAC,EAAD,CAAgBmG,eAAgB1F,KAAKV,MAAMoG,eAAgBF,mBAAoBxF,KAAKV,MAAMkG,qBAE1F,yBAAKxC,GAAG,KAAKrB,UAAU,aAAayC,IAAKC,EAAQ,MAEjD,yBAAK1C,UAAU,QACX,yBAAKA,UAAU,SAAStB,MAAO,CAACiF,MAAO,UAAWwG,gBAAgB,YAAlE,UACA,yBAAKnK,UAAU,UAAf,YAGJ,kBAAC,EAAD,CAAQ0D,aAAa,SAAS3C,KAAM1C,KAAKV,MAAMqB,KAAX,YAEpC,yBAAKgB,UAAU,oBACX,yBAAKA,UAAU,eAAeyC,IAAK,+CAA+CpE,KAAKV,MAAMqB,KAAX,kBAClF,yBAAKgB,UAAU,iBACX,4BAAQA,UAAU,kBAAkBM,QAASjC,KAAKoG,YAC9C,uBAAGzE,UAAU,aAAaqB,GAAG,iBAEjC,2BACIpB,KAAK,OACLD,UAAU,wBACVjB,MAAOV,KAAKV,MAAMqB,KAAX,eACPuK,SAAUlL,KAAKV,MAAM4G,SACrBnE,YAAY,YACZiB,GAAG,YACHhB,SAAUhC,KAAKsG,mBAEnB,2BACI1E,KAAK,OACLD,UAAU,uBACVjB,MAAOV,KAAKV,MAAMqB,KAAX,cACPuK,SAAUlL,KAAKV,MAAM4G,SACrBnE,YAAY,WACZiB,GAAG,WACHhB,SAAUhC,KAAKsG,mBAEnB,2BACI1E,KAAK,OACLD,UAAU,kBACVjB,MAAOV,KAAKV,MAAMqB,KAAX,WACPuK,SAAUlL,KAAKV,MAAM4G,SACrBnE,YAAY,mBACZiB,GAAG,QACHhB,SAAUhC,KAAKsG,oBAGvB,yBAAK3E,UAAU,kBACVwI,EACD,yBAAKxI,UAAU,uBACV+I,EAAkBZ,GAEvB,yBAAKnI,UAAU,iBACV8I,EACAJ,IAGT,0BAAM1I,UAAU,iBAAiBqB,GAAG,cAAcE,SAAUlD,KAAKyG,aAC7D,yBAAK9E,UAAU,qBACX,qCAEJ,yBAAKA,UAAU,aACf,yBAAKA,UAAU,WACX,yBAAKA,UAAU,SACX,8BACIuJ,SAAUlL,KAAKV,MAAM4G,SACrBvE,UAAU,OACVqB,GAAG,MACHhB,SAAUhC,KAAKsG,iBACfvE,YAAY,oCACZrB,MAAOV,KAAKV,MAAMqB,KAAX,WAEV4J,EACAH,IAGT,yBAAKzI,UAAU,SAAQ,+CACvB,yBAAKA,UAAU,aACf,yBAAKA,UAAU,WACVgJ,EACAZ,GAEL,yBAAKpI,UAAU,SAAQ,sCACvB,yBAAKA,UAAU,aACf,yBAAKA,UAAU,WACV2J,EACAtB,GAEL,yBAAKrI,UAAU,SAAQ,yCACvB,yBAAKA,UAAU,aACf,yBAAKA,UAAU,WACV6J,EACAvB,GAEL,yBAAKtI,UAAU,SAAQ,wCACvB,yBAAKA,UAAU,aACf,yBAAKA,UAAU,WACVgK,EACAzB,GAEL,yBAAKvI,UAAU,SAAQ,4CACvB,yBAAKA,UAAU,aACf,yBAAKA,UAAU,WAAf,WACa3B,KAAKV,MAAMqB,KAAX,YAEZkJ,S,GA5gCO3H,IAAMC,WCyiBvB4J,E,YAxiBX,WAAY1M,GAAQ,IAAD,8BACf,+CACKC,MAAQ,CACTC,SAAU,GACVuG,IAAKzE,aAAa0E,QAAQ,OAC1BC,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,aAAc,CACV,WAAc,GACd,MAAS,GACT,UAAa,GACb,gBAAmB,GACnB,SAAY,GACZ,eAAkB,IAEtBxF,KAAO,CACH,KAAQ,GACR,SAAY,IAEhB+E,eAAgB,GAChBF,oBAAoB,GAGxB,EAAKY,WAAa,EAAKA,WAAWvG,KAAhB,gBAClB,EAAKwG,YAAc,EAAKA,YAAYxG,KAAjB,gBAEnB,EAAKyG,iBAAmB,EAAKA,iBAAiBzG,KAAtB,gBACxB,EAAK0G,mBAAqB,EAAKA,mBAAmB1G,KAAxB,gBAE1B,EAAK2G,eAAiB,EAAKA,eAAe3G,KAApB,gBACtB,EAAK4G,YAAc,EAAKA,YAAY5G,KAAjB,gBAEnB,EAAK6G,eAAiB,EAAKA,eAAe7G,KAApB,gBACtB,EAAK8G,eAAiB,EAAKA,eAAe9G,KAApB,gBACtB,EAAK+G,YAAc,EAAKA,YAAY/G,KAAjB,gBAEnB,EAAKgH,gBAAkB,EAAKA,gBAAgBhH,KAArB,gBAEvB,EAAKiH,YAAc,EAAKA,YAAYjH,KAAjB,gBACnB,EAAKkH,YAAc,EAAKA,YAAYlH,KAAjB,gBAxCJ,E,iFA6Cf,GADAwB,aAAagG,WAAW,SACF,OAAnBrH,KAAKV,MAAMwG,IAAc,CACxB,IAAIvE,EAAO,kBAAC,IAAD,CAAUC,GAAG,MACxBxB,KAAKC,SAAS,CACVV,SAAUgC,IAGlBvB,KAAKqG,cACLrG,KAAK6G,oB,mCAKL7G,KAAKC,SAAS,CACV+F,UAAYhG,KAAKV,MAAM0G,WAE3B,IAAIsB,EAASnH,SAAS8C,eAAe,eAElCqE,EAAOvD,UAAUwD,SAAS,aAEzBD,EAAOvD,UAAUE,OAAO,YACxBqD,EAAOvD,UAAUC,IAAI,aAErBsD,EAAOvD,UAAUE,OAAO,WACxBqD,EAAOvD,UAAUC,IAAI,aAGzBhE,KAAKC,SAAS,CACVgG,UAAWjG,KAAKV,MAAM2G,SACtBC,UAAWlG,KAAKV,MAAM4G,a,uCAKb3F,GACbA,EAAEwC,iBACF,IAAIC,EAAKzC,EAAEC,OAAOwC,GACdtC,EAAQH,EAAEC,OAAOE,MACjBa,EAAOvB,KAAKV,MAAMqB,KAEZ,cAAPqC,EACCzB,EAAI,KAAJ,UAA4Bb,EACf,aAAPsC,EACNzB,EAAI,KAAJ,SAA2Bb,EACd,UAAPsC,EACNzB,EAAI,KAAJ,MAAwBb,EACX,QAAPsC,IACNzB,EAAI,KAAJ,IAAsBb,GAG1BV,KAAKC,SAAS,CACVU,KAAMY,M,2CAMV,IAAIA,EAC2C,MAA5CvB,KAAKV,MAAMqB,KAAX,oBACCY,EAAOvB,KAAKV,MAAMqB,MACd,KAAJ,aAA+B,IAC/BX,KAAKC,SAAS,CACVU,KAAMY,OAGVA,EAAOvB,KAAKV,MAAMqB,MACd,KAAJ,aAA+B,IAC/BX,KAAKC,SAAS,CACVU,KAAMY,O,qCAQHhB,GACXA,EAAEwC,iBACF,IAAIrC,EAAQH,EAAEC,OAAOE,MACjB8G,EAAOjH,EAAEC,OAAOwC,GAAGyE,MAAM,MACzBC,EAAWF,EAAK,GAChBxC,EAAQwC,EAAK,GACb/G,EAAO+G,EAAK,GACZjG,EAAOvB,KAAKV,MAAMqB,KACtBY,EAAKmG,GAAU1C,GAAOvE,GAAQC,EAC9BV,KAAKC,SAAS,CACVU,KAAMY,M,kCAKFhB,GACRA,EAAEwC,iBACF,IAAIxB,EAAOvB,KAAKV,MAAMqB,KAEN,aADDJ,EAAEC,OAAOC,MAEpBc,EAAI,SAAaoG,KAAK,CAClB,cAAiB3H,KAAKV,MAAM6G,aAAayB,WAAW,GAAGC,cACvD,MAAS,GACT,YAAe,KAGvB7H,KAAKC,SAAS,CACVU,KAAMY,M,qCAOChB,GACXA,EAAEwC,iBACF,IAAIyE,EAAOjH,EAAEC,OAAOwC,GAAGyE,MAAM,MACzBC,EAAWF,EAAK,GAChBxC,EAAQwC,EAAK,GACbjG,EAAOvB,KAAKV,MAAMqB,KACtBY,EAAKmG,GAAU1C,GAAS,GACxBhF,KAAKC,SAAS,CACVU,KAAMY,M,uCAMVvB,KAAKC,SAAS,CACVU,KAAO,CACH,KAAQ,GACR,SAAY,MAGpBX,KAAKqG,cACLrG,KAAKoG,e,kCAGS7F,G,uFACdA,EAAEwC,iBAEEyF,EAAOrI,SAAS8C,eAAe,cAAcwF,MAAM,GACnDC,EAAWF,EAAK/H,KAChBkI,EAAa,CAAC,MAAO,MAAO,QAC5BC,EAAgBF,EAASjB,MAAM,KAAKoB,MAAMC,eAG3CH,EAAWI,SAASH,G,uBAUP,0DAERI,EAAW,IAAIC,UACVC,OAAO,aAAcV,GAC9BQ,EAASE,OAAO,MAAOlJ,KAAKV,MAAMwG,K,8BAGPlF,MAPf,yDAO0B,CAC9BC,OAAQ,OACRE,KAAMiI,K,eAFJ9H,E,2BAIaA,EAASE,Q,QAAtBA,E,OACiB,MAApBF,EAASC,OACY,MAAjBC,EAAI,KACHpB,KAAKC,SAAS,CACVyF,eAAgB,2BAEI,MAAjBtE,EAAI,KACXpB,KAAKC,SAAS,CACVyF,eAAgB,+BAEI,MAAjBtE,EAAI,MACXpB,KAAKC,SAAS,CACVyF,eAAgB,4CAIC,MAApBxE,EAASC,QAAmC,MAAjBC,EAAI,OACpCpB,KAAKC,SAAS,CACVyF,eAAgB,kCAEpB1F,KAAKqG,e,mDAGT5E,QAAQC,MAAM,SAAd,MACA1B,KAAKC,SAAS,CACVyF,eAAgB,2B,gCAIxB1F,KAAKC,SAAS,CACVyF,eAAgB,6C,QAIxB1F,KAAKC,SAAS,CACVuF,oBAAqBxF,KAAKV,MAAMkG,qB,gLAQ1B,gEACN7E,EAAO,CAAC,IAAOX,KAAKV,MAAMwG,K,4BAGLlF,MAJf,gEAI0B,CAC5BC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUN,M,OAEF,OARnBO,E,QAQQC,QACRM,QAAQC,MAAM,8BACd1B,KAAKC,SAAS,CACVyF,eAAgB,yBAChBF,oBAAqBxF,KAAKV,MAAMkG,sBAGX,MAApBtE,EAASC,SAGdnB,KAAKC,SAAS,CACVyF,eAAgB,gCAChBF,oBAAqBxF,KAAKV,MAAMkG,qBAEpCxF,KAAKqG,e,gDAGT5E,QAAQC,MAAM,SAAd,M,4FAKUnB,G,iFACdA,EAAEwC,iBAEQ,6DACNpC,EAAO,CAAC,IAAOX,KAAKV,MAAMwG,IAAK,KAAQ9F,KAAKV,MAAMqB,M,4BAE7BC,MAHf,6DAG0B,CAC5BC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUN,M,OAEF,OARnBO,E,QAQQC,OACRM,QAAQC,MAAM,8BAEW,MAApBR,EAASC,SAGdnB,KAAKqG,cACLrG,KAAKoG,c,kDAGT3E,QAAQC,MAAM,SAAd,M,mLAMM,4DACNf,EAAO,CAAC,IAAOX,KAAKV,MAAMwG,K,4BAELlF,MAHf,4DAG0B,CAC5BC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUN,M,UAEF,OARnBO,E,QAQQC,O,iBACRM,QAAQC,MAAM,6B,2BAEW,MAApBR,EAASC,O,4CACGD,EAASE,Q,QAAtBA,E,OACJpB,KAAKC,SAAS,CAACU,KAAOS,IAGlBG,EAAO,GAC4B,cAApCvB,KAAKV,MAAMqB,KAAX,YACCY,EAAO,kBAAC,IAAD,CAAUC,GAAG,0BAExBxB,KAAKC,SAAS,CAACV,SAAUgC,I,0DAG7BE,QAAQC,MAAM,SAAd,M,mLAKM,gE,4BAEed,MAFf,gEAE0B,CAC5BC,OAAQ,MACRC,QAAS,CACL,OAAU,mBACV,eAAgB,uB,UAGD,OAPnBI,E,QAOQC,O,gBACRM,QAAQC,MAAM,gC,0BAEW,MAApBR,EAASC,O,4CACGD,EAASE,Q,QAAtBA,E,OACJpB,KAAKC,SAAS,CACVkG,aAAc/E,I,0DAItBK,QAAQC,MAAM,SAAd,M,0FAIE,IAAD,OAGDmI,EAAgB,GAChBC,EAAqB,GACrBkC,EAAmB,GACnB7B,EAAmB,GAEpBnK,KAAKV,MAAM0G,WAEV6D,EAAgB,yBAAKlI,UAAU,kBACX,4BAAQC,KAAK,UAAS,uBAAGD,UAAU,iBACnC,4BAAQM,QAASjC,KAAKwG,gBAAgB,uBAAG7E,UAAU,kBAGvEmI,EAAqB,4BAAQnI,UAAU,6BAA6BM,QAASjC,KAAKuG,oBAC1D,uBAAG5E,UAAU,mBAGrCqK,EAAmB,4BAAQrK,UAAU,UAAUM,QAASjC,KAAK4G,YAAanG,KAAK,YACvD,uBAAGkB,UAAU,eADlB,gBAInBwI,EAAmB,yBAAKxI,UAAU,wBACV,2BAAO2I,QAAQ,aAAa/F,MAAM,6BAC9B,uBAAG5C,UAAU,kBAEjB,2BAAOqB,GAAG,aAAapB,KAAK,OAAOI,SAAUhC,KAAK8G,YAAarG,KAAK,UACpE,4BAAQ8D,MAAM,8BAA8BtC,QAASjC,KAAK+G,aACtD,uBAAGpF,UAAU,mBAM7C,IAAI+I,EAAmB,yCACwB,MAA5C1K,KAAKV,MAAMqB,KAAX,oBAAiD+J,EAAmB,sCAGvE,IAAIuB,EAAa,GAoDjB,OAnDAjM,KAAKV,MAAMqB,KAAX,SAA4BmE,SAAQ,SAAC8F,EAAM5F,GACvC,GAAY,KAAT4F,EAAY,CAEX,IAAIC,EAAe,GAChB,EAAKvL,MAAM0G,WACV6E,EAAe,4BAAQlJ,UAAU,cAAcqB,GAAI,aAAagC,EAAM,WAAY/C,QAAS,EAAK0E,gBAC5F,uBAAGhF,UAAU,kBAIrB,IAAImJ,EAAgB,GACpB,EAAKxL,MAAM6G,aAAX,WAAsCrB,SAAQ,SAACiG,EAAUC,GACrDF,EAAcnD,KACV,4BAAQjH,MAAOqK,EAASlD,cAAeoD,IAAK,sBAAsBjG,EAAM,KAAKgG,GAAYD,EAASxG,WAI1G0H,EAAWtE,KACP,yBAAKhG,UAAU,OAAOsJ,IAAK,WAAWjG,GAClC,uBAAGrD,UAAU,cAAb,aACA,8BACIC,KAAK,OACLsJ,SAAU,EAAK5L,MAAM4G,SACrBlD,GAAI,aAAagC,EAAM,UACvBhD,SAAU,EAAK0E,eACftD,aAAcwH,EAAKrG,MACnBxC,YAAY,YACZoB,UAAU,IACd,uBAAGxB,UAAU,cAAb,eACA,4BACIqB,GAAI,aAAagC,EAAM,kBACvBiB,SAAU,EAAK3G,MAAM2G,SACrBvF,MAAOkK,EAAK/C,cACZ7F,SAAU,EAAK0E,gBACdoE,GAEL,uBAAGnJ,UAAU,cAAb,mBACA,8BACIuJ,SAAU,EAAK5L,MAAM4G,SACrBlD,GAAI,aAAagC,EAAM,gBACvBhD,SAAU,EAAK0E,eACftD,aAAcwH,EAAKsB,YACnBnK,YAAY,yCACZoB,UAAU,IACb0H,QAKd7K,KAAKV,MAAMqB,KAAX,WAAgC,IAA6C,IAAvCX,KAAKV,MAAMqB,KAAX,SAA4B0K,SAAcY,EAAa,oBAG5F,yBAAKtK,UAAU,UACV3B,KAAKV,MAAMC,SAEZ,kBAAC,EAAD,CAAgBmG,eAAgB1F,KAAKV,MAAMoG,eAAgBF,mBAAoBxF,KAAKV,MAAMkG,qBAE1F,yBAAKxC,GAAG,KAAKrB,UAAU,aAAayC,IAAKC,EAAQ,MAEjD,yBAAK1C,UAAU,QACX,yBAAKA,UAAU,SAAStB,MAAO,CAACiF,MAAO,UAAWwG,gBAAgB,YAAlE,UACA,yBAAKnK,UAAU,UAAf,YAGJ,kBAAC,EAAD,CAAQ0D,aAAa,SAAS3C,KAAM1C,KAAKV,MAAMqB,KAAX,YAEpC,yBAAKgB,UAAU,oBACX,yBAAKA,UAAU,eAAeyC,IAAK,+CAA+CpE,KAAKV,MAAMqB,KAAX,kBAClF,yBAAKgB,UAAU,iBACX,4BAAQA,UAAU,kBAAkBM,QAASjC,KAAKoG,YAC9C,uBAAGzE,UAAU,aAAaqB,GAAG,iBAEjC,2BACIpB,KAAK,OACLD,UAAU,wBACVjB,MAAOV,KAAKV,MAAMqB,KAAX,eACPuK,SAAUlL,KAAKV,MAAM4G,SACrBnE,YAAY,YACZiB,GAAG,YACHhB,SAAUhC,KAAKsG,mBAEnB,2BACI1E,KAAK,OACLD,UAAU,uBACVjB,MAAOV,KAAKV,MAAMqB,KAAX,cACPuK,SAAUlL,KAAKV,MAAM4G,SACrBnE,YAAY,WACZiB,GAAG,WACHhB,SAAUhC,KAAKsG,mBAEnB,2BACI1E,KAAK,OACLD,UAAU,kBACVjB,MAAOV,KAAKV,MAAMqB,KAAX,WACPuK,SAAUlL,KAAKV,MAAM4G,SACrBnE,YAAY,eACZiB,GAAG,QACHhB,SAAUhC,KAAKsG,oBAGvB,yBAAK3E,UAAU,kBACVwI,EACD,yBAAKxI,UAAU,uBACV+I,EAAkBZ,IAG3B,0BAAMnI,UAAU,iBAAiBqB,GAAG,cAAcE,SAAUlD,KAAKyG,aAC7D,yBAAK9E,UAAU,qBACX,qCAEJ,yBAAKA,UAAU,aACf,yBAAKA,UAAU,WACX,yBAAKA,UAAU,SACX,8BACIuJ,SAAUlL,KAAKV,MAAM4G,SACrBvE,UAAU,OACVqB,GAAG,MACHhB,SAAUhC,KAAKsG,iBACfvE,YAAY,wCACZrB,MAAOV,KAAKV,MAAMqB,KAAX,aAInB,yBAAKgB,UAAU,SAAQ,yCACvB,yBAAKA,UAAU,aACf,yBAAKA,UAAU,WACVsK,EACAD,GAEL,yBAAKrK,UAAU,SAAQ,4CACvB,yBAAKA,UAAU,aACf,yBAAKA,UAAU,WAAf,WACa3B,KAAKV,MAAMqB,KAAX,YAEZkJ,S,GAhiBG3H,IAAMC,WCscnBgK,E,YAtcX,WAAY9M,GAAQ,IAAD,8BACf,+CACKC,MAAQ,CACTC,SAAU,GACVG,MAAO2B,aAAa0E,QAAQ,SAC5BrD,KAAMrB,aAAa0E,QAAQ,QAC3BD,IAAKzE,aAAa0E,QAAQ,OAC1BE,UAAU,EACVC,UAAU,EACVvF,KAAO,CACH,KAAQ,GACR,WAAc,GACd,MAAS,GACT,UAAa,GACb,SAAY,GACZ,SAAY,IAEhBwF,aAAc,CACV,WAAc,GACd,MAAS,GACT,UAAa,GACb,gBAAmB,GACnB,SAAY,GACZ,eAAkB,IAEtBiG,OAAQ,IAEZ,EAAK/F,YAAc,EAAKA,YAAYxG,KAAjB,gBACnB,EAAKgH,gBAAkB,EAAKA,gBAAgBhH,KAArB,gBACvB,EAAKwM,aAAe,EAAKA,aAAaxM,KAAlB,gBACpB,EAAKuH,eAAiB,EAAKA,eAAevH,KAApB,gBA9BP,E,iFAkCf,GAAwB,KAArBG,KAAKV,MAAMI,OAAqC,OAArBM,KAAKV,MAAMI,MAAgB,CACrD,IAAI6B,EAAO,kBAAC,IAAD,CAAUC,GAAG,MACxBxB,KAAKC,SAAS,CACVV,SAAUgC,SAGdvB,KAAK6G,kBACL7G,KAAKqG,gB,wHAKC,gE,4BAEezF,MAFf,gEAE0B,CAC5BC,OAAQ,MACRC,QAAS,CACL,OAAU,mBACV,eAAgB,uB,UAGD,OAPnBI,E,QAOQC,O,gBACRM,QAAQC,MAAM,gC,0BAEW,MAApBR,EAASC,O,4CACGD,EAASE,Q,QAAtBA,E,OACJpB,KAAKC,SAAS,CACVkG,aAAc/E,I,0DAItBK,QAAQC,MAAM,SAAd,M,qLAMM,iEACNf,EAAO,CACP,MAASX,KAAKV,MAAMI,O,4BAGCkB,MALf,iEAK0B,CAC5BC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUN,M,UAEF,OARnBO,E,QAQQC,O,iBACRM,QAAQC,MAAM,6BACVH,EAAO,kBAAC,IAAD,CAAUC,GAAG,YACxBxB,KAAKC,SAAS,CAACV,SAAUgC,I,2BAEA,MAApBL,EAASC,O,4CACGD,EAASE,Q,QAAtBA,E,OACJpB,KAAKC,SAAS,CAACU,KAAOS,IAGA,OAAnBpB,KAAKV,MAAMwG,KAAmC,KAAnB9F,KAAKV,MAAMwG,MACjCwG,EAAM,kBAAC,EAAD,CAAQjH,aAAa,UAAU3C,KAAM1C,KAAKV,MAAMoD,OAC1D1C,KAAKC,SAAS,CACVmM,OAAQE,K,0DAKpB7K,QAAQC,MAAM,SAAd,M,iLAaQ,+DAKRsH,EAAW,IAAIC,UACVC,OAAO,QAASlJ,KAAKV,MAAMI,OAEpCkB,MARY,8DAQD,CACHC,OAAQ,OACRE,KAAMiI,IAElBG,MAAK,SAAAjI,GAC8B,MAApBA,EAASC,OACRD,EAASkI,OAAOD,MAAK,SAAAC,GACjB,IAAIC,EAAMC,OAAOC,IAAIC,gBAAgBJ,GACjCK,EAAItJ,SAASuJ,cAAc,KAC/BD,EAAEnF,KAAO+E,EACTI,EAAEE,SAAW,aACbF,EAAEG,WAIN,EAAK3J,SAAS,CACVyF,eAAgB,4BAChBF,oBAAqB,EAAKlG,MAAMkG,wB,sFAOhD,IAAIjE,EAAO,kBAAC,IAAD,CAAUC,GAAG,YACxBxB,KAAKC,SAAS,CAACV,SAAUgC,M,+BAGnB,IAAD,OAGDgJ,EAAW,GAC8B,KAA1CvK,KAAKV,MAAMqB,KAAX,iBAA0F,OAA1CX,KAAKV,MAAMqB,KAAX,kBAC/C4J,EAAW,2BACK5I,UAAU,QACVC,KAAK,YACLwC,IAAK,+CAA+CpE,KAAKV,MAAMqB,KAAX,gBACpD6J,UAAU,GAJf,iEAUf,IAAIC,EAAY,GAC8B,KAA3CzK,KAAKV,MAAMqB,KAAX,kBAA4F,OAA3CX,KAAKV,MAAMqB,KAAX,mBAChD8J,EAAY,4BAAQ9I,UAAU,uBAAuBM,QAASjC,KAAKoH,gBACnD,uBAAGzF,UAAU,qBADjB,WAOhB,IAAI+I,EAAmB,4CACwB,MAA5C1K,KAAKV,MAAMqB,KAAX,oBAAiD+J,EAAmB,yCAGvE,IAAIC,EAAgB,GACpB3K,KAAKV,MAAMqB,KAAX,WAA8BmE,SAAQ,SAAC8F,EAAM5F,GACzC,GAAY,KAAT4F,EAAY,CAEX,IAAIC,EAAe,GAChB,EAAKvL,MAAM0G,WACV6E,EAAe,4BAAQlJ,UAAU,cAAcqB,GAAI,eAAegC,EAAM,WAAY/C,QAAS,EAAK0E,gBAC9F,uBAAGhF,UAAU,kBAIrB,IAAImJ,EAAgB,GACpB,EAAKxL,MAAM6G,aAAX,WAAsCrB,SAAQ,SAACiG,EAAUC,GACrDF,EAAcnD,KACV,4BAAQjH,MAAOqK,EAASlD,cAAeoD,IAAK,sBAAsBjG,EAAM,KAAKgG,GAAYD,EAASxG,WAI1GoG,EAAchD,KACV,yBAAKhG,UAAU,OAAOsJ,IAAK,aAAajG,GACpC,uBAAGrD,UAAU,cAAb,aACA,4BACIqB,GAAI,eAAegC,EAAM,kBACzBiB,SAAU,EAAK3G,MAAM2G,SACrBvF,MAAOkK,EAAK/C,eACXiD,GAEL,uBAAGnJ,UAAU,cAAb,MACA,2BACIC,KAAK,OACLsJ,SAAU,EAAK5L,MAAM4G,SACrBlD,GAAI,eAAegC,EAAM,YACzB5B,aAAcwH,EAAKO,QACnBpJ,YAAY,UACZoB,UAAU,IACd,uBAAGxB,UAAU,cAAb,WACA,2BACIC,KAAK,OACLsJ,SAAU,EAAK5L,MAAM4G,SACrBlD,GAAI,eAAegC,EAAM,SACzB5B,aAAcwH,EAAKQ,KACnBrJ,YAAY,OACZoB,UAAU,IACb0H,QAKd7K,KAAKV,MAAMqB,KAAX,aAAkC,IAA+C,IAAzCX,KAAKV,MAAMqB,KAAX,WAA8B0K,SAAcV,EAAgB,8BAGvG,IAAIW,EAAW,GACftL,KAAKV,MAAMqB,KAAX,MAAyBmE,SAAQ,SAAC8F,EAAM5F,GACpC,GAAY,KAAT4F,EAAY,CAEX,IAAIW,EAAY,GAChB,EAAKjM,MAAM6G,aAAX,MAAiCrB,SAAQ,SAACiG,EAAUC,GAChDO,EAAU5D,KACN,4BAAQjH,MAAOqK,EAAShD,SAAUkD,IAAK,iBAAiBjG,EAAM,KAAKgG,GAAYD,EAASxG,WAIhG+G,EAAS3D,KACL,yBAAKhG,UAAU,QAAQsJ,IAAK,QAAQjG,GAChC,yBAAKrD,UAAU,cACf,4BACIqB,GAAI,UAAUgC,EAAM,aACpBiB,SAAU,EAAK3G,MAAM2G,SACrBvF,MAAOkK,EAAK7C,UACXwD,SAMlBvL,KAAKV,MAAMqB,KAAX,QAA6B,IAA0C,IAApCX,KAAKV,MAAMqB,KAAX,MAAyB0K,SAAcC,EAAW,oBAGxF,IAAIE,EAAe,GACnBxL,KAAKV,MAAMqB,KAAX,UAA6BmE,SAAQ,SAAC8F,EAAM5F,GACxC,GAAY,KAAT4F,EAAY,CAEX,IAAIC,EAAe,GAChB,EAAKvL,MAAM0G,WACV6E,EAAe,4BAAQlJ,UAAU,mBAAmBqB,GAAI,cAAcgC,EAAM,WAAY/C,QAAS,EAAK0E,gBAClG,uBAAGhF,UAAU,kBAIrB,IAAI8J,EAAkB,GACtB,EAAKnM,MAAM6G,aAAX,UAAqCrB,SAAQ,SAACiG,EAAUC,GACpDS,EAAgB9D,KACZ,4BAAQjH,MAAOqK,EAAS9C,aAAcgD,IAAK,qBAAqBjG,EAAM,KAAKgG,GAAYD,EAASxG,WAIxG,IAAImH,EAAwB,GAC5B,EAAKpM,MAAM6G,aAAX,gBAA2CrB,SAAQ,SAACiG,EAAUC,GAC1DU,EAAsB/D,KAClB,4BAAQjH,MAAOqK,EAAS5C,mBAAoB8C,IAAK,2BAA2BjG,EAAM,KAAKgG,GAAYD,EAASxG,WAIpHiH,EAAa7D,KACT,yBAAKhG,UAAU,YAAYsJ,IAAK,YAAYjG,GACxC,yBAAKrD,UAAU,kBACf,4BACIqB,GAAI,cAAcgC,EAAM,uBACxBiB,SAAU,EAAK3G,MAAM2G,SACrBvF,MAAOkK,EAAKzC,oBACXuD,GAEL,4BACI1I,GAAI,cAAcgC,EAAM,iBACxBiB,SAAU,EAAK3G,MAAM2G,SACrBvF,MAAOkK,EAAK3C,cACXwD,GAEJZ,QAKd7K,KAAKV,MAAMqB,KAAX,YAAiC,IAA8C,IAAxCX,KAAKV,MAAMqB,KAAX,UAA6B0K,SAAcG,EAAe,6BAGpG,IAAIG,EAAc,GA+ClB,OA9CA3L,KAAKV,MAAMqB,KAAX,SAA4BmE,SAAQ,SAAC8F,EAAM5F,GACvC,GAAY,KAAT4F,EAAY,CAEX,IAAIC,EAAe,GAChB,EAAKvL,MAAM0G,WACV6E,EAAe,4BAAQlJ,UAAU,kBAAkBqB,GAAI,aAAagC,EAAM,WAAY/C,QAAS,EAAK0E,gBAChG,uBAAGhF,UAAU,kBAIrB,IAAIiK,EAAiB,GACrB,EAAKtM,MAAM6G,aAAX,SAAoCrB,SAAQ,SAACiG,EAAUC,GACnDY,EAAejE,KACX,4BAAQjH,MAAOqK,EAAS1C,YAAa4C,IAAK,oBAAoBjG,EAAM,KAAKgG,GAAYD,EAASxG,WAItG,IAAIsH,EAAuB,GAC3B,EAAKvM,MAAM6G,aAAX,eAA0CrB,SAAQ,SAACiG,EAAUC,GACzDa,EAAqBlE,KACjB,4BAAQjH,MAAOqK,EAASxC,kBAAmB0C,IAAK,0BAA0BjG,EAAM,KAAKgG,GAAYD,EAASxG,WAIlHoH,EAAYhE,KACR,yBAAKhG,UAAU,WAAWsJ,IAAK,WAAWjG,GACtC,yBAAKrD,UAAU,iBACf,4BACIqB,GAAI,aAAagC,EAAM,sBACvBiB,SAAU,EAAK3G,MAAM2G,SACrBvF,MAAOkK,EAAKrC,mBACXsD,GAEL,4BACI7I,GAAI,aAAagC,EAAM,gBACvBtE,MAAOkK,EAAKvC,YACZpC,SAAU,EAAK3G,MAAM2G,UACpB2F,GAEJf,QAKd7K,KAAKV,MAAMqB,KAAX,WAAgC,IAA6C,IAAvCX,KAAKV,MAAMqB,KAAX,SAA4B0K,SAAcM,EAAc,6BAG7F,yBAAKhK,UAAU,UACV3B,KAAKV,MAAMC,SAEZ,yBAAKyD,GAAG,KAAKrB,UAAU,aAAayC,IAAKC,EAAQ,MAEjD,yBAAK1C,UAAU,QACX,yBAAKA,UAAU,SAAStB,MAAO,CAACiF,MAAO,UAAWwG,gBAAgB,YAAlE,UACA,yBAAKnK,UAAU,UAAf,YAGH3B,KAAKV,MAAM8M,OAEZ,yBAAKzK,UAAU,oBACX,yBAAKA,UAAU,eAAeyC,IAAK,+CAA+CpE,KAAKV,MAAMqB,KAAX,kBAClF,yBAAKgB,UAAU,iBACX,4BAAQA,UAAU,kBAAkBM,QAASjC,KAAKqM,cAC9C,uBAAG1K,UAAU,mBAAmBqB,GAAG,iBAEvC,2BACIpB,KAAK,OACLD,UAAU,wBACVjB,MAAOV,KAAKV,MAAMqB,KAAX,eACPuK,SAAUlL,KAAKV,MAAM4G,SACrBnE,YAAY,YACZiB,GAAG,cAEP,2BACIpB,KAAK,OACLD,UAAU,uBACVjB,MAAOV,KAAKV,MAAMqB,KAAX,cACPuK,SAAUlL,KAAKV,MAAM4G,SACrBnE,YAAY,WACZiB,GAAG,aAEP,2BACIpB,KAAK,OACLD,UAAU,kBACVjB,MAAOV,KAAKV,MAAMqB,KAAX,WACPuK,SAAUlL,KAAKV,MAAM4G,SACrBnE,YAAY,mBACZiB,GAAG,WAGX,yBAAKrB,UAAU,kBACX,yBAAKA,UAAU,uBACV+I,GAEL,yBAAK/I,UAAU,iBACV8I,IAGT,0BAAM9I,UAAU,iBAAiBqB,GAAG,eAChC,yBAAKrB,UAAU,qBACX,qCAEJ,yBAAKA,UAAU,aACf,yBAAKA,UAAU,WACX,yBAAKA,UAAU,SACX,8BACIuJ,SAAUlL,KAAKV,MAAM4G,SACrBvE,UAAU,OACVqB,GAAG,MACHjB,YAAY,oCACZrB,MAAOV,KAAKV,MAAMqB,KAAX,WAEV4J,IAGT,yBAAK5I,UAAU,SAAQ,+CACvB,yBAAKA,UAAU,aACf,yBAAKA,UAAU,WACVgJ,GAEL,yBAAKhJ,UAAU,SAAQ,sCACvB,yBAAKA,UAAU,aACf,yBAAKA,UAAU,WACV2J,GAEL,yBAAK3J,UAAU,SAAQ,yCACvB,yBAAKA,UAAU,aACf,yBAAKA,UAAU,WACV6J,GAEL,yBAAK7J,UAAU,SAAQ,wCACvB,yBAAKA,UAAU,aACf,yBAAKA,UAAU,WACVgK,GAEL,yBAAKhK,UAAU,SAAQ,4CACvB,yBAAKA,UAAU,aACf,yBAAKA,UAAU,WAAf,WACa3B,KAAKV,MAAMqB,KAAX,mB,GA7bPuB,IAAMC,WC0PrBoK,E,YAxPX,WAAYlN,GAAQ,IAAD,8BACf,+CACKC,MAAQ,CACTC,SAAU,GACVG,MAAO2B,aAAa0E,QAAQ,SAC5BrD,KAAMrB,aAAa0E,QAAQ,QAC3BD,IAAKzE,aAAa0E,QAAQ,OAC1BC,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,aAAc,CACV,WAAc,GACd,MAAS,GACT,UAAa,GACb,gBAAmB,GACnB,SAAY,GACZ,eAAkB,IAEtBxF,KAAO,CACH,KAAQ,GACR,WAAc,GACd,MAAS,GACT,UAAa,GACb,SAAY,GACZ,SAAY,IAEhB+E,eAAgB,GAChBF,oBAAoB,EACpB4G,OAAQ,IAEZ,EAAK/F,YAAc,EAAKA,YAAYxG,KAAjB,gBAEnB,EAAKgH,gBAAkB,EAAKA,gBAAgBhH,KAArB,gBAEvB,EAAKwM,aAAe,EAAKA,aAAaxM,KAAlB,gBAlCL,E,iFAsCf,GAAwB,KAArBG,KAAKV,MAAMI,OAAqC,OAArBM,KAAKV,MAAMI,MAAgB,CACrD,IAAI6B,EAAO,kBAAC,IAAD,CAAUC,GAAG,MACxBxB,KAAKC,SAAS,CACVV,SAAUgC,SAGdvB,KAAK6G,kBACL7G,KAAKqG,gB,0HAMC,iEACN1F,EAAO,CACP,MAASX,KAAKV,MAAMI,O,4BAGCkB,MALf,iEAK0B,CAC5BC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUN,M,UAEF,OARnBO,E,QAQQC,O,iBACRM,QAAQC,MAAM,6BACVH,EAAO,kBAAC,IAAD,CAAUC,GAAG,YACxBxB,KAAKC,SAAS,CAACV,SAAUgC,I,2BAEA,MAApBL,EAASC,O,4CACGD,EAASE,Q,QAAtBA,E,OACJpB,KAAKC,SAAS,CAACU,KAAOS,IAGA,OAAnBpB,KAAKV,MAAMwG,KAAmC,KAAnB9F,KAAKV,MAAMwG,MACjCwG,EAAM,kBAAC,EAAD,CAAQjH,aAAa,UAAU3C,KAAM1C,KAAKV,MAAMoD,OAC1D1C,KAAKC,SAAS,CACVmM,OAAQE,K,0DAKpB7K,QAAQC,MAAM,SAAd,M,mLAKM,gE,4BAEed,MAFf,gEAE0B,CAC5BC,OAAQ,MACRC,QAAS,CACL,OAAU,mBACV,eAAgB,uB,UAGD,OAPnBI,E,QAOQC,O,gBACRM,QAAQC,MAAM,gC,0BAEW,MAApBR,EAASC,O,4CACGD,EAASE,Q,QAAtBA,E,OACJpB,KAAKC,SAAS,CACVkG,aAAc/E,I,0DAItBK,QAAQC,MAAM,SAAd,M,gGAKJ,IAAIH,EAAO,kBAAC,IAAD,CAAUC,GAAG,YACxBxB,KAAKC,SAAS,CAACV,SAAUgC,M,+BAGnB,IAAD,OAGDmJ,EAAmB,yCACwB,MAA5C1K,KAAKV,MAAMqB,KAAX,oBAAiD+J,EAAmB,sCAGvE,IAAIuB,EAAa,GAyCjB,OAxCAjM,KAAKV,MAAMqB,KAAX,SAA4BmE,SAAQ,SAAC8F,EAAM5F,GACvC,GAAY,KAAT4F,EAAY,CAEX,IAAIE,EAAgB,GACpB,EAAKxL,MAAM6G,aAAX,WAAsCrB,SAAQ,SAACiG,EAAUC,GACrDF,EAAcnD,KACV,4BAAQjH,MAAOqK,EAASlD,cAAeoD,IAAK,sBAAsBjG,EAAM,KAAKgG,GAAYD,EAASxG,WAI1G0H,EAAWtE,KACP,yBAAKhG,UAAU,OAAOsJ,IAAK,WAAWjG,GAClC,uBAAGrD,UAAU,cAAb,aACA,8BACIC,KAAK,OACLsJ,SAAU,EAAK5L,MAAM4G,SACrBlD,GAAI,aAAagC,EAAM,UACvB5B,aAAcwH,EAAKrG,MACnBxC,YAAY,YACZoB,UAAU,IACd,uBAAGxB,UAAU,cAAb,eACA,4BACIqB,GAAI,aAAagC,EAAM,kBACvBiB,SAAU,EAAK3G,MAAM2G,SACrBvF,MAAOkK,EAAK/C,eACXiD,GAEL,uBAAGnJ,UAAU,cAAb,mBACA,8BACIuJ,SAAU,EAAK5L,MAAM4G,SACrBlD,GAAI,aAAagC,EAAM,gBACvB5B,aAAcwH,EAAKsB,YACnBnK,YAAY,yCACZoB,UAAU,UAK3BnD,KAAKV,MAAMqB,KAAX,WAAgC,IAA6C,IAAvCX,KAAKV,MAAMqB,KAAX,SAA4B0K,SAAcY,EAAa,oBAG5F,yBAAKtK,UAAU,UACV3B,KAAKV,MAAMC,SAEZ,kBAAC,EAAD,CAAgBmG,eAAgB1F,KAAKV,MAAMoG,eAAgBF,mBAAoBxF,KAAKV,MAAMkG,qBAE1F,yBAAKxC,GAAG,KAAKrB,UAAU,aAAayC,IAAKC,EAAQ,MAEjD,yBAAK1C,UAAU,QACX,yBAAKA,UAAU,SAAStB,MAAO,CAACiF,MAAO,UAAWwG,gBAAgB,YAAlE,UACA,yBAAKnK,UAAU,UAAf,YAGH3B,KAAKV,MAAM8M,OAEZ,yBAAKzK,UAAU,oBACX,yBAAKA,UAAU,eAAeyC,IAAK,+CAA+CpE,KAAKV,MAAMqB,KAAX,kBAClF,yBAAKgB,UAAU,iBACX,4BAAQA,UAAU,kBAAkBM,QAASjC,KAAKqM,cAC9C,uBAAG1K,UAAU,mBAAmBqB,GAAG,iBAEvC,2BACIpB,KAAK,OACLD,UAAU,wBACVjB,MAAOV,KAAKV,MAAMqB,KAAX,eACPuK,SAAUlL,KAAKV,MAAM4G,SACrBnE,YAAY,YACZiB,GAAG,cAEP,2BACIpB,KAAK,OACLD,UAAU,uBACVjB,MAAOV,KAAKV,MAAMqB,KAAX,cACPuK,SAAUlL,KAAKV,MAAM4G,SACrBnE,YAAY,WACZiB,GAAG,aAEP,2BACIpB,KAAK,OACLD,UAAU,kBACVjB,MAAOV,KAAKV,MAAMqB,KAAX,WACPuK,SAAUlL,KAAKV,MAAM4G,SACrBnE,YAAY,eACZiB,GAAG,WAGX,yBAAKrB,UAAU,kBACX,yBAAKA,UAAU,uBACV+I,IAGT,0BAAM/I,UAAU,iBAAiBqB,GAAG,cAAcE,SAAUlD,KAAKyG,aAC7D,yBAAK9E,UAAU,qBACX,qCAEJ,yBAAKA,UAAU,aACf,yBAAKA,UAAU,WACX,yBAAKA,UAAU,SACX,8BACIuJ,SAAUlL,KAAKV,MAAM4G,SACrBvE,UAAU,OACVqB,GAAG,MACHjB,YAAY,wCACZrB,MAAOV,KAAKV,MAAMqB,KAAX,aAInB,yBAAKgB,UAAU,SAAQ,yCACvB,yBAAKA,UAAU,aACf,yBAAKA,UAAU,WACVsK,GAEL,yBAAKtK,UAAU,SAAQ,4CACvB,yBAAKA,UAAU,aACf,yBAAKA,UAAU,WAAf,WACa3B,KAAKV,MAAMqB,KAAX,mB,GA/OXuB,IAAMC,WCuTjBqK,G,kBAvTX,WAAYnN,GAAQ,IAAD,8BACf,+CACKC,MAAQ,CACTC,SAAU,GACVuG,IAAKzE,aAAa0E,QAAQ,OAC1BI,aAAc,CACV,WAAc,GACd,MAAS,GACT,UAAa,GACb,gBAAmB,GACnB,SAAY,GACZ,eAAkB,IAEtBxF,KAAO,CACH,KAAQ,GACR,WAAc,GACd,MAAS,GACT,UAAa,GACb,SAAY,GACZ,SAAY,IAEhByL,OAAQ,GACRK,WAAY,YACZhJ,YAAa,GACbiJ,QAAS,CACL,CACI,KAAO,cAGfC,KAAM,aAGV,EAAKC,iBAAmB,EAAKA,iBAAiB/M,KAAtB,gBACxB,EAAKgN,kBAAoB,EAAKA,kBAAkBhN,KAAvB,gBACzB,EAAKwG,YAAc,EAAKA,YAAYxG,KAAjB,gBACnB,EAAKiN,YAAc,EAAKA,YAAYjN,KAAjB,gBACnB,EAAKgH,gBAAkB,EAAKA,gBAAgBhH,KAArB,gBACvB,EAAKkN,WAAa,EAAKA,WAAWlN,KAAhB,gBAClB,EAAKmN,SAAW,EAAKA,SAASnN,KAAd,gBAtCD,E,iFA4CfwB,aAAagG,WAAW,SACF,KAAnBrH,KAAKV,MAAMwG,KAAiC,OAAnB9F,KAAKV,MAAMwG,KACnC9F,KAAKqG,cAETrG,KAAK6G,kBACL7G,KAAK8M,cACsC,KAAxCzL,aAAa0E,QAAQ,gBACpB/F,KAAKC,SAAS,CACVwD,YAAapC,aAAa0E,QAAQ,mB,wHAQhC,4DACNpF,EAAO,CAAC,IAAOX,KAAKV,MAAMwG,K,4BAELlF,MAHf,4DAG0B,CAC5BC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUN,M,UAEF,OARnBO,E,QAQQC,O,iBACRM,QAAQC,MAAM,6B,2BAEW,MAApBR,EAASC,O,4CACGD,EAASE,Q,QAAtBA,E,OACJpB,KAAKC,SAAS,CAACU,KAAOS,IAClBkL,EAAM,kBAAC,EAAD,CAAQjH,aAAa,SAAS3C,KAAM1C,KAAKV,MAAMqB,KAAX,YAC9CX,KAAKC,SAAS,CACVmM,OAAQE,IAEZjL,aAAaC,QAAQ,OAAQtB,KAAKV,MAAMqB,KAAX,W,0DAGjCc,QAAQC,MAAM,SAAd,M,mLAKM,gE,4BAEed,MAFf,gEAE0B,CAC5BC,OAAQ,MACRC,QAAS,CACL,OAAU,mBACV,eAAgB,uB,UAGD,OAPnBI,E,QAOQC,O,gBACRM,QAAQC,MAAM,gC,0BAEW,MAApBR,EAASC,O,4CACGD,EAASE,Q,QAAtBA,E,OACJpB,KAAKC,SAAS,CACVkG,aAAc/E,I,0DAItBK,QAAQC,MAAM,SAAd,M,iLAMM,qDACNf,EAAO,CACP,WAAcX,KAAKV,MAAMmN,WACzB,YAAezM,KAAKV,MAAMmE,a,4BAGL7C,MANf,qDAM0B,CAC5BC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUN,M,UAEF,OARnBO,E,QAQQC,O,iBACRM,QAAQC,MAAM,oB,2BAEW,MAApBR,EAASC,O,4CACGD,EAASE,Q,QAAtBA,E,OACJpB,KAAKC,SAAS,CACN,QAAYmB,EAAKsL,QACjB,KAAQ1M,KAAKV,MAAMmN,a,0DAI/BhL,QAAQC,MAAM,SAAd,M,mGAIUnB,GACdA,EAAEwC,iBACF,IAAIoB,EAAQhE,SAAS8C,eAAe,gBACpCjD,KAAKC,SAAS,CACVwD,YAAaU,EAAMzD,U,uCAIVH,GACbA,EAAEwC,iBACF,IAAIkK,EAAY9M,SAAS8C,eAAe,oBACpCiK,EAAU/M,SAAS8C,eAAe,mBAEnB,qBAAhB1C,EAAEC,OAAOwC,IACRiK,EAAUlJ,UAAUC,IAAI,wBACxBkJ,EAAQnJ,UAAUE,OAAO,wBACzBjE,KAAKC,SAAS,CACVwM,WAAY,eAEO,oBAAhBlM,EAAEC,OAAOwC,KAChBiK,EAAUlJ,UAAUE,OAAO,wBAC3BiJ,EAAQnJ,UAAUC,IAAI,wBACtBhE,KAAKC,SAAS,CACVwM,WAAY,a,iCAKblM,GACPA,EAAEwC,iBACF,IAGIuJ,EAHA5M,EAAQa,EAAEC,OAAOwC,GAAGyE,MAAM,KAAK,GAC/B/E,EAAOnC,EAAEC,OAAOwC,GAAGyE,MAAM,KAAK,GAClCpG,aAAaC,QAAQ,QAAS5B,GAElB,cAATgD,EACC4J,EAAM,kBAAC,IAAD,CAAU9K,GAAG,sBACJ,UAATkB,IACN4J,EAAM,kBAAC,IAAD,CAAU9K,GAAG,mBAEvBxB,KAAKC,SAAS,CACVV,SAAU+M,M,iCAKd,IAAIA,EAAM,kBAAC,IAAD,CAAU9K,GAAG,MACvBxB,KAAKC,SAAS,CACVV,SAAU+M,M,+BAKR,IAAD,OACDa,EAAa,yBAAKxL,UAAU,OAAf,oBACd3B,KAAKV,MAAMoN,UAAY,KACC,cAApB1M,KAAKV,MAAMqN,MACVQ,EAAa,GACbnN,KAAKV,MAAMoN,QAAQ5H,SAAQ,SAAC8F,EAAM5F,GAC9BmI,EAAWxF,KACP,yBAAKhG,UAAU,SAASsJ,IAAK,SAASjG,GAClC,yBAAKZ,IAAK,+CAA+CwG,EAAKwC,aAC9D,yBAAKzL,UAAU,UACX,yBAAKA,UAAU,QAAQiJ,EAAKrI,WAC5B,yBAAKZ,UAAU,YAAYiJ,EAAKpI,UAChC,yBAAKb,UAAU,SAASiJ,EAAKrG,OAC7B,4BAAQvB,GAAI,cAAcgC,EAAM,IAAI4F,EAAKlL,MAAM,IAAIkL,EAAKlI,KAAMT,QAAS,EAAK8K,YACxE,uBAAGpL,UAAU,cACb,oDAOI,UAApB3B,KAAKV,MAAMqN,OACfQ,EAAa,GACbnN,KAAKV,MAAMoN,QAAQ5H,SAAQ,SAAC8F,EAAM5F,GAE9B,IAAI8F,EAAgB,GACpB,EAAKxL,MAAM6G,aAAX,WAAsCrB,SAAQ,SAACiG,EAAUC,GACrDF,EAAcnD,KACV,4BAAQjH,MAAOqK,EAASlD,cAAeoD,IAAK,sBAAsBjG,EAAM,KAAKgG,GAAYD,EAASxG,WAG1G4I,EAAWxF,KACP,yBAAKhG,UAAU,SAASsJ,IAAK,SAASjG,GAClC,yBAAKZ,IAAK,+CAA+CwG,EAAKwC,aAC9D,yBAAKzL,UAAU,UACX,yBAAKA,UAAU,QAAQiJ,EAAKrI,WAC5B,yBAAKZ,UAAU,YAAYiJ,EAAKpI,UAChC,yBAAKb,UAAU,SAASiJ,EAAKrG,OAC7B,4BAAQvB,GAAI,cAAcgC,EAAM,IAAI4F,EAAKlL,MAAM,IAAIkL,EAAKlI,KAAMT,QAAS,EAAK8K,YACxE,uBAAGpL,UAAU,cACb,8CAGR,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SACViJ,EAAKyC,WAEV,yBAAK1L,UAAU,eACViJ,EAAKsB,aAEV,yBAAKvK,UAAU,WACX,yBAAKA,UAAU,SAAf,iBACA,4BACIsE,UAAU,EACVvF,MAAOkK,EAAK/C,eACXiD,YAUjC,IAAIwC,EAAe,GAOnB,MANsB,KAAnBtN,KAAKV,MAAMwG,KAAiC,OAAnB9F,KAAKV,MAAMwG,MACnCwH,EAAe,4BAAQ3L,UAAU,gBAAgBM,QAASjC,KAAKgN,UAC3C,uBAAGrL,UAAU,uBAKjC,yBAAKA,UAAU,UACV3B,KAAKV,MAAMC,SAEXS,KAAKV,MAAM8M,OAEZ,yBAAKpJ,GAAG,KAAKrB,UAAU,aAAayC,IAAKC,EAAQ,MAEjD,yBAAK1C,UAAU,QACX,yBAAKA,UAAU,SAAStB,MAAO,CAACiF,MAAO,UAAWwG,gBAAgB,YAAlE,UACA,yBAAKnK,UAAU,UAAf,YAGH2L,EAED,yBAAK3L,UAAU,oBACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,gBACX,uBAAGA,UAAU,iBACb,2BAAOC,KAAK,OAAOG,YAAY,UAAUiB,GAAG,eAAehB,SAAUhC,KAAK6M,oBAC1E,6BACA,4BAAQ5K,QAASjC,KAAK8M,aAAtB,WAIJ,yBAAKnL,UAAU,gBACX,4BAAQqB,GAAG,mBAAmBf,QAASjC,KAAK4M,iBAAkBjL,UAAU,wBAAxE,aAGA,4BAAQqB,GAAG,kBAAkBf,QAASjC,KAAK4M,kBAA3C,cAKR,yBAAKjL,UAAU,WACVwL,S,GAhTJjL,IAAMC,YCwCZoL,E,iLA7BX,OACE,kBAAC,IAAD,KACE,yBAAK5L,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6L,KAAK,wBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,oBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,qBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,iBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,c,GAtBItL,IAAMC,WCTxBsL,IAASC,OAAO,kBAAC,EAAD,MAASvN,SAAS8C,eAAe,W","file":"static/js/main.14efcafb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/backgroundBig.f2b86eb1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/main_image.afdbf1d8.png\";","import React from 'react';\r\nimport './Login.css';\r\nimport  { Redirect } from 'react-router-dom';\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            redirect: \"\",\r\n            loginError: \"\",\r\n            toggleLoginFlag: false,\r\n            email: \"\",\r\n            password: \"\"\r\n          };\r\n        this.toggleLogin = this.toggleLogin.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        // Parent of login changes the flag state to toggle login form\r\n        if(this.props.toggleLoginFlag !== this.state.toggleLoginFlag) {\r\n            this.setState({\r\n                toggleLoginFlag: this.props.toggleLoginFlag\r\n            });\r\n            this.toggleLogin();\r\n        }\r\n    }\r\n\r\n    // Toggle show login form\r\n    toggleLogin() {\r\n        let loginForm = document.querySelector(\".login\");\r\n        if(loginForm.style.display === \"flex\") {\r\n        loginForm.style.display = \"none\";\r\n        } else {\r\n        loginForm.style.display = \"flex\";\r\n        }\r\n    }\r\n\r\n    // Handle input change of login form\r\n    handleInputChange(e) {\r\n        if(e.target.name === \"email\") {\r\n            this.setState({\r\n                email: e.target.value\r\n            });\r\n        } else if (e.target.name === \"password\") {\r\n            this.setState({\r\n                password: e.target.value\r\n            });\r\n        }\r\n    }\r\n\r\n    // Handle Submit of login form\r\n    async handleSubmit(e) {\r\n        const url = 'http://localhost/junior-workers/api/login.php';\r\n        const data = {\"email\":this.state.email, \"password\":this.state.password};\r\n\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n            \r\n            if(response.status !== 200) {\r\n                this.setState({\r\n                    loginError : \"Unable to login\"\r\n                });\r\n            }\r\n            else if (response.status === 200) {\r\n                const json = await response.json();\r\n                localStorage.setItem(\"jwt\", json[\"jwt\"]);\r\n                var temp = \"\";\r\n                // navigate user to the proper profil according to their role\r\n                if(json[\"role\"] === \"candidate\") {\r\n                    temp = <Redirect to='/my-candidate-profil' />;\r\n                } else if(json[\"role\"] === \"hirer\") {\r\n                    temp = <Redirect to='/my-hirer-profil' />;\r\n                }\r\n                this.setState({redirect : temp});\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            this.setState({\r\n                loginError : \"Unable to login\"\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"login\">\r\n                {this.state.redirect}\r\n                <div className=\"login-form\">\r\n                    <div className=\"login-message\" style={{\"color\":\"#D0321E\"}}>{this.state.loginError}</div>\r\n\r\n                    <div className=\"login-label\">Email</div>\r\n                    <div className=\"login-input-before fa fa-user\" />\r\n                    <input\r\n                        name=\"email\"\r\n                        className=\"login-input-text\" \r\n                        type=\"email\" minLength=\"6\" \r\n                        maxLength=\"90\" \r\n                        placeholder=\"John@mail.com\"\r\n                        onChange={this.handleInputChange} />\r\n                    <div className=\"login-label\">Password</div>\r\n                    <div className=\"login-input-before fa fa-lock\" />\r\n                    <input \r\n                        name=\"password\"\r\n                        className=\"login-input-text\" \r\n                        type=\"password\" \r\n                        minLength=\"6\" \r\n                        maxLength=\"40\" \r\n                        placeholder=\"abc123\" \r\n                        onChange={this.handleInputChange}/>\r\n                    <button className=\"login-submit\" onClick={this.handleSubmit}>Sign in</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport './Join.css';\r\n\r\nclass Join extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            joinMessage: \"\",\r\n            toggleJoinFlag: false,\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            repassword: \"\",\r\n            role: \"candidate\"\r\n          };\r\n        this.toggleJoin = this.toggleJoin.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.resetAllInput = this.resetAllInput.bind(this);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(this.props.toggleJoinFlag !== this.state.toggleJoinFlag) {\r\n            this.setState({\r\n                toggleJoinFlag: this.props.toggleJoinFlag\r\n            });\r\n            this.toggleJoin();\r\n        }\r\n    }\r\n\r\n    toggleJoin() {\r\n        let joinForm = document.querySelector(\".join\");\r\n        if(joinForm.style.display === \"flex\") {\r\n        joinForm.style.display = \"none\";\r\n        } else {\r\n        joinForm.style.display = \"flex\";\r\n        }\r\n    }\r\n\r\n    handleChange(e) {\r\n        e.preventDefault();\r\n        var id = e.target.id;\r\n        if(id === \"join_firstname\") {\r\n            this.setState({\r\n                firstname: e.target.value\r\n            });\r\n        } else if (id === \"join_lastname\") {\r\n            this.setState({\r\n                lastname: e.target.value\r\n            });\r\n        } else if (id === \"join_email\") {\r\n            this.setState({\r\n                email: e.target.value\r\n            });\r\n        } else if (id === \"join_password\") {\r\n            this.setState({\r\n                password: e.target.value\r\n            });\r\n        } else if (id === \"join_repassword\") {\r\n            this.setState({\r\n                repassword: e.target.value\r\n            });\r\n        } else if (id === \"join_role\") {\r\n            this.setState({\r\n                role: e.target.value\r\n            });\r\n        }\r\n    }\r\n\r\n    async handleSubmit(e) {\r\n        e.preventDefault();\r\n        var data = {\r\n            \"email\": this.state.email,\r\n            \"password\": this.state.password,\r\n            \"firstname\": this.state.firstname,\r\n            \"lastname\": this.state.lastname,\r\n            \"role\": this.state.role\r\n        };\r\n        var url = \"http://localhost/junior-workers/api/create-user.php\";\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n            \r\n            if(response.status !== 200) {\r\n                this.setState({\r\n                    joinMessage : \"Email exists\"\r\n                });\r\n            }\r\n            else if (response.status === 200) {\r\n                const json = await response.json();\r\n                this.setState({\r\n                    joinMessage : \"User created\",\r\n                });\r\n                this.resetAllInput();\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            this.setState({\r\n                joinMessage : \"Unable to create user\"\r\n            });\r\n        }\r\n    }\r\n\r\n    resetAllInput() {\r\n        document.getElementById(\"join_firstname\").value = \"\";\r\n        document.getElementById(\"join_lastname\").value = \"\";\r\n        document.getElementById(\"join_email\").value = \"\";\r\n        document.getElementById(\"join_password\").value = \"\";\r\n        document.getElementById(\"join_repassword\").value = \"\";\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"join\">\r\n                <form className=\"join-form\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"join-message\">Account Creation</div>\r\n                    <div className=\"join-message\" style={{\"color\":\"#D0321E\", \"fontSize\":\"26px\"}}>{this.state.joinMessage}</div>\r\n                    <div className=\"join-section\">\r\n                        <div className=\"join-title-label\">Account ID</div>\r\n                        <div className=\"join-label\">Email</div>\r\n                        <input className=\"join-input-text\" type=\"email\" minLength=\"6\" maxLength=\"30\" placeholder=\"johnDelta\" required name=\"email\" id=\"join_email\" onChange={this.handleChange} />\r\n                        <div className=\"join-label\">Password</div>\r\n                        <input className=\"join-input-text\" type=\"password\" minLength=\"6\" maxLength=\"30\" placeholder=\"John123DEL\" required name=\"password\" id=\"join_password\" onChange={this.handleChange} />\r\n                        <div className=\"join-label\">Verify password</div>\r\n                        <input className=\"join-input-text\" type=\"password\" minLength=\"6\" maxLength=\"30\" placeholder=\"John123DEL\" required name=\"repassword\" id=\"join_repassword\" onChange={this.handleChange} />\r\n                        <div className=\"join-label\">Role</div>\r\n                        <select className=\"join-role\" defaultValue=\"candidate\" name=\"role\" id=\"join_role\" onChange={this.handleChange}>\r\n                            <option value=\"candidate\" >Candidate</option>\r\n                            <option value=\"hirer\" >Hirer</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"join-section\">\r\n                        <div className=\"join-title-label\">Personal info</div>\r\n                        <div className=\"join-label\">Name</div>\r\n                        <input className=\"join-input-text\" type=\"text\" minLength=\"2\" maxLength=\"40\" placeholder=\"John\" required name=\"firstname\" id=\"join_firstname\" onChange={this.handleChange} />\r\n                        <div className=\"join-label\">Lastname</div>\r\n                        <input className=\"join-input-text\" type=\"text\" minLength=\"2\" maxLength=\"40\" placeholder=\"Deligiannis\" required name=\"lastname\" id=\"join_lastname\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <button className=\"join-submit\" type=\"submit\" >Create account</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Join;","import React from 'react';\r\nimport './Home.css';\r\nimport Login from './Login.js';\r\nimport Join from './Join.js';\r\nimport  { Redirect } from 'react-router-dom';\r\n\r\nclass Home extends React.Component{\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      toggleLoginFlag: false,\r\n      loginButtonText: \"Login\",\r\n      toggleJoinFlag: false,\r\n      joinButtonText: \"Join our community\",\r\n      joinError : \"\",\r\n      redirect: \"\",\r\n      searchInput: \"\"\r\n    };\r\n    this.onClickLoginHandle = this.onClickLoginHandle.bind(this);\r\n    this.onClickJoinHandle = this.onClickJoinHandle.bind(this);\r\n    this.search = this.search.bind(this);\r\n    this.searchChange = this.searchChange.bind(this);\r\n  }\r\n\r\n  onClickLoginHandle() {\r\n    // if the join panel is open, close it\r\n    if(this.state.joinButtonText === \"X\") {\r\n      this.onClickJoinHandle();\r\n    }\r\n    // toggle login form\r\n    this.setState({\r\n      toggleLoginFlag: !this.state.toggleLoginFlag\r\n    });\r\n    // change text of login button\r\n    let loginButton = document.querySelector(\".login-button\");\r\n    if(this.state.loginButtonText === \"Login\") {\r\n    this.setState({\r\n        loginButtonText: \"X\"\r\n    });\r\n    loginButton.classList.add(\"login-button-active\");\r\n    } else {\r\n    this.setState({\r\n        loginButtonText: \"Login\"\r\n    });\r\n    loginButton.classList.remove(\"login-button-active\");\r\n    }\r\n  }\r\n\r\n  onClickJoinHandle() {\r\n    //if the login panel is open, close it\r\n    if(this.state.loginButtonText === \"X\") {\r\n      this.onClickLoginHandle();\r\n    }\r\n    // toggle join form\r\n    this.setState({\r\n      toggleJoinFlag: !this.state.toggleJoinFlag\r\n    });\r\n    // change text of join button\r\n    let joinButton = document.querySelector(\".join-button\");\r\n    if(this.state.joinButtonText === \"Join our community\") {\r\n      this.setState({\r\n        joinButtonText: \"X\"\r\n      });\r\n      joinButton.classList.add(\"join-button-active\");\r\n    } else {\r\n      this.setState({\r\n        joinButtonText: \"Join our community\"\r\n      });\r\n      joinButton.classList.remove(\"join-button-active\");\r\n    }\r\n  }\r\n\r\n  searchChange(e) {\r\n    e.preventDefault();\r\n    var input = document.getElementById(\"search-input\").value;\r\n    this.setState({\r\n      searchInput: input\r\n    });\r\n  }\r\n\r\n  search(e) {\r\n    e.preventDefault();\r\n    localStorage.setItem(\"searchInput\", this.state.searchInput);\r\n    var temp = <Redirect to=\"/search\" />;\r\n    this.setState({\r\n        redirect: temp\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"Home\">\r\n        {this.state.redirect}\r\n        <img id=\"bg\" className=\"background\" src={require('./images/backgroundBig.jpg')} />\r\n        \r\n        <div className=\"logo\">\r\n          <div className=\"title1\">Junior</div>\r\n          <div className=\"title2\">Workers</div>\r\n          <div className=\"logo-circle\" />\r\n        </div>\r\n\r\n        <button className=\"join-button\" onClick={this.onClickJoinHandle} value=\"join\">\r\n          {this.state.joinButtonText}\r\n        </button>\r\n        <Join toggleJoinFlag={this.state.toggleJoinFlag} />\r\n        \r\n\r\n        <button className=\"login-button\" onClick={this.onClickLoginHandle} value=\"login\">\r\n          {this.state.loginButtonText}\r\n        </button>\r\n        <Login toggleLoginFlag={this.state.toggleLoginFlag} />\r\n        \r\n        <div className=\"main\">\r\n          <h1 className=\"title\">\r\n            <span>Your professional</span>\r\n            <span>career starts</span>\r\n            <span>here</span>\r\n            <div className=\"main-search\">\r\n              <input type=\"text\" placeholder=\"ex. Web Developer\" id=\"search-input\" onChange={this.searchChange} />\r\n              <button onClick={this.search}>\r\n                <i className=\"fa fa-search\" />\r\n              </button>\r\n            </div>\r\n          </h1>\r\n          <img className=\"image\" src={require(`./images/main_image.png`)} />\r\n        </div>\r\n\r\n        <div className=\"infos\" id=\"infos\">\r\n          <h2 className=\"infos-title\">Use Junior Workers and find your place in job industry</h2>\r\n          <div className=\"info\">\r\n            <div className=\"info-title\">Recruiters<br/>can</div>\r\n            <div className=\"info-uses\">\r\n              <div className=\"info-use\">Search workers</div>\r\n              <div className=\"info-use\">Create a job post</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"info\">\r\n            <div className=\"info-title\">Workers<br/>can</div>\r\n            <div className=\"info-uses\">\r\n              <div className=\"info-use\">Search job posts</div>\r\n              <div className=\"info-use\">Create a professional profil</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"footer\">\r\n          <div>Designed and Coded by</div>\r\n          <a \r\n\t\t\t\t\t\thref=\"https://github.com/JohnDelta\"\r\n\t\t\t\t\t\ttarget=\"_blank\" \r\n\t\t\t\t\t\ttitle=\"Visit my github profile!\"\r\n\t\t\t\t\t\trel=\"noopener noreferrer\" >\r\n              John Deligiannis \r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport './Navbar.css';\r\n\r\nclass Navbar extends React.Component{\r\n  constructor(props){\r\n    super();\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.handleLogout = this.handleLogout.bind(this);\r\n  }\r\n\r\n  toggleNavbar() {\r\n    // show nav links\r\n    var navLinks = document.querySelector(\".nav-links\");\r\n    navLinks.classList.toggle(\"nav-links-active\");\r\n    // animate navbar toggle button\r\n    var navLines = document.querySelectorAll(\".nav-toggle div\");\r\n    navLines.forEach((line, index) => {\r\n      line.classList.toggle(\"div\"+(index+1)+\"-active\");\r\n    });\r\n    // change color of navbar\r\n    var navbar = document.querySelector(\".Navbar\");\r\n    navbar.classList.toggle(\"navbar-active\");\r\n  }\r\n\r\n  handleLogout() {\r\n    localStorage.clear();\r\n  }\r\n\r\n  render() {\r\n    var profilStyle = {};\r\n    var searchStyle = {};\r\n    var exitStyle = {};\r\n    if(this.props.selectedLink === \"profil\")\r\n      profilStyle = {color: \"#F25F5C\"};\r\n    if(this.props.selectedLink === \"search\")\r\n      searchStyle = {color: \"#F25F5C\"};\r\n\r\n    return(\r\n      <div className=\"Navbar\">\r\n        <div className=\"nav-toggle\" onClick={this.toggleNavbar}>\r\n          <div/>\r\n          <div/>\r\n          <div/>\r\n        </div>\r\n        <ul className=\"nav-links\">\r\n          <li className=\"nav-link\">\r\n            <Link className=\"text\" to=\"/search\" style={searchStyle}>\r\n              <i className=\"fa fa-search\" style={searchStyle} />\r\n              <p>Home</p>\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-link\">\r\n            <Link className=\"text\" to={\"/my-\"+this.props.role+\"-profil\"} style={profilStyle}>\r\n              <i className=\"fa fa-user\" style={profilStyle}/>\r\n              <p>Profil</p>\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-link nav-down\">\r\n            <Link onClick={this.handleLogout} className=\"text\" to=\"/\" style={exitStyle} >\r\n              <i className=\"fa fa-sign-out\" style={exitStyle} />\r\n              <p>Exit</p>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport './DisplayMessage.css'\r\n\r\nclass DisplayMessage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayMessageFlag: this.props.displayMessageFlag,\r\n            message: \"\"\r\n        };\r\n        this.displayMessage = this.displayMessage.bind(this);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(this.props.displayMessageFlag !== this.state.displayMessageFlag) {\r\n            this.setState({\r\n                displayMessageFlag: this.props.displayMessageFlag\r\n            });\r\n            if(this.props.displayMessage !== \"\" && this.props.displayMessage !== null) {\r\n                this.displayMessage();\r\n            }\r\n        }\r\n    }\r\n\r\n    // display each new message given and after 3 seconds close it.\r\n    displayMessage() {\r\n        var msg = document.querySelector(\".DisplayMessage\");\r\n        msg.classList.remove(\"deactivate-display-message\");\r\n        this.setState({\r\n            message: this.props.displayMessage\r\n        });\r\n        setTimeout(()=>{\r\n            msg.classList.add(\"deactivate-display-message\");\r\n            this.setState({\r\n                message: \"\"\r\n            });\r\n        }, 3000);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"DisplayMessage deactivate-display-message\">\r\n                <p>{this.state.message}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DisplayMessage;","import React from 'react';\r\nimport './Profil.css';\r\nimport Navbar from './Navbar';\r\nimport  { Redirect } from 'react-router-dom';\r\nimport DisplayMessage from './DisplayMessage';\r\n\r\nclass MyCandidateProfil extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            redirect: \"\",\r\n            jwt: localStorage.getItem(\"jwt\"),\r\n            editFlag: false,\r\n            disabled: true,\r\n            readonly: true,\r\n            dropListData: {\r\n                \"profession\": [],\r\n                \"skill\": [],\r\n                \"education\": [],\r\n                \"education_level\": [],\r\n                \"language\": [],\r\n                \"language_level\": []\r\n            },\r\n            data : {\r\n                \"user\": [],\r\n                \"experience\": [],\r\n                \"skill\": [],\r\n                \"education\": [],\r\n                \"language\": []\r\n            },\r\n            displayMessage: \"\",\r\n            displayMessageFlag: false\r\n        };\r\n\r\n        this.toggleEdit = this.toggleEdit.bind(this);\r\n        this.getUserData = this.getUserData.bind(this);\r\n\r\n        this.userHeaderChange = this.userHeaderChange.bind(this);\r\n        this.availabilityChange = this.availabilityChange.bind(this);\r\n\r\n        this.discardChanges = this.discardChanges.bind(this);\r\n        this.saveChanges = this.saveChanges.bind(this);\r\n        \r\n        this.userDataChange = this.userDataChange.bind(this);\r\n        this.removeUserData = this.removeUserData.bind(this);\r\n        this.addUserData = this.addUserData.bind(this);\r\n\r\n        this.getDropListData = this.getDropListData.bind(this);\r\n\r\n        this.imageChange = this.imageChange.bind(this);\r\n        this.removeImage = this.removeImage.bind(this);\r\n\r\n        this.videoChange = this.videoChange.bind(this);\r\n        this.removeVideo = this.removeVideo.bind(this);\r\n\r\n        this.resumeChange = this.resumeChange.bind(this);\r\n        this.removeResume = this.removeResume.bind(this);\r\n\r\n        this.downloadResume = this.downloadResume.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        localStorage.removeItem(\"email\");\r\n        if(this.state.jwt === null) {\r\n            var temp = <Redirect to=\"/\" />;\r\n            this.setState({\r\n                redirect: temp\r\n            });\r\n        }\r\n        this.getUserData();\r\n        this.getDropListData();\r\n    }\r\n\r\n    // open edit mode - be able to edit all values (remove and add new)\r\n    toggleEdit() {\r\n        this.setState({\r\n            editFlag : !this.state.editFlag\r\n        });\r\n        var button = document.getElementById(\"edit-button\");\r\n        // if you close edit without saving first, reset changes\r\n        if(button.classList.contains(\"fa-times\")) {\r\n            // change edit button icon\r\n            button.classList.remove(\"fa-times\");\r\n            button.classList.add(\"fa-edit\");\r\n        } else {\r\n            button.classList.remove(\"fa-edit\");\r\n            button.classList.add(\"fa-times\");\r\n        }\r\n        // change lock of input fields\r\n        this.setState({\r\n            disabled: !this.state.disabled,\r\n            readonly: !this.state.readonly\r\n        });\r\n    }\r\n\r\n    // handle user data input change \r\n    userHeaderChange(e) {\r\n        e.preventDefault();\r\n        var id = e.target.id;\r\n        var value = e.target.value;\r\n        var temp = this.state.data;\r\n\r\n        if(id === \"firstname\") {\r\n            temp[\"user\"][\"firstname\"] = value;\r\n        } else if(id === \"lastname\") {\r\n            temp[\"user\"][\"lastname\"] = value;\r\n        } else if(id === \"title\") {\r\n            temp[\"user\"][\"title\"] = value;\r\n        } else if(id === \"bio\") {\r\n            temp[\"user\"][\"bio\"] = value;\r\n        }\r\n\r\n        this.setState({\r\n            data: temp\r\n        });\r\n    }\r\n\r\n    // handle the change state of availability\r\n    availabilityChange() {\r\n        var temp;\r\n        if(this.state.data[\"user\"][\"availability\"] === \"1\") {\r\n            temp = this.state.data;\r\n            temp[\"user\"][\"availability\"] = \"0\";\r\n            this.setState({\r\n                data: temp\r\n            });\r\n        } else {\r\n            temp = this.state.data;\r\n            temp[\"user\"][\"availability\"] = \"1\";\r\n            this.setState({\r\n                data: temp\r\n            });\r\n        }\r\n    }\r\n\r\n    // handle user's data input change\r\n    // each Data component is distinguished by an id with the form : nameOfData__indexInJson__nameOfItem\r\n    // ex. skill__0__title means the data item skill with index 0 and name title called the function \r\n    userDataChange(e) {\r\n        e.preventDefault();\r\n        var value = e.target.value;\r\n        var attr = e.target.id.split(\"__\");\r\n        var dataName = attr[0];\r\n        var index = attr[1];\r\n        var name = attr[2];\r\n        var temp = this.state.data;\r\n        temp[dataName][index][name] = value;\r\n        this.setState({\r\n            data: temp\r\n        });\r\n    }\r\n\r\n    // add user's skill item\r\n    addUserData(e) {\r\n        e.preventDefault();\r\n        var temp = this.state.data;\r\n        var dataName = e.target.name;\r\n        if(dataName === \"experience\") {\r\n            temp[\"experience\"].push({\r\n                \"id_profession\": this.state.dropListData.profession[0].id_profession, \"company\": \"\", \"date\": \"\"\r\n            });\r\n        } else if (dataName === \"skill\") {\r\n            temp[\"skill\"].push({\r\n                \"id_skill\": this.state.dropListData.skill[0].id_skill});\r\n        } else if (dataName === \"education\") {\r\n            temp[\"education\"].push({\r\n                \"id_education\": this.state.dropListData.education[0].id_education, \r\n                \"id_education_level\": this.state.dropListData.education_level[0].id_education_level \r\n            });\r\n        } else if (dataName === \"language\") {\r\n            temp[\"language\"].push({\r\n                \"id_language\": this.state.dropListData.language[0].id_language, \r\n                \"id_language_level\": this.state.dropListData.language_level[0].id_language_level \r\n            });\r\n        }\r\n        this.setState({\r\n            data: temp\r\n        });\r\n    }\r\n\r\n    // remove user's data\r\n    // each data component remove button is distinguished by an id with the form : dataName__indexInJson__remove\r\n    // ex. skill__0__title means the data item experience with index 0 and name title will be removed from json \r\n    removeUserData(e) {\r\n        e.preventDefault();\r\n        var attr = e.target.id.split(\"__\");\r\n        var dataName = attr[0];\r\n        var index = attr[1];\r\n        var temp = this.state.data;\r\n        temp[dataName][index] = \"\";\r\n        this.setState({\r\n            data: temp\r\n        });\r\n    }\r\n\r\n    // remove all user's data and get them from db again\r\n    discardChanges() {\r\n        this.setState({\r\n            data : {\r\n                \"user\": [],\r\n                \"experience\": [],\r\n                \"skill\": [],\r\n                \"education\": [],\r\n                \"language\": []\r\n            }\r\n        });\r\n        this.getUserData();\r\n        this.toggleEdit();\r\n    }\r\n\r\n    async imageChange(e) {\r\n        e.preventDefault();\r\n\r\n        var file = document.getElementById(\"image-file\").files[0];\r\n        var fileName = file.name;\r\n        var extensions = [\"png\", \"jpg\", \"jpeg\"];\r\n        var fileExtention = fileName.split(\".\").pop().toLowerCase();\r\n        //var fileSize = file.size;\r\n\r\n        if(extensions.includes(fileExtention)) {\r\n           /*\r\n            NOTE : codes returned from the post-image.php\r\n            $SUCCESS_CODE = \"0\";\r\n            $ERROR_CODE = \"1\";\r\n            $ERROR_FORMAT_CODE = \"2\";\r\n            $ERROR_SIZE_CODE = \"3\";\r\n            */\r\n\r\n            // procced to upload image\r\n            const url = 'http://localhost:80//junior-workers/api/post-image.php';\r\n            //const data = {\"jwt\": this.state.jwt, \"data\": this.state.imageFile};\r\n            var formData = new FormData();\r\n            formData.append(\"image_file\", file);\r\n            formData.append(\"jwt\", this.state.jwt);\r\n\r\n            try {\r\n                const response = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: formData,\r\n                });\r\n                const json = await response.json();\r\n                if(response.status !== 200) {\r\n                    if(json[\"code\"] === \"1\") {\r\n                        this.setState({\r\n                            displayMessage: \"Unable to upload image\"\r\n                        });\r\n                    } else if (json[\"code\"] === \"2\") {\r\n                        this.setState({\r\n                            displayMessage: \"Image not in proper format\"\r\n                        });\r\n                    } else if (json[\"code\"] === \"3\") {\r\n                        this.setState({\r\n                            displayMessage: \"Image's size cannot be larger than 10mb\"\r\n                        });\r\n                    }\r\n                }\r\n                else if (response.status === 200 && json[\"code\"] === \"0\") {\r\n                    this.setState({\r\n                        displayMessage: \"Profil image has been updated\"\r\n                    });\r\n                    this.getUserData();\r\n                }\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n                this.setState({\r\n                    displayMessage: \"Unable to upload image\"\r\n                });\r\n            }\r\n        } else {\r\n            this.setState({\r\n                displayMessage: \"File doesn't have valid image extension.\"\r\n            });\r\n        }\r\n        this.setState({\r\n            displayMessageFlag: !this.state.displayMessageFlag\r\n        });\r\n    }\r\n\r\n    // remove user's image\r\n    async removeImage() {\r\n\r\n        var url = 'http://localhost:80//junior-workers/api/remove-user-image.php';\r\n        var data = {\"jwt\": this.state.jwt};\r\n\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to post user's data\");\r\n                this.setState({\r\n                    displayMessage: \"Unable to remove image\",\r\n                    displayMessageFlag: !this.state.displayMessageFlag\r\n                });\r\n            }\r\n            else if (response.status === 200) {\r\n                //var json = await response.json();\r\n                //console.log(\"Data posted\");\r\n                this.setState({\r\n                    displayMessage: \"Profil image has been removed\",\r\n                    displayMessageFlag: !this.state.displayMessageFlag\r\n                });\r\n                this.getUserData();\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    async videoChange(e) {\r\n        e.preventDefault();\r\n\r\n        var file = document.getElementById(\"video-file\").files[0];\r\n        var fileName = file.name;\r\n        var extensions = [\"mp4\"];\r\n        var fileExtention = fileName.split(\".\").pop().toLowerCase();\r\n        //var fileSize = file.size;\r\n\r\n        if(extensions.includes(fileExtention)) {\r\n           /*\r\n            NOTE : codes returned from the post-video.php\r\n            $SUCCESS_CODE = \"0\";\r\n            $ERROR_CODE = \"1\";\r\n            $ERROR_FORMAT_CODE = \"2\";\r\n            $ERROR_SIZE_CODE = \"3\";\r\n            */\r\n\r\n            // procced to upload video\r\n            const url = 'http://localhost:80//junior-workers/api/post-video.php';\r\n            //const data = {\"jwt\": this.state.jwt, \"data\": this.state.imageFile};\r\n            var formData = new FormData();\r\n            formData.append(\"video_file\", file);\r\n            formData.append(\"jwt\", this.state.jwt);\r\n\r\n            try {\r\n                const response = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: formData,\r\n                });\r\n                const json = await response.json();\r\n                if(json[\"code\"] === \"1\") {\r\n                    this.setState({\r\n                        displayMessage: \"Unable to upload video\",\r\n                    });\r\n                } else if (json[\"code\"] === \"2\") {\r\n                    this.setState({\r\n                        displayMessage: \"Video not in proper format (MP4)\",\r\n                    });\r\n                } else if (json[\"code\"] === \"3\") {\r\n                    this.setState({\r\n                        displayMessage: \"Video's size cannot be larger than 50mb\",\r\n                    });\r\n                } else if (json[\"code\"] === \"0\") {\r\n                    this.setState({\r\n                        displayMessage: \"Video has been Added\"\r\n                    });\r\n                    this.getUserData();\r\n                }\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n                this.setState({\r\n                    displayMessage: \"Unable to upload video\",\r\n                });\r\n            }\r\n        } else {\r\n            this.setState({\r\n                displayMessage: \"File doesn't have valid image extension (MP4).\",\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            displayMessageFlag: !this.state.displayMessageFlag\r\n        });\r\n    }\r\n\r\n    // remove user's video\r\n    async removeVideo(e) {\r\n        e.preventDefault();\r\n\r\n        var url = 'http://localhost:80//junior-workers/api/remove-user-video.php';\r\n        var data = {\"jwt\": this.state.jwt};\r\n\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n            //const json = await response.json();\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to post user's data\");\r\n                this.setState({\r\n                    displayMessage: \"Unable to remove video\",\r\n                    displayMessageFlag: !this.state.displayMessageFlag\r\n                });\r\n            }\r\n            else if (response.status === 200) {\r\n                //var json = await response.json();\r\n                //console.log(\"Data posted\");\r\n                this.setState({\r\n                    displayMessage: \"Profil video has been removed\",\r\n                    displayMessageFlag: !this.state.displayMessageFlag\r\n                });\r\n            }\r\n            this.getUserData();\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    // add user's resume\r\n    async resumeChange(e) {\r\n        e.preventDefault();\r\n\r\n        var file = document.getElementById(\"resume-file\").files[0];\r\n        var fileName = file.name;\r\n        var extensions = [\"pdf\"];\r\n        var fileExtention = fileName.split(\".\").pop().toLowerCase();\r\n        //var fileSize = file.size;\r\n\r\n        if(extensions.includes(fileExtention)) {\r\n           /*\r\n            NOTE : codes returned from the post-resume.php\r\n            $SUCCESS_CODE = \"0\";\r\n            $ERROR_CODE = \"1\";\r\n            $ERROR_FORMAT_CODE = \"2\";\r\n            $ERROR_SIZE_CODE = \"3\";\r\n            */\r\n\r\n            // procced to upload resume\r\n            const url = 'http://localhost:80//junior-workers/api/post-resume.php';\r\n            //const data = {\"jwt\": this.state.jwt, \"data\": this.state.imageFile};\r\n            var formData = new FormData();\r\n            formData.append(\"resume_file\", file);\r\n            formData.append(\"jwt\", this.state.jwt);\r\n\r\n            try {\r\n                const response = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: formData,\r\n                });\r\n                const json = await response.json();\r\n                if(json[\"code\"] === \"1\") {\r\n                    this.setState({\r\n                        displayMessage: \"Unable to upload resume\",\r\n                    });\r\n                } else if (json[\"code\"] === \"2\") {\r\n                    this.setState({\r\n                        displayMessage: \"Resume not in proper format\",\r\n                    });\r\n                } else if (json[\"code\"] === \"3\") {\r\n                    this.setState({\r\n                        displayMessage: \"Resume's size cannot be larger than 10mb\",\r\n                    });\r\n                } else if(json[\"code\"] === \"0\") {\r\n                    this.setState({\r\n                        displayMessage: \"Resume has been Added\"\r\n                    });\r\n                    this.getUserData();\r\n                }\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n                this.setState({\r\n                    displayMessage: \"Unable to upload resume\",\r\n                });\r\n            }\r\n        } else {\r\n            this.setState({\r\n                displayMessage: \"File doesn't have valid image extension.\",\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            displayMessageFlag: !this.state.displayMessageFlag\r\n        });\r\n    }\r\n\r\n    // remove user's resume\r\n    async removeResume() {\r\n\r\n        var url = 'http://localhost:80//junior-workers/api/remove-user-resume.php';\r\n        var data = {\"jwt\": this.state.jwt};\r\n\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to post user's data\");\r\n                this.setState({\r\n                    displayMessage: \"Unable to remove resume\",\r\n                    displayMessageFlag: !this.state.displayMessageFlag\r\n                });\r\n            }\r\n            else if (response.status === 200) {\r\n                //var json = await response.json();\r\n                //console.log(\"Data posted\");\r\n                this.setState({\r\n                    displayMessage: \"Resume has been removed\",\r\n                    displayMessageFlag: !this.state.displayMessageFlag\r\n                });\r\n                this.getUserData();\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    // post all user's data changes to db\r\n    async saveChanges(e) {\r\n        e.preventDefault();\r\n\r\n        var url = 'http://localhost:80//junior-workers/api/post-user-data.php';\r\n        var data = {\"jwt\": this.state.jwt, \"data\": this.state.data};\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to post user's data\")\r\n            }\r\n            else if (response.status === 200) {\r\n                //var json = await response.json();\r\n                //console.log(\"Data posted\");\r\n                this.getUserData();\r\n                this.toggleEdit();\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    // Get all user's data using their jwt auth\r\n    async getUserData() {\r\n        var url = 'http://localhost:80//junior-workers/api/get-user-data.php';\r\n        var data = {\"jwt\": this.state.jwt};\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to get user's data\")\r\n            }\r\n            else if (response.status === 200) {\r\n                var json = await response.json();\r\n                this.setState({data : json});\r\n\r\n                // if the returned data are for a hirer and not a candidate, open the hirer's profil\r\n                var temp = \"\";\r\n                if(this.state.data[\"user\"][\"role\"] === \"hirer\") {\r\n                    temp = <Redirect to=\"/my-hirer-profil\" />;\r\n                }\r\n                this.setState({redirect: temp});\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    async getDropListData() {\r\n        var url = 'http://localhost:80//junior-workers/api/get-droplist-data.php';\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            });\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to get drop list data\")\r\n            }\r\n            else if (response.status === 200) {\r\n                var json = await response.json();\r\n                this.setState({\r\n                    dropListData: json\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    async downloadResume() {\r\n        /*\r\n        NOTE : codes returned from the get-user-resume.php\r\n        $SUCCESS_CODE = \"0\";\r\n        $ERROR_CODE = \"1\";\r\n        $FILE_CANNOT_FOUND_CODE = \"2\";\r\n        */\r\n\r\n        // procced to upload resume\r\n        const url = 'http://localhost:80//junior-workers/api/get-user-resume.php';\r\n        // const data = {\r\n        //     \"jwt\": this.state.jwt,\r\n        //     \"email\": this.state[\"data\"][\"user\"][\"email\"]\r\n        // };\r\n        var formData = new FormData();\r\n        formData.append(\"email\", this.state[\"data\"][\"user\"][\"email\"]);\r\n        formData.append(\"jwt\", this.state.jwt);\r\n\r\n        fetch(url, {\r\n                method: 'POST',\r\n                body: formData,\r\n            })\r\n\t\t\t.then(response => {\r\n                if(response.status === 200) {\r\n                    response.blob().then(blob => {\r\n                        let url = window.URL.createObjectURL(blob);\r\n                        let a = document.createElement('a');\r\n                        a.href = url;\r\n                        a.download = 'resume.pdf';\r\n                        a.click();\r\n                    });\r\n                    //window.location.href = response.url;\r\n                } else {\r\n                    this.setState({\r\n                        displayMessage: \"Unable to download resume\",\r\n                        displayMessageFlag: !this.state.displayMessageFlag\r\n                    });\r\n                }\r\n\t\t});\r\n    }\r\n\r\n    render() {\r\n\r\n        // On edit mode change\r\n        var changeButtons = \"\";\r\n        var availabilityButton = \"\";\r\n        var addExperienceButton = \"\";\r\n        var addSkillButton = \"\";\r\n        var addEducationButton = \"\";\r\n        var addLanguageButton = \"\";\r\n        var editImageButtons = \"\";\r\n        var editVideoButtons = \"\";\r\n        var editResumeButtons = \"\";\r\n\r\n        if(this.state.editFlag) {\r\n            // display save and exit changes button\r\n            changeButtons = <div className=\"change-buttons\">\r\n                                <button type=\"submit\"><i className=\"fa fa-check\" /></button>\r\n                                <button onClick={this.discardChanges}><i className=\"fa fa-times\" /></button>\r\n                            </div>;\r\n            // add availability change button\r\n            availabilityButton = <button className=\"profil-availability-button\" onClick={this.availabilityChange}>\r\n                                    <i className=\"fa fa-refresh\" />\r\n                                </button>;\r\n            // display add experience option\r\n            addExperienceButton = <button className=\"add-btn\" onClick={this.addUserData} name=\"experience\">\r\n                                    <i className=\"fa fa-plus\" />Add Experience\r\n                                </button>;\r\n            // display add Skill option\r\n            addSkillButton = <button className=\"add-btn\" onClick={this.addUserData} name=\"skill\">\r\n                                    <i className=\"fa fa-plus\" />Add Skill\r\n                                </button>;\r\n            // display add Education option\r\n            addEducationButton = <button className=\"add-btn\" onClick={this.addUserData} name=\"education\">\r\n                                    <i className=\"fa fa-plus\" />Add Education\r\n                                </button>;\r\n            // display add Language option\r\n            addLanguageButton = <button className=\"add-btn\" onClick={this.addUserData} name=\"language\">\r\n                                    <i className=\"fa fa-plus\" />Add Language\r\n                                </button>;\r\n            // display buttons to edit profil image\r\n            editImageButtons = <div className=\"profil-image-buttons\">\r\n                                    <label htmlFor=\"image-file\" title=\"upload new profil picture\">\r\n                                        <i className=\"fa fa-upload\" />\r\n                                    </label>\r\n                                    <input id=\"image-file\" type=\"file\" onChange={this.imageChange} name=\"image\" />\r\n                                    <button title=\"remove saved profil picture\" onClick={this.removeImage}>\r\n                                        <i className=\"fa fa-trash\" />\r\n                                    </button>\r\n                                </div>;\r\n            // display buttons to edit video\r\n            editVideoButtons = <div className=\"video-buttons\">\r\n                                    <label htmlFor=\"video-file\" className=\"label\" title=\"Upload new video\">\r\n                                        <i className=\"fa fa-upload\" />\r\n                                    </label>\r\n                                    <input id=\"video-file\" type=\"file\"  name=\"video-file\" onChange={this.videoChange} />\r\n                                    <button title=\"Remove current video\" onClick={this.removeVideo}>\r\n                                        <i className=\"fa fa-trash\" />\r\n                                    </button>\r\n                                </div>;\r\n            // display buttons to edit resume\r\n            editResumeButtons = <div className=\"resume-edit-buttons\">\r\n                                    <label htmlFor=\"resume-file\" className=\"label\" title=\"Upload new resume\">\r\n                                        <i className=\"fa fa-upload\" />\r\n                                    </label>\r\n                                    <input id=\"resume-file\" type=\"file\"  name=\"resume\" onChange={this.resumeChange}/>\r\n                                    <button title=\"Remove current resume\" onClick={this.removeResume} >\r\n                                        <i className=\"fa fa-trash\" />\r\n                                    </button>\r\n                                </div>;\r\n        }\r\n\r\n        // display video if the user has any\r\n        var videoMap = \"\";\r\n        if(this.state.data[\"user\"][\"video_path\"] !== \"\" && this.state.data[\"user\"][\"video_path\"] !== null) {\r\n            videoMap = <video \r\n                            className=\"video\"\r\n                            type=\"video/mp4\"\r\n                            src={\"http://localhost/junior-workers/api/uploads/\"+this.state.data[\"user\"][\"video_path\"]}\r\n                            controls={true}>\r\n                            Unable to play video. Please consider updating your browser.\r\n                        </video>;\r\n        }\r\n\r\n        // display resume if the user has\r\n        var resumeMap = \"\";\r\n        if(this.state.data[\"user\"][\"resume_path\"] !== \"\" && this.state.data[\"user\"][\"resume_path\"] !== null) {\r\n            resumeMap = <button className=\"profil-resume-button\" onClick={this.downloadResume}>\r\n                            <i className=\"fa fa-arrow-down\" />\r\n                            Resume\r\n                        </button>;\r\n        } else if(this.state.editFlag) {\r\n            resumeMap = <div style={{color: \"#ffffff\"}}>Upload your resume here</div>;\r\n        }\r\n\r\n        // display availability according to state\r\n        var availabilityText = <p>Not available</p>;\r\n        if(this.state.data[\"user\"][\"availability\"] === \"1\") availabilityText = <p>Available</p>; \r\n\r\n        // Map experience from json to div\r\n        var experienceMap = [];\r\n        this.state.data[\"experience\"].forEach((item, index) => {\r\n            if(item !== \"\"){\r\n                // display remove job if you are on edit mode\r\n                var removeButton = \"\";\r\n                if(this.state.editFlag) {\r\n                    removeButton = <button className=\"work-remove\" id={\"experience__\"+index+\"__remove\"} onClick={this.removeUserData}>\r\n                        <i className=\"fa fa-times\" />\r\n                    </button>;\r\n                }\r\n                // map all professions into option - select\r\n                var professionMap = [];\r\n                this.state.dropListData[\"profession\"].forEach((pro_item, pro_index) => {\r\n                    professionMap.push(\r\n                        <option value={pro_item.id_profession} key={\"profession_option__\"+index+\"__\"+pro_index}>{pro_item.title}</option>\r\n                    );\r\n                });\r\n                // push experience div\r\n                experienceMap.push(\r\n                    <div className=\"work\" key={\"experience\"+index}>\r\n                        <p className=\"work-label\">Worked as</p>\r\n                        <select \r\n                            id={\"experience__\"+index+\"__id_profession\"}\r\n                            disabled={this.state.disabled} \r\n                            value={item.id_profession}\r\n                            onChange={this.userDataChange} >\r\n                            {professionMap}\r\n                        </select>\r\n                        <p className=\"work-label\">At</p>\r\n                        <input \r\n                            type=\"text\" \r\n                            readOnly={this.state.readonly} \r\n                            id={\"experience__\"+index+\"__company\"} \r\n                            onChange={this.userDataChange} \r\n                            defaultValue={item.company}\r\n                            placeholder=\"company\"\r\n                            required={true} />\r\n                        <p className=\"work-label\">Between</p>\r\n                        <input \r\n                            type=\"text\" \r\n                            readOnly={this.state.readonly} \r\n                            id={\"experience__\"+index+\"__date\"} \r\n                            onChange={this.userDataChange} \r\n                            defaultValue={item.date}\r\n                            placeholder=\"date\"\r\n                            required={true} />\r\n                        {removeButton}\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n        if(this.state.data[\"experience\"] === [] || this.state.data[\"experience\"].length === 0) experienceMap = \"No experience so far\";\r\n        \r\n        // Map skill from json to div\r\n        var skillMap = [];\r\n        this.state.data[\"skill\"].forEach((item, index) => {\r\n            if(item !== \"\"){\r\n                // display remove skill if you are on edit mode\r\n                var removeButton = \"\";\r\n                if(this.state.editFlag) {\r\n                    removeButton = <button className=\"skill-remove\" id={\"skill__\"+index+\"__remove\"} onClick={this.removeUserData}>\r\n                        <i className=\"fa fa-times\" />\r\n                    </button>;\r\n                }\r\n                // map all skills into option - select\r\n                var skillsMap = [];\r\n                this.state.dropListData[\"skill\"].forEach((pro_item, pro_index) => {\r\n                    skillsMap.push(\r\n                        <option value={pro_item.id_skill} key={\"skill_option__\"+index+\"__\"+pro_index}>{pro_item.title}</option>\r\n                    );\r\n                });\r\n                // push skill div\r\n                skillMap.push(\r\n                    <div className=\"skill\" key={\"skill\"+index}>\r\n                        <div className=\"skill-dot\"></div>\r\n                        <select \r\n                            id={\"skill__\"+index+\"__id_skill\"}\r\n                            disabled={this.state.disabled} \r\n                            value={item.id_skill}\r\n                            onChange={this.userDataChange} >\r\n                            {skillsMap}\r\n                        </select>\r\n                        {removeButton}\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n        if(this.state.data[\"skill\"] === [] || this.state.data[\"skill\"].length === 0) skillMap = \"No skills so far\";\r\n\r\n        // Map education from json to div\r\n        var educationMap = [];\r\n        this.state.data[\"education\"].forEach((item, index) => {\r\n            if(item !== \"\"){\r\n                // display remove education if you are on edit mode\r\n                var removeButton = \"\";\r\n                if(this.state.editFlag) {\r\n                    removeButton = <button className=\"education-remove\" id={\"education__\"+index+\"__remove\"} onClick={this.removeUserData}>\r\n                        <i className=\"fa fa-times\" />\r\n                    </button>;\r\n                }\r\n                // map all education into option - select\r\n                var allEducationMap = [];\r\n                this.state.dropListData[\"education\"].forEach((pro_item, pro_index) => {\r\n                    allEducationMap.push(\r\n                        <option value={pro_item.id_education} key={\"education_option__\"+index+\"__\"+pro_index}>{pro_item.title}</option>\r\n                    );\r\n                });\r\n                // map all education levels into option - select\r\n                var allEducationLevelsMap = [];\r\n                this.state.dropListData[\"education_level\"].forEach((pro_item, pro_index) => {\r\n                    allEducationLevelsMap.push(\r\n                        <option value={pro_item.id_education_level} key={\"education_level_option__\"+index+\"__\"+pro_index}>{pro_item.title}</option>\r\n                    );\r\n                });\r\n                // push education div\r\n                educationMap.push(\r\n                    <div className=\"education\" key={\"education\"+index}>\r\n                        <div className=\"education-dot\"></div>\r\n                        <select \r\n                            id={\"education__\"+index+\"__id_education_level\"}\r\n                            disabled={this.state.disabled} \r\n                            value={item.id_education_level}\r\n                            onChange={this.userDataChange} >\r\n                            {allEducationLevelsMap}\r\n                        </select>\r\n                        <select \r\n                            id={\"education__\"+index+\"__id_education\"}\r\n                            disabled={this.state.disabled}\r\n                            value={item.id_education}\r\n                            onChange={this.userDataChange} >\r\n                            {allEducationMap}\r\n                        </select>\r\n                        {removeButton}\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n        if(this.state.data[\"education\"] === [] || this.state.data[\"education\"].length === 0) educationMap = \"No education so far\";\r\n\r\n        // Map language from json to div\r\n        var languageMap = [];\r\n        this.state.data[\"language\"].forEach((item, index) => {\r\n            if(item !== \"\"){\r\n                // display remove language if you are on edit mode\r\n                var removeButton = \"\";\r\n                if(this.state.editFlag) {\r\n                    removeButton = <button className=\"language-remove\" id={\"language__\"+index+\"__remove\"} onClick={this.removeUserData}>\r\n                        <i className=\"fa fa-times\" />\r\n                    </button>;\r\n                }\r\n                // map all language into option - select\r\n                var allLanguageMap = [];\r\n                this.state.dropListData[\"language\"].forEach((pro_item, pro_index) => {\r\n                    allLanguageMap.push(\r\n                        <option value={pro_item.id_language} key={\"language_option__\"+index+\"__\"+pro_index}>{pro_item.title}</option>\r\n                    );\r\n                });\r\n                // map all language levels into option - select\r\n                var allLanguageLevelsMap = [];\r\n                this.state.dropListData[\"language_level\"].forEach((pro_item, pro_index) => {\r\n                    allLanguageLevelsMap.push(\r\n                        <option value={pro_item.id_language_level} key={\"language_level_option__\"+index+\"__\"+pro_index}>{pro_item.title}</option>\r\n                    );\r\n                });\r\n                // push language div\r\n                languageMap.push(\r\n                    <div className=\"language\" key={\"language\"+index}>\r\n                        <div className=\"language-dot\"></div>\r\n                        <select \r\n                            id={\"language__\"+index+\"__id_language_level\"}\r\n                            disabled={this.state.disabled}\r\n                            value={item.id_language_level}\r\n                            onChange={this.userDataChange} >\r\n                            {allLanguageLevelsMap}\r\n                        </select>\r\n                        <select \r\n                            id={\"language__\"+index+\"__id_language\"} \r\n                            value={item.id_language}\r\n                            disabled={this.state.disabled}\r\n                            onChange={this.userDataChange} >\r\n                            {allLanguageMap}\r\n                        </select>\r\n                        {removeButton}\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n        if(this.state.data[\"language\"] === [] || this.state.data[\"language\"].length === 0) languageMap = \"No language so far\";\r\n\r\n        return(\r\n            <div className=\"Profil\">\r\n                {this.state.redirect}\r\n\r\n                <DisplayMessage displayMessage={this.state.displayMessage} displayMessageFlag={this.state.displayMessageFlag} />\r\n\r\n                <img id=\"bg\" className=\"background\" src={require('./images/backgroundBig.jpg')} />\r\n\r\n                <div className=\"logo\">\r\n                    <div className=\"title1\" style={{color: \"#232323\", backgroundColor:\"#F25F5C\"}}>Junior</div>\r\n                    <div className=\"title2\">Workers</div>\r\n                </div>\r\n\r\n                <Navbar selectedLink=\"profil\" role={this.state.data[\"user\"][\"role\"]} />\r\n\r\n                <div className=\"profil-container\">\r\n                    <img className=\"profil-image\" src={\"http://localhost/junior-workers/api/uploads/\"+this.state.data[\"user\"][\"image_path\"]} />\r\n                    <div className=\"profil-header\">\r\n                        <button className=\"profil-edit-btn\" onClick={this.toggleEdit}>\r\n                            <i className=\"fa fa-edit\" id=\"edit-button\"/>\r\n                        </button>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"profil-name firstname\"\r\n                            value={this.state.data[\"user\"][\"firstname\"]}\r\n                            readOnly={this.state.readonly}\r\n                            placeholder=\"Firstname\"\r\n                            id=\"firstname\"\r\n                            onChange={this.userHeaderChange}\r\n                        />\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"profil-name lastname\"\r\n                            value={this.state.data[\"user\"][\"lastname\"]}\r\n                            readOnly={this.state.readonly}\r\n                            placeholder=\"Lastname\"\r\n                            id=\"lastname\"\r\n                            onChange={this.userHeaderChange}\r\n                        />\r\n                        <input\r\n                            type=\"text\" \r\n                            className=\"profil-headline\"\r\n                            value={this.state.data[\"user\"][\"title\"]}\r\n                            readOnly={this.state.readonly}\r\n                            placeholder=\"Profession title\"\r\n                            id=\"title\"\r\n                            onChange={this.userHeaderChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"profil-header2\">\r\n                        {editImageButtons}\r\n                        <div className=\"profil-availability\">\r\n                            {availabilityText}{availabilityButton}\r\n                        </div>\r\n                        <div className=\"profil-resume\">\r\n                            {resumeMap}\r\n                            {editResumeButtons}\r\n                        </div>\r\n                    </div>\r\n                    <form className=\"profil-content\" id=\"profil-form\" onSubmit={this.saveChanges}>\r\n                        <div className=\"title title-first\">\r\n                            <p>About</p>\r\n                        </div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            <div className=\"about\">\r\n                                <textarea\r\n                                    readOnly={this.state.readonly}\r\n                                    className=\"text\"\r\n                                    id=\"bio\"\r\n                                    onChange={this.userHeaderChange}\r\n                                    placeholder=\"Write something about yourself...\"\r\n                                    value={this.state.data[\"user\"][\"bio\"]}>\r\n                                </textarea>\r\n                                {videoMap}\r\n                                {editVideoButtons}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"title\"><p>Work Experience</p></div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            {experienceMap}\r\n                            {addExperienceButton}\r\n                        </div>\r\n                        <div className=\"title\"><p>Skills</p></div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            {skillMap}\r\n                            {addSkillButton}\r\n                        </div>\r\n                        <div className=\"title\"><p>Education</p></div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            {educationMap}\r\n                            {addEducationButton}\r\n                        </div>\r\n                        <div className=\"title\"><p>Language</p></div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            {languageMap}\r\n                            {addLanguageButton}\r\n                        </div>\r\n                        <div className=\"title\"><p>Contact Info</p></div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            Email : {this.state.data[\"user\"][\"email\"]}\r\n                        </div>\r\n                        {changeButtons}\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyCandidateProfil;","import React from 'react';\r\nimport './Profil.css';\r\nimport Navbar from './Navbar';\r\nimport  { Redirect } from 'react-router-dom';\r\nimport DisplayMessage from './DisplayMessage';\r\n\r\nclass MyHirerProfil extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            redirect: \"\",\r\n            jwt: localStorage.getItem(\"jwt\"),\r\n            editFlag: false,\r\n            disabled: true,\r\n            readonly: true,\r\n            dropListData: {\r\n                \"profession\": [],\r\n                \"skill\": [],\r\n                \"education\": [],\r\n                \"education_level\": [],\r\n                \"language\": [],\r\n                \"language_level\": []\r\n            },\r\n            data : {\r\n                \"user\": [],\r\n                \"job_post\": []\r\n            },\r\n            displayMessage: \"\",\r\n            displayMessageFlag: false\r\n        };\r\n\r\n        this.toggleEdit = this.toggleEdit.bind(this);\r\n        this.getUserData = this.getUserData.bind(this);\r\n\r\n        this.userHeaderChange = this.userHeaderChange.bind(this);\r\n        this.availabilityChange = this.availabilityChange.bind(this);\r\n\r\n        this.discardChanges = this.discardChanges.bind(this);\r\n        this.saveChanges = this.saveChanges.bind(this);\r\n        \r\n        this.userDataChange = this.userDataChange.bind(this);\r\n        this.removeUserData = this.removeUserData.bind(this);\r\n        this.addUserData = this.addUserData.bind(this);\r\n\r\n        this.getDropListData = this.getDropListData.bind(this);\r\n\r\n        this.imageChange = this.imageChange.bind(this);\r\n        this.removeImage = this.removeImage.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        localStorage.removeItem(\"email\");\r\n        if(this.state.jwt === null) {\r\n            var temp = <Redirect to=\"/\" />;\r\n            this.setState({\r\n                redirect: temp\r\n            });\r\n        }\r\n        this.getUserData();\r\n        this.getDropListData();\r\n    }\r\n\r\n    // open edit mode - be able to edit all values (remove and add new)\r\n    toggleEdit() {\r\n        this.setState({\r\n            editFlag : !this.state.editFlag\r\n        });\r\n        var button = document.getElementById(\"edit-button\");\r\n        // if you close edit without saving first, reset changes\r\n        if(button.classList.contains(\"fa-times\")) {\r\n            // change edit button icon\r\n            button.classList.remove(\"fa-times\");\r\n            button.classList.add(\"fa-edit\");\r\n        } else {\r\n            button.classList.remove(\"fa-edit\");\r\n            button.classList.add(\"fa-times\");\r\n        }\r\n        // change lock of input fields\r\n        this.setState({\r\n            disabled: !this.state.disabled,\r\n            readonly: !this.state.readonly\r\n        });\r\n    }\r\n\r\n    // handle user data input change \r\n    userHeaderChange(e) {\r\n        e.preventDefault();\r\n        var id = e.target.id;\r\n        var value = e.target.value;\r\n        var temp = this.state.data;\r\n\r\n        if(id === \"firstname\") {\r\n            temp[\"user\"][\"firstname\"] = value;\r\n        } else if(id === \"lastname\") {\r\n            temp[\"user\"][\"lastname\"] = value;\r\n        } else if(id === \"title\") {\r\n            temp[\"user\"][\"title\"] = value;\r\n        } else if(id === \"bio\") {\r\n            temp[\"user\"][\"bio\"] = value;\r\n        }\r\n\r\n        this.setState({\r\n            data: temp\r\n        });\r\n    }\r\n\r\n    // handle the change state of availability\r\n    availabilityChange() {\r\n        var temp;\r\n        if(this.state.data[\"user\"][\"availability\"] === \"1\") {\r\n            temp = this.state.data;\r\n            temp[\"user\"][\"availability\"] = \"0\";\r\n            this.setState({\r\n                data: temp\r\n            });\r\n        } else {\r\n            temp = this.state.data;\r\n            temp[\"user\"][\"availability\"] = \"1\";\r\n            this.setState({\r\n                data: temp\r\n            });\r\n        }\r\n    }\r\n\r\n    // handle user's data input change\r\n    // each Data component is distinguished by an id with the form : nameOfData__indexInJson__nameOfItem\r\n    // ex. skill__0__title means the data item skill with index 0 and name title called the function \r\n    userDataChange(e) {\r\n        e.preventDefault();\r\n        var value = e.target.value;\r\n        var attr = e.target.id.split(\"__\");\r\n        var dataName = attr[0];\r\n        var index = attr[1];\r\n        var name = attr[2];\r\n        var temp = this.state.data;\r\n        temp[dataName][index][name] = value;\r\n        this.setState({\r\n            data: temp\r\n        });\r\n    }\r\n\r\n    // add user's skill item\r\n    addUserData(e) {\r\n        e.preventDefault();\r\n        var temp = this.state.data;\r\n        var dataName = e.target.name;\r\n        if(dataName === \"job_post\") {\r\n            temp[\"job_post\"].push({\r\n                \"id_profession\": this.state.dropListData.profession[0].id_profession,\r\n                \"title\": \"\",\r\n                \"description\": \"\"\r\n            });\r\n        }\r\n        this.setState({\r\n            data: temp\r\n        });\r\n    }\r\n\r\n    // remove user's data\r\n    // each data component remove button is distinguished by an id with the form : dataName__indexInJson__remove\r\n    // ex. skill__0__title means the data item experience with index 0 and name title will be removed from json \r\n    removeUserData(e) {\r\n        e.preventDefault();\r\n        var attr = e.target.id.split(\"__\");\r\n        var dataName = attr[0];\r\n        var index = attr[1];\r\n        var temp = this.state.data;\r\n        temp[dataName][index] = \"\";\r\n        this.setState({\r\n            data: temp\r\n        });\r\n    }\r\n\r\n    // remove all user's data and get them from db again\r\n    discardChanges() {\r\n        this.setState({\r\n            data : {\r\n                \"user\": [],\r\n                \"job_post\": []\r\n            }\r\n        });\r\n        this.getUserData();\r\n        this.toggleEdit();\r\n    }\r\n\r\n    async imageChange(e) {\r\n        e.preventDefault();\r\n\r\n        var file = document.getElementById(\"image-file\").files[0];\r\n        var fileName = file.name;\r\n        var extensions = [\"png\", \"jpg\", \"jpeg\"];\r\n        var fileExtention = fileName.split(\".\").pop().toLowerCase();\r\n        //var fileSize = file.size;\r\n\r\n        if(extensions.includes(fileExtention)) {\r\n           /*\r\n            NOTE : codes returned from the post-image.php\r\n            $SUCCESS_CODE = \"0\";\r\n            $ERROR_CODE = \"1\";\r\n            $ERROR_FORMAT_CODE = \"2\";\r\n            $ERROR_SIZE_CODE = \"3\";\r\n            */\r\n\r\n            // procced to upload image\r\n            const url = 'http://localhost:80//junior-workers/api/post-image.php';\r\n            //const data = {\"jwt\": this.state.jwt, \"data\": this.state.imageFile};\r\n            var formData = new FormData();\r\n            formData.append(\"image_file\", file);\r\n            formData.append(\"jwt\", this.state.jwt);\r\n\r\n            try {\r\n                const response = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: formData,\r\n                });\r\n                const json = await response.json();\r\n                if(response.status !== 200) {\r\n                    if(json[\"code\"] === \"1\") {\r\n                        this.setState({\r\n                            displayMessage: \"Unable to upload image\",\r\n                        });\r\n                    } else if (json[\"code\"] === \"2\") {\r\n                        this.setState({\r\n                            displayMessage: \"Image not in proper format\",\r\n                        });\r\n                    } else if (json[\"code\"] === \"3\") {\r\n                        this.setState({\r\n                            displayMessage: \"Image's size cannot be larger than 10mb\",\r\n                        });\r\n                    }\r\n                }\r\n                else if (response.status === 200 && json[\"code\"] === \"0\") {\r\n                    this.setState({\r\n                        displayMessage: \"Profil image has been updated\"\r\n                    });\r\n                    this.getUserData();\r\n                }\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n                this.setState({\r\n                    displayMessage: \"Unable to upload image\",\r\n                });\r\n            }\r\n        } else {\r\n            this.setState({\r\n                displayMessage: \"File doesn't have valid image extension.\",\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            displayMessageFlag: !this.state.displayMessageFlag\r\n        });\r\n        \r\n    }\r\n\r\n    // remove user's image\r\n    async removeImage() {\r\n\r\n        var url = 'http://localhost:80//junior-workers/api/remove-user-image.php';\r\n        var data = {\"jwt\": this.state.jwt};\r\n\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to post user's data\");\r\n                this.setState({\r\n                    displayMessage: \"Unable to remove image\",\r\n                    displayMessageFlag: !this.state.displayMessageFlag\r\n                });\r\n            }\r\n            else if (response.status === 200) {\r\n                //var json = await response.json();\r\n                //console.log(\"Data posted\");\r\n                this.setState({\r\n                    displayMessage: \"Profil image has been removed\",\r\n                    displayMessageFlag: !this.state.displayMessageFlag\r\n                });\r\n                this.getUserData();\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    // post all user's data changes to db\r\n    async saveChanges(e) {\r\n        e.preventDefault();\r\n\r\n        var url = 'http://localhost:80//junior-workers/api/post-user-data.php';\r\n        var data = {\"jwt\": this.state.jwt, \"data\": this.state.data};\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to post user's data\")\r\n            }\r\n            else if (response.status === 200) {\r\n                //var json = await response.json();\r\n                //console.log(\"Data posted\");\r\n                this.getUserData();\r\n                this.toggleEdit();\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    // Get all user's data using their jwt auth\r\n    async getUserData() {\r\n        var url = 'http://localhost:80//junior-workers/api/get-user-data.php';\r\n        var data = {\"jwt\": this.state.jwt};\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to get user's data\")\r\n            }\r\n            else if (response.status === 200) {\r\n                var json = await response.json();\r\n                this.setState({data : json});\r\n\r\n                // if the returned data are for a hirer and not a candidate, open the hirer's profil\r\n                var temp = \"\";\r\n                if(this.state.data[\"user\"][\"role\"] === \"candidate\") {\r\n                    temp = <Redirect to=\"/my-candidate-profil\" />;\r\n                }\r\n                this.setState({redirect: temp});\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    async getDropListData() {\r\n        var url = 'http://localhost:80//junior-workers/api/get-droplist-data.php';\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            });\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to get drop list data\")\r\n            }\r\n            else if (response.status === 200) {\r\n                var json = await response.json();\r\n                this.setState({\r\n                    dropListData: json\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        // On edit mode change\r\n        var changeButtons = \"\";\r\n        var availabilityButton = \"\";\r\n        var addJobPostButton = \"\";\r\n        var editImageButtons = \"\";\r\n\r\n        if(this.state.editFlag) {\r\n            // display save and exit changes button\r\n            changeButtons = <div className=\"change-buttons\">\r\n                                <button type=\"submit\"><i className=\"fa fa-check\" /></button>\r\n                                <button onClick={this.discardChanges}><i className=\"fa fa-times\" /></button>\r\n                            </div>;\r\n            // add availability change button\r\n            availabilityButton = <button className=\"profil-availability-button\" onClick={this.availabilityChange}>\r\n                                    <i className=\"fa fa-refresh\" />\r\n                                </button>;\r\n            // display add experience option\r\n            addJobPostButton = <button className=\"add-btn\" onClick={this.addUserData} name=\"job_post\">\r\n                                    <i className=\"fa fa-plus\" />Add Job Post\r\n                                </button>;\r\n            // display buttons to edit profil image\r\n            editImageButtons = <div className=\"profil-image-buttons\">\r\n                                    <label htmlFor=\"image-file\" title=\"upload new profil picture\">\r\n                                        <i className=\"fa fa-upload\" />\r\n                                    </label>\r\n                                    <input id=\"image-file\" type=\"file\" onChange={this.imageChange} name=\"image\" />\r\n                                    <button title=\"remove saved profil picture\" onClick={this.removeImage}>\r\n                                        <i className=\"fa fa-trash\" />\r\n                                    </button>\r\n                                </div>;\r\n        }\r\n\r\n        // display availability according to state\r\n        var availabilityText = <p>Not Hiring</p>;\r\n        if(this.state.data[\"user\"][\"availability\"] === \"1\") availabilityText = <p>Hiring</p>; \r\n\r\n        // Map jobPost from json to div\r\n        var jobPostMap = [];\r\n        this.state.data[\"job_post\"].forEach((item, index) => {\r\n            if(item !== \"\"){\r\n                // display remove job if you are on edit mode\r\n                var removeButton = \"\";\r\n                if(this.state.editFlag) {\r\n                    removeButton = <button className=\"work-remove\" id={\"job_post__\"+index+\"__remove\"} onClick={this.removeUserData}>\r\n                        <i className=\"fa fa-times\" />\r\n                    </button>;\r\n                }\r\n                // map all professions into option - select\r\n                var professionMap = [];\r\n                this.state.dropListData[\"profession\"].forEach((pro_item, pro_index) => {\r\n                    professionMap.push(\r\n                        <option value={pro_item.id_profession} key={\"profession_option__\"+index+\"__\"+pro_index}>{pro_item.title}</option>\r\n                    );\r\n                });\r\n                // push job_post div\r\n                jobPostMap.push(\r\n                    <div className=\"post\" key={\"job_post\"+index}>\r\n                        <p className=\"post-label\">Job title</p>\r\n                        <textarea\r\n                            type=\"text\" \r\n                            readOnly={this.state.readonly} \r\n                            id={\"job_post__\"+index+\"__title\"} \r\n                            onChange={this.userDataChange} \r\n                            defaultValue={item.title}\r\n                            placeholder=\"Job title\"\r\n                            required={true} />\r\n                        <p className=\"post-label\">Looking for</p>\r\n                        <select \r\n                            id={\"job_post__\"+index+\"__id_profession\"}\r\n                            disabled={this.state.disabled} \r\n                            value={item.id_profession}\r\n                            onChange={this.userDataChange} >\r\n                            {professionMap}\r\n                        </select>\r\n                        <p className=\"post-label\">Job Description</p>\r\n                        <textarea \r\n                            readOnly={this.state.readonly} \r\n                            id={\"job_post__\"+index+\"__description\"} \r\n                            onChange={this.userDataChange} \r\n                            defaultValue={item.description}\r\n                            placeholder=\"Describe the position for the job here\"\r\n                            required={true} />\r\n                        {removeButton}\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n        if(this.state.data[\"job_post\"] === [] || this.state.data[\"job_post\"].length === 0) jobPostMap = \"No Job posts yet\";\r\n        \r\n        return(\r\n            <div className=\"Profil\">\r\n                {this.state.redirect}\r\n\r\n                <DisplayMessage displayMessage={this.state.displayMessage} displayMessageFlag={this.state.displayMessageFlag} />\r\n\r\n                <img id=\"bg\" className=\"background\" src={require('./images/backgroundBig.jpg')} />\r\n\r\n                <div className=\"logo\">\r\n                    <div className=\"title1\" style={{color: \"#232323\", backgroundColor:\"#F25F5C\"}}>Junior</div>\r\n                    <div className=\"title2\">Workers</div>\r\n                </div>\r\n\r\n                <Navbar selectedLink=\"profil\" role={this.state.data[\"user\"][\"role\"]} />\r\n\r\n                <div className=\"profil-container\">\r\n                    <img className=\"profil-image\" src={\"http://localhost/junior-workers/api/uploads/\"+this.state.data[\"user\"][\"image_path\"]} />\r\n                    <div className=\"profil-header\">\r\n                        <button className=\"profil-edit-btn\" onClick={this.toggleEdit}>\r\n                            <i className=\"fa fa-edit\" id=\"edit-button\"/>\r\n                        </button>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"profil-name firstname\"\r\n                            value={this.state.data[\"user\"][\"firstname\"]}\r\n                            readOnly={this.state.readonly}\r\n                            placeholder=\"Firstname\"\r\n                            id=\"firstname\"\r\n                            onChange={this.userHeaderChange}\r\n                        />\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"profil-name lastname\"\r\n                            value={this.state.data[\"user\"][\"lastname\"]}\r\n                            readOnly={this.state.readonly}\r\n                            placeholder=\"Lastname\"\r\n                            id=\"lastname\"\r\n                            onChange={this.userHeaderChange}\r\n                        />\r\n                        <input\r\n                            type=\"text\" \r\n                            className=\"profil-headline\"\r\n                            value={this.state.data[\"user\"][\"title\"]}\r\n                            readOnly={this.state.readonly}\r\n                            placeholder=\"Company name\"\r\n                            id=\"title\"\r\n                            onChange={this.userHeaderChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"profil-header2\">\r\n                        {editImageButtons}\r\n                        <div className=\"profil-availability\">\r\n                            {availabilityText}{availabilityButton}\r\n                        </div>\r\n                    </div>\r\n                    <form className=\"profil-content\" id=\"profil-form\" onSubmit={this.saveChanges}>\r\n                        <div className=\"title title-first\">\r\n                            <p>About</p>\r\n                        </div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            <div className=\"about\">\r\n                                <textarea\r\n                                    readOnly={this.state.readonly}\r\n                                    className=\"text\"\r\n                                    id=\"bio\"\r\n                                    onChange={this.userHeaderChange}\r\n                                    placeholder=\"Write something about your company...\"\r\n                                    value={this.state.data[\"user\"][\"bio\"]}>\r\n                                </textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"title\"><p>Job Posts</p></div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            {jobPostMap}\r\n                            {addJobPostButton}\r\n                        </div>\r\n                        <div className=\"title\"><p>Contact Info</p></div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            Email : {this.state.data[\"user\"][\"email\"]}\r\n                        </div>\r\n                        {changeButtons}\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyHirerProfil;","import React from 'react';\r\nimport './Profil.css';\r\nimport Navbar from './Navbar';\r\nimport  { Redirect } from 'react-router-dom';\r\n\r\nclass CandidateProfil extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            redirect: \"\",\r\n            email: localStorage.getItem(\"email\"), // email to get data from\r\n            role: localStorage.getItem(\"role\"), // role of user to setup navbar\r\n            jwt: localStorage.getItem(\"jwt\"),\r\n            disabled: true,\r\n            readonly: true,\r\n            data : {\r\n                \"user\": [],\r\n                \"experience\": [],\r\n                \"skill\": [],\r\n                \"education\": [],\r\n                \"language\": [],\r\n                \"job_post\": []\r\n            },\r\n            dropListData: {\r\n                \"profession\": [],\r\n                \"skill\": [],\r\n                \"education\": [],\r\n                \"education_level\": [],\r\n                \"language\": [],\r\n                \"language_level\": []\r\n            },\r\n            navbar: \"\"\r\n        };\r\n        this.getUserData = this.getUserData.bind(this);\r\n        this.getDropListData = this.getDropListData.bind(this);\r\n        this.redirectBack = this.redirectBack.bind(this);\r\n        this.downloadResume = this.downloadResume.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.state.email === \"\" || this.state.email === null) {\r\n            var temp = <Redirect to=\"/\" />;\r\n            this.setState({\r\n                redirect: temp\r\n            });\r\n        } else {\r\n            this.getDropListData();\r\n            this.getUserData();\r\n        }\r\n    }\r\n\r\n    async getDropListData() {\r\n        var url = 'http://localhost:80//junior-workers/api/get-droplist-data.php';\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            });\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to get drop list data\")\r\n            }\r\n            else if (response.status === 200) {\r\n                var json = await response.json();\r\n                this.setState({\r\n                    dropListData: json\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    // Get all user's data using their email\r\n    async getUserData() {\r\n        var url = 'http://localhost:80//junior-workers/api/get-view-user-data.php';\r\n        var data = {\r\n            \"email\": this.state.email\r\n        };\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to get user's data\");\r\n                var temp = <Redirect to=\"/search\" />;\r\n                this.setState({redirect: temp});\r\n            }\r\n            else if (response.status === 200) {\r\n                var json = await response.json();\r\n                this.setState({data : json});\r\n\r\n                // if the user is logged in show the navbar too.\r\n                if(this.state.jwt !== null && this.state.jwt !== \"\") {\r\n                    var tmp = <Navbar selectedLink=\"nothing\" role={this.state.role} />\r\n                    this.setState({\r\n                        navbar: tmp\r\n                    });\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    async downloadResume() {\r\n        /*\r\n        NOTE : codes returned from the get-user-resume.php\r\n        $SUCCESS_CODE = \"0\";\r\n        $ERROR_CODE = \"1\";\r\n        $FILE_CANNOT_FOUND_CODE = \"2\";\r\n        */\r\n\r\n        // procced to upload resume\r\n        const url = 'http://localhost:80//junior-workers/api/get-user-resume.php';\r\n        // const data = {\r\n        //     \"jwt\": this.state.jwt,\r\n        //     \"email\": this.state[\"data\"][\"user\"][\"email\"]\r\n        // };\r\n        var formData = new FormData();\r\n        formData.append(\"email\", this.state.email);\r\n\r\n        fetch(url, {\r\n                method: 'POST',\r\n                body: formData,\r\n            })\r\n\t\t\t.then(response => {\r\n                if(response.status === 200) {\r\n                    response.blob().then(blob => {\r\n                        let url = window.URL.createObjectURL(blob);\r\n                        let a = document.createElement('a');\r\n                        a.href = url;\r\n                        a.download = 'resume.pdf';\r\n                        a.click();\r\n                    });\r\n                    //window.location.href = response.url;\r\n                } else {\r\n                    this.setState({\r\n                        displayMessage: \"Unable to download resume\",\r\n                        displayMessageFlag: !this.state.displayMessageFlag\r\n                    });\r\n                }\r\n\t\t});\r\n    }\r\n\r\n    redirectBack() {\r\n        var temp = <Redirect to=\"/search\" />;\r\n        this.setState({redirect: temp});\r\n    }\r\n\r\n    render() {\r\n\r\n        // display video if the user has any\r\n        var videoMap = \"\";\r\n        if(this.state.data[\"user\"][\"video_path\"] !== \"\" && this.state.data[\"user\"][\"video_path\"] !== null) {\r\n            videoMap = <video \r\n                            className=\"video\"\r\n                            type=\"video/mp4\"\r\n                            src={\"http://localhost/junior-workers/api/uploads/\"+this.state.data[\"user\"][\"video_path\"]}\r\n                            controls={true}>\r\n                            Unable to play video. Please consider updating your browser.\r\n                        </video>;\r\n        }\r\n\r\n        // display resume if the user has\r\n        var resumeMap = \"\";\r\n        if(this.state.data[\"user\"][\"resume_path\"] !== \"\" && this.state.data[\"user\"][\"resume_path\"] !== null) {\r\n            resumeMap = <button className=\"profil-resume-button\" onClick={this.downloadResume} >\r\n                            <i className=\"fa fa-arrow-down\" />\r\n                            Resume\r\n                        </button>;\r\n        } \r\n\r\n        // display availability according to state\r\n        var availabilityText = <p>Not available</p>;\r\n        if(this.state.data[\"user\"][\"availability\"] === \"1\") availabilityText = <p>Available</p>; \r\n\r\n        // Map experience from json to div\r\n        var experienceMap = [];\r\n        this.state.data[\"experience\"].forEach((item, index) => {\r\n            if(item !== \"\"){\r\n                // display remove job if you are on edit mode\r\n                var removeButton = \"\";\r\n                if(this.state.editFlag) {\r\n                    removeButton = <button className=\"work-remove\" id={\"experience__\"+index+\"__remove\"} onClick={this.removeUserData}>\r\n                        <i className=\"fa fa-times\" />\r\n                    </button>;\r\n                }\r\n                // map all professions into option - select\r\n                var professionMap = [];\r\n                this.state.dropListData[\"profession\"].forEach((pro_item, pro_index) => {\r\n                    professionMap.push(\r\n                        <option value={pro_item.id_profession} key={\"profession_option__\"+index+\"__\"+pro_index}>{pro_item.title}</option>\r\n                    );\r\n                });\r\n                // push experience div\r\n                experienceMap.push(\r\n                    <div className=\"work\" key={\"experience\"+index}>\r\n                        <p className=\"work-label\">Worked as</p>\r\n                        <select \r\n                            id={\"experience__\"+index+\"__id_profession\"}\r\n                            disabled={this.state.disabled} \r\n                            value={item.id_profession} >\r\n                            {professionMap}\r\n                        </select>\r\n                        <p className=\"work-label\">At</p>\r\n                        <input \r\n                            type=\"text\" \r\n                            readOnly={this.state.readonly} \r\n                            id={\"experience__\"+index+\"__company\"} \r\n                            defaultValue={item.company}\r\n                            placeholder=\"company\"\r\n                            required={true} />\r\n                        <p className=\"work-label\">Between</p>\r\n                        <input \r\n                            type=\"text\" \r\n                            readOnly={this.state.readonly} \r\n                            id={\"experience__\"+index+\"__date\"} \r\n                            defaultValue={item.date}\r\n                            placeholder=\"date\"\r\n                            required={true} />\r\n                        {removeButton}\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n        if(this.state.data[\"experience\"] === [] || this.state.data[\"experience\"].length === 0) experienceMap = \"No experience added so far\";\r\n        \r\n        // Map skill from json to div\r\n        var skillMap = [];\r\n        this.state.data[\"skill\"].forEach((item, index) => {\r\n            if(item !== \"\"){\r\n                // map all skills into option - select\r\n                var skillsMap = [];\r\n                this.state.dropListData[\"skill\"].forEach((pro_item, pro_index) => {\r\n                    skillsMap.push(\r\n                        <option value={pro_item.id_skill} key={\"skill_option__\"+index+\"__\"+pro_index}>{pro_item.title}</option>\r\n                    );\r\n                });\r\n                // push skill div\r\n                skillMap.push(\r\n                    <div className=\"skill\" key={\"skill\"+index}>\r\n                        <div className=\"skill-dot\"></div>\r\n                        <select \r\n                            id={\"skill__\"+index+\"__id_skill\"}\r\n                            disabled={this.state.disabled} \r\n                            value={item.id_skill} >\r\n                            {skillsMap}\r\n                        </select>\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n        if(this.state.data[\"skill\"] === [] || this.state.data[\"skill\"].length === 0) skillMap = \"No skills so far\";\r\n\r\n        // Map education from json to div\r\n        var educationMap = [];\r\n        this.state.data[\"education\"].forEach((item, index) => {\r\n            if(item !== \"\"){\r\n                // display remove education if you are on edit mode\r\n                var removeButton = \"\";\r\n                if(this.state.editFlag) {\r\n                    removeButton = <button className=\"education-remove\" id={\"education__\"+index+\"__remove\"} onClick={this.removeUserData}>\r\n                        <i className=\"fa fa-times\" />\r\n                    </button>;\r\n                }\r\n                // map all education into option - select\r\n                var allEducationMap = [];\r\n                this.state.dropListData[\"education\"].forEach((pro_item, pro_index) => {\r\n                    allEducationMap.push(\r\n                        <option value={pro_item.id_education} key={\"education_option__\"+index+\"__\"+pro_index}>{pro_item.title}</option>\r\n                    );\r\n                });\r\n                // map all education levels into option - select\r\n                var allEducationLevelsMap = [];\r\n                this.state.dropListData[\"education_level\"].forEach((pro_item, pro_index) => {\r\n                    allEducationLevelsMap.push(\r\n                        <option value={pro_item.id_education_level} key={\"education_level_option__\"+index+\"__\"+pro_index}>{pro_item.title}</option>\r\n                    );\r\n                });\r\n                // push education div\r\n                educationMap.push(\r\n                    <div className=\"education\" key={\"education\"+index}>\r\n                        <div className=\"education-dot\"></div>\r\n                        <select \r\n                            id={\"education__\"+index+\"__id_education_level\"}\r\n                            disabled={this.state.disabled} \r\n                            value={item.id_education_level} >\r\n                            {allEducationLevelsMap}\r\n                        </select>\r\n                        <select \r\n                            id={\"education__\"+index+\"__id_education\"}\r\n                            disabled={this.state.disabled}\r\n                            value={item.id_education} >\r\n                            {allEducationMap}\r\n                        </select>\r\n                        {removeButton}\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n        if(this.state.data[\"education\"] === [] || this.state.data[\"education\"].length === 0) educationMap = \"No education added so far\";\r\n\r\n        // Map language from json to div\r\n        var languageMap = [];\r\n        this.state.data[\"language\"].forEach((item, index) => {\r\n            if(item !== \"\"){\r\n                // display remove language if you are on edit mode\r\n                var removeButton = \"\";\r\n                if(this.state.editFlag) {\r\n                    removeButton = <button className=\"language-remove\" id={\"language__\"+index+\"__remove\"} onClick={this.removeUserData}>\r\n                        <i className=\"fa fa-times\" />\r\n                    </button>;\r\n                }\r\n                // map all language into option - select\r\n                var allLanguageMap = [];\r\n                this.state.dropListData[\"language\"].forEach((pro_item, pro_index) => {\r\n                    allLanguageMap.push(\r\n                        <option value={pro_item.id_language} key={\"language_option__\"+index+\"__\"+pro_index}>{pro_item.title}</option>\r\n                    );\r\n                });\r\n                // map all language levels into option - select\r\n                var allLanguageLevelsMap = [];\r\n                this.state.dropListData[\"language_level\"].forEach((pro_item, pro_index) => {\r\n                    allLanguageLevelsMap.push(\r\n                        <option value={pro_item.id_language_level} key={\"language_level_option__\"+index+\"__\"+pro_index}>{pro_item.title}</option>\r\n                    );\r\n                });\r\n                // push language div\r\n                languageMap.push(\r\n                    <div className=\"language\" key={\"language\"+index}>\r\n                        <div className=\"language-dot\"></div>\r\n                        <select \r\n                            id={\"language__\"+index+\"__id_language_level\"}\r\n                            disabled={this.state.disabled}\r\n                            value={item.id_language_level} >\r\n                            {allLanguageLevelsMap}\r\n                        </select>\r\n                        <select \r\n                            id={\"language__\"+index+\"__id_language\"} \r\n                            value={item.id_language}\r\n                            disabled={this.state.disabled} >\r\n                            {allLanguageMap}\r\n                        </select>\r\n                        {removeButton}\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n        if(this.state.data[\"language\"] === [] || this.state.data[\"language\"].length === 0) languageMap = \"No languages added so far\";\r\n\r\n        return(\r\n            <div className=\"Profil\">\r\n                {this.state.redirect}\r\n\r\n                <img id=\"bg\" className=\"background\" src={require('./images/backgroundBig.jpg')} />\r\n\r\n                <div className=\"logo\">\r\n                    <div className=\"title1\" style={{color: \"#232323\", backgroundColor:\"#F25F5C\"}}>Junior</div>\r\n                    <div className=\"title2\">Workers</div>\r\n                </div>\r\n\r\n                {this.state.navbar}\r\n\r\n                <div className=\"profil-container\">\r\n                    <img className=\"profil-image\" src={\"http://localhost/junior-workers/api/uploads/\"+this.state.data[\"user\"][\"image_path\"]} />\r\n                    <div className=\"profil-header\">\r\n                        <button className=\"profil-edit-btn\" onClick={this.redirectBack}>\r\n                            <i className=\"fa fa-arrow-left\" id=\"edit-button\"/>\r\n                        </button>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"profil-name firstname\"\r\n                            value={this.state.data[\"user\"][\"firstname\"]}\r\n                            readOnly={this.state.readonly}\r\n                            placeholder=\"Firstname\"\r\n                            id=\"firstname\"\r\n                        />\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"profil-name lastname\"\r\n                            value={this.state.data[\"user\"][\"lastname\"]}\r\n                            readOnly={this.state.readonly}\r\n                            placeholder=\"Lastname\"\r\n                            id=\"lastname\"\r\n                        />\r\n                        <input\r\n                            type=\"text\" \r\n                            className=\"profil-headline\"\r\n                            value={this.state.data[\"user\"][\"title\"]}\r\n                            readOnly={this.state.readonly}\r\n                            placeholder=\"Profession title\"\r\n                            id=\"title\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"profil-header2\">\r\n                        <div className=\"profil-availability\">\r\n                            {availabilityText}\r\n                        </div>\r\n                        <div className=\"profil-resume\">\r\n                            {resumeMap}\r\n                        </div>\r\n                    </div>\r\n                    <form className=\"profil-content\" id=\"profil-form\">\r\n                        <div className=\"title title-first\">\r\n                            <p>About</p>\r\n                        </div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            <div className=\"about\">\r\n                                <textarea\r\n                                    readOnly={this.state.readonly}\r\n                                    className=\"text\"\r\n                                    id=\"bio\"\r\n                                    placeholder=\"Write something about yourself...\"\r\n                                    value={this.state.data[\"user\"][\"bio\"]}>\r\n                                </textarea>\r\n                                {videoMap}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"title\"><p>Work Experience</p></div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            {experienceMap}\r\n                        </div>\r\n                        <div className=\"title\"><p>Skills</p></div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            {skillMap}\r\n                        </div>\r\n                        <div className=\"title\"><p>Education</p></div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            {educationMap}\r\n                        </div>\r\n                        <div className=\"title\"><p>Language</p></div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            {languageMap}\r\n                        </div>\r\n                        <div className=\"title\"><p>Contact Info</p></div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            Email : {this.state.data[\"user\"][\"email\"]}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CandidateProfil;","import React from 'react';\r\nimport './Profil.css';\r\nimport Navbar from './Navbar';\r\nimport  { Redirect } from 'react-router-dom';\r\nimport DisplayMessage from './DisplayMessage';\r\n\r\nclass HirerProfil extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            redirect: \"\",\r\n            email: localStorage.getItem(\"email\"),\r\n            role: localStorage.getItem(\"role\"),\r\n            jwt: localStorage.getItem(\"jwt\"),\r\n            editFlag: false,\r\n            disabled: true,\r\n            readonly: true,\r\n            dropListData: {\r\n                \"profession\": [],\r\n                \"skill\": [],\r\n                \"education\": [],\r\n                \"education_level\": [],\r\n                \"language\": [],\r\n                \"language_level\": []\r\n            },\r\n            data : {\r\n                \"user\": [],\r\n                \"experience\": [],\r\n                \"skill\": [],\r\n                \"education\": [],\r\n                \"language\": [],\r\n                \"job_post\": []\r\n            },\r\n            displayMessage: \"\",\r\n            displayMessageFlag: false,\r\n            navbar: \"\"\r\n        };\r\n        this.getUserData = this.getUserData.bind(this);\r\n\r\n        this.getDropListData = this.getDropListData.bind(this);\r\n        \r\n        this.redirectBack = this.redirectBack.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.state.email === \"\" || this.state.email === null) {\r\n            var temp = <Redirect to=\"/\" />;\r\n            this.setState({\r\n                redirect: temp\r\n            });\r\n        } else {\r\n            this.getDropListData();\r\n            this.getUserData();\r\n        }\r\n    }\r\n\r\n    // Get all user's data using their email\r\n    async getUserData() {\r\n        var url = 'http://localhost:80//junior-workers/api/get-view-user-data.php';\r\n        var data = {\r\n            \"email\": this.state.email\r\n        };\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to get user's data\");\r\n                var temp = <Redirect to=\"/search\" />;\r\n                this.setState({redirect: temp});\r\n            }\r\n            else if (response.status === 200) {\r\n                var json = await response.json();\r\n                this.setState({data : json});\r\n\r\n                // if the user is logged in show the navbar too.\r\n                if(this.state.jwt !== null && this.state.jwt !== \"\") {\r\n                    var tmp = <Navbar selectedLink=\"nothing\" role={this.state.role} />\r\n                    this.setState({\r\n                        navbar: tmp\r\n                    });\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    async getDropListData() {\r\n        var url = 'http://localhost:80//junior-workers/api/get-droplist-data.php';\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            });\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to get drop list data\")\r\n            }\r\n            else if (response.status === 200) {\r\n                var json = await response.json();\r\n                this.setState({\r\n                    dropListData: json\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    redirectBack() {\r\n        var temp = <Redirect to=\"/search\" />;\r\n        this.setState({redirect: temp});\r\n    }\r\n\r\n    render() {\r\n\r\n        // display availability according to state\r\n        var availabilityText = <p>Not Hiring</p>;\r\n        if(this.state.data[\"user\"][\"availability\"] === \"1\") availabilityText = <p>Hiring</p>; \r\n\r\n        // Map jobPost from json to div\r\n        var jobPostMap = [];\r\n        this.state.data[\"job_post\"].forEach((item, index) => {\r\n            if(item !== \"\"){\r\n                // map all professions into option - select\r\n                var professionMap = [];\r\n                this.state.dropListData[\"profession\"].forEach((pro_item, pro_index) => {\r\n                    professionMap.push(\r\n                        <option value={pro_item.id_profession} key={\"profession_option__\"+index+\"__\"+pro_index}>{pro_item.title}</option>\r\n                    );\r\n                });\r\n                // push job_post div\r\n                jobPostMap.push(\r\n                    <div className=\"post\" key={\"job_post\"+index}>\r\n                        <p className=\"post-label\">Job title</p>\r\n                        <textarea\r\n                            type=\"text\" \r\n                            readOnly={this.state.readonly} \r\n                            id={\"job_post__\"+index+\"__title\"} \r\n                            defaultValue={item.title}\r\n                            placeholder=\"Job title\"\r\n                            required={true} />\r\n                        <p className=\"post-label\">Looking for</p>\r\n                        <select \r\n                            id={\"job_post__\"+index+\"__id_profession\"}\r\n                            disabled={this.state.disabled} \r\n                            value={item.id_profession} >\r\n                            {professionMap}\r\n                        </select>\r\n                        <p className=\"post-label\">Job Description</p>\r\n                        <textarea \r\n                            readOnly={this.state.readonly} \r\n                            id={\"job_post__\"+index+\"__description\"} \r\n                            defaultValue={item.description}\r\n                            placeholder=\"Describe the position for the job here\"\r\n                            required={true} />\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n        if(this.state.data[\"job_post\"] === [] || this.state.data[\"job_post\"].length === 0) jobPostMap = \"No Job posts yet\";\r\n        \r\n        return(\r\n            <div className=\"Profil\">\r\n                {this.state.redirect}\r\n\r\n                <DisplayMessage displayMessage={this.state.displayMessage} displayMessageFlag={this.state.displayMessageFlag} />\r\n\r\n                <img id=\"bg\" className=\"background\" src={require('./images/backgroundBig.jpg')} />\r\n\r\n                <div className=\"logo\">\r\n                    <div className=\"title1\" style={{color: \"#232323\", backgroundColor:\"#F25F5C\"}}>Junior</div>\r\n                    <div className=\"title2\">Workers</div>\r\n                </div>\r\n\r\n                {this.state.navbar}\r\n\r\n                <div className=\"profil-container\">\r\n                    <img className=\"profil-image\" src={\"http://localhost/junior-workers/api/uploads/\"+this.state.data[\"user\"][\"image_path\"]} />\r\n                    <div className=\"profil-header\">\r\n                        <button className=\"profil-edit-btn\" onClick={this.redirectBack}>\r\n                            <i className=\"fa fa-arrow-left\" id=\"edit-button\"/>\r\n                        </button>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"profil-name firstname\"\r\n                            value={this.state.data[\"user\"][\"firstname\"]}\r\n                            readOnly={this.state.readonly}\r\n                            placeholder=\"Firstname\"\r\n                            id=\"firstname\"\r\n                        />\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"profil-name lastname\"\r\n                            value={this.state.data[\"user\"][\"lastname\"]}\r\n                            readOnly={this.state.readonly}\r\n                            placeholder=\"Lastname\"\r\n                            id=\"lastname\"\r\n                        />\r\n                        <input\r\n                            type=\"text\" \r\n                            className=\"profil-headline\"\r\n                            value={this.state.data[\"user\"][\"title\"]}\r\n                            readOnly={this.state.readonly}\r\n                            placeholder=\"Company name\"\r\n                            id=\"title\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"profil-header2\">\r\n                        <div className=\"profil-availability\">\r\n                            {availabilityText}\r\n                        </div>\r\n                    </div>\r\n                    <form className=\"profil-content\" id=\"profil-form\" onSubmit={this.saveChanges}>\r\n                        <div className=\"title title-first\">\r\n                            <p>About</p>\r\n                        </div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            <div className=\"about\">\r\n                                <textarea\r\n                                    readOnly={this.state.readonly}\r\n                                    className=\"text\"\r\n                                    id=\"bio\"\r\n                                    placeholder=\"Write something about your company...\"\r\n                                    value={this.state.data[\"user\"][\"bio\"]}>\r\n                                </textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"title\"><p>Job Posts</p></div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            {jobPostMap}\r\n                        </div>\r\n                        <div className=\"title\"><p>Contact Info</p></div>\r\n                        <div className=\"title-hr\" />\r\n                        <div className=\"section\">\r\n                            Email : {this.state.data[\"user\"][\"email\"]}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HirerProfil;","import React from 'react';\r\nimport './Search.css';\r\nimport Navbar from './Navbar.js';\r\nimport  { Redirect } from 'react-router-dom';\r\n\r\nclass Search extends React.Component{\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            redirect: \"\",\r\n            jwt: localStorage.getItem(\"jwt\"),\r\n            dropListData: {\r\n                \"profession\": [],\r\n                \"skill\": [],\r\n                \"education\": [],\r\n                \"education_level\": [],\r\n                \"language\": [],\r\n                \"language_level\": []\r\n            },\r\n            data : {\r\n                \"user\": [],\r\n                \"experience\": [],\r\n                \"skill\": [],\r\n                \"education\": [],\r\n                \"language\": [],\r\n                \"job_post\": []\r\n            },\r\n            navbar: \"\",\r\n            searchType: \"candidate\",\r\n            searchInput: \"\",\r\n            results: [\r\n                {\r\n                    \"role\":\"candidate\"\r\n                }\r\n            ],\r\n            load: \"candidate\"\r\n        };\r\n\r\n        this.changeSearchType = this.changeSearchType.bind(this);\r\n        this.changeSearchInput = this.changeSearchInput.bind(this);\r\n        this.getUserData = this.getUserData.bind(this);\r\n        this.searchUsers = this.searchUsers.bind(this);\r\n        this.getDropListData = this.getDropListData.bind(this);\r\n        this.viewProfil = this.viewProfil.bind(this);\r\n        this.goToMain = this.goToMain.bind(this);\r\n    }\r\n\r\n\r\n    // Check if the jwt of user is valid in order to display the navbar\r\n    componentDidMount() {\r\n        localStorage.removeItem(\"email\");\r\n        if(this.state.jwt !== \"\" || this.state.jwt !== null) {\r\n            this.getUserData();\r\n        }\r\n        this.getDropListData();\r\n        this.searchUsers();\r\n        if(localStorage.getItem(\"searchInput\") !== \"\") {\r\n            this.setState({\r\n                searchInput: localStorage.getItem(\"searchInput\")\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    // Get all user's data using their jwt auth\r\n    async getUserData() {\r\n        var url = 'http://localhost:80//junior-workers/api/get-user-data.php';\r\n        var data = {\"jwt\": this.state.jwt};\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to get user's data\")\r\n            }\r\n            else if (response.status === 200) {\r\n                var json = await response.json();\r\n                this.setState({data : json});\r\n                var tmp = <Navbar selectedLink=\"search\" role={this.state.data[\"user\"][\"role\"]} />\r\n                this.setState({\r\n                    navbar: tmp\r\n                });\r\n                localStorage.setItem(\"role\", this.state.data[\"user\"][\"role\"]);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    async getDropListData() {\r\n        var url = 'http://localhost:80//junior-workers/api/get-droplist-data.php';\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            });\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to get drop list data\")\r\n            }\r\n            else if (response.status === 200) {\r\n                var json = await response.json();\r\n                this.setState({\r\n                    dropListData: json\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    // Get all users from search\r\n    async searchUsers() {\r\n        var url = 'http://localhost:80//junior-workers/api/search.php';\r\n        var data = {\r\n            \"searchType\": this.state.searchType,\r\n            \"searchInput\": this.state.searchInput\r\n        };\r\n        try {\r\n            var response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n            if(response.status !== 200) {\r\n                console.error(\"Unable to search\")\r\n            }\r\n            else if (response.status === 200) {\r\n                var json = await response.json();\r\n                this.setState({\r\n                        \"results\" : json.results,\r\n                        \"load\": this.state.searchType\r\n                    });\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    changeSearchInput(e) {\r\n        e.preventDefault();\r\n        var input = document.getElementById(\"search-input\");\r\n        this.setState({\r\n            searchInput: input.value\r\n        });\r\n    }\r\n\r\n    changeSearchType(e) {\r\n        e.preventDefault();\r\n        var candidate = document.getElementById(\"candidate-search\");\r\n        var postJob = document.getElementById(\"job-post-search\");\r\n        \r\n        if(e.target.id === \"candidate-search\") {\r\n            candidate.classList.add(\"search-button-active\");\r\n            postJob.classList.remove(\"search-button-active\");\r\n            this.setState({\r\n                searchType: \"candidate\"\r\n            });\r\n        } else if (e.target.id === \"job-post-search\") {\r\n            candidate.classList.remove(\"search-button-active\");\r\n            postJob.classList.add(\"search-button-active\");\r\n            this.setState({\r\n                searchType: \"hirer\"\r\n            });\r\n        }\r\n    }\r\n\r\n    viewProfil(e) {\r\n        e.preventDefault();\r\n        var email = e.target.id.split(\"_\")[1];\r\n        var role = e.target.id.split(\"_\")[2];\r\n        localStorage.setItem(\"email\", email);\r\n        var tmp;\r\n        if(role === \"candidate\") {\r\n            tmp = <Redirect to=\"/candidate-profil\" />;\r\n        }else if (role === \"hirer\") {\r\n            tmp = <Redirect to=\"/hirer-profil\" />;\r\n        }\r\n        this.setState({\r\n            redirect: tmp\r\n        });\r\n    }\r\n\r\n    goToMain() {\r\n        var tmp = <Redirect to=\"/\" />;\r\n        this.setState({\r\n            redirect: tmp\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        var resultsMap = <div className=\"msg\">No results found</div>;\r\n        if(this.state.results !== []) {\r\n            if(this.state.load === \"candidate\") {\r\n                resultsMap = [];\r\n                this.state.results.forEach((item, index) => {\r\n                    resultsMap.push(\r\n                        <div className=\"result\" key={\"result\"+index}>\r\n                            <img src={\"http://localhost/junior-workers/api/uploads/\"+item.image_path} />\r\n                            <div className=\"labels\">\r\n                                <div className=\"name\">{item.firstname}</div>\r\n                                <div className=\"lastname\">{item.lastname}</div>\r\n                                <div className=\"title\">{item.title}</div>\r\n                                <button id={\"view-profil\"+index+\"_\"+item.email+\"_\"+item.role} onClick={this.viewProfil}>\r\n                                    <i className=\"fa fa-eye\" />\r\n                                    <div>View profil</div>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                });  \r\n            }\r\n            else if(this.state.load === \"hirer\") {\r\n                resultsMap = [];\r\n                this.state.results.forEach((item, index) => {\r\n                    // map all professions into option - select\r\n                    var professionMap = [];\r\n                    this.state.dropListData[\"profession\"].forEach((pro_item, pro_index) => {\r\n                        professionMap.push(\r\n                            <option value={pro_item.id_profession} key={\"profession_option__\"+index+\"__\"+pro_index}>{pro_item.title}</option>\r\n                        );\r\n                    });\r\n                    resultsMap.push(\r\n                        <div className=\"result\" key={\"result\"+index}>\r\n                            <img src={\"http://localhost/junior-workers/api/uploads/\"+item.image_path} />\r\n                            <div className=\"labels\">\r\n                                <div className=\"name\">{item.firstname}</div>\r\n                                <div className=\"lastname\">{item.lastname}</div>\r\n                                <div className=\"title\">{item.title}</div>\r\n                                <button id={\"view-profil\"+index+\"_\"+item.email+\"_\"+item.role} onClick={this.viewProfil}>\r\n                                    <i className=\"fa fa-eye\" />\r\n                                    <div>View profil</div>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"job\">\r\n                                <div className=\"title\">\r\n                                    {item.job_title}\r\n                                </div>\r\n                                <div className=\"description\">\r\n                                    {item.description}\r\n                                </div>\r\n                                <div className=\"looking\">\r\n                                    <div className=\"label\">Looking for a</div>\r\n                                    <select \r\n                                        disabled={true} \r\n                                        value={item.id_profession} >\r\n                                        {professionMap}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                });\r\n            }\r\n        }\r\n\r\n        var returnButton = \"\";\r\n        if(this.state.jwt === \"\" || this.state.jwt === null) {\r\n            returnButton = <button className=\"return-button\" onClick={this.goToMain}>\r\n                                <i className=\"fa fa-arrow-left\" />\r\n                            </button>;\r\n        }\r\n\r\n        return(\r\n            <div className=\"Search\">\r\n                {this.state.redirect}\r\n\r\n                {this.state.navbar}\r\n\r\n                <img id=\"bg\" className=\"background\" src={require('./images/backgroundBig.jpg')} />\r\n\r\n                <div className=\"logo\">\r\n                    <div className=\"title1\" style={{color: \"#232323\", backgroundColor:\"#F25F5C\"}}>Junior</div>\r\n                    <div className=\"title2\">Workers</div>\r\n                </div>\r\n\r\n                {returnButton}\r\n\r\n                <div className=\"search-container\">\r\n                    <div className=\"control\">\r\n                        <div className=\"search-field\">\r\n                            <i className=\"fa fa-search\" />\r\n                            <input type=\"text\" placeholder=\"Type...\" id=\"search-input\" onChange={this.changeSearchInput} />\r\n                            <hr />\r\n                            <button onClick={this.searchUsers}>\r\n                                Search\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"target-field\">\r\n                            <button id=\"candidate-search\" onClick={this.changeSearchType} className=\"search-button-active\" >\r\n                                Candidate\r\n                            </button>\r\n                            <button id=\"job-post-search\" onClick={this.changeSearchType} >\r\n                                Job post\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"results\">\r\n                        {resultsMap}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport './App.css';\r\nimport Home from './Home.js';\r\nimport MyCandidateProfil from './MyCandidateProfil.js';\r\nimport MyHirerProfil from './MyHirerProfil.js';\r\nimport CandidateProfil from './CandidateProfil.js';\r\nimport HirerProfil from './HirerProfil.js';\r\nimport Search from './Search.js';\r\n\r\nclass App extends React.Component{\r\n  render() {\r\n    return(\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route path=\"/my-candidate-profil\">\r\n              <MyCandidateProfil />\r\n            </Route>\r\n            <Route path=\"/my-hirer-profil\">\r\n              <MyHirerProfil />\r\n            </Route>\r\n            <Route path=\"/search\">\r\n              <Search />\r\n            </Route>\r\n            <Route path=\"/candidate-profil\">\r\n              <CandidateProfil />\r\n            </Route>\r\n            <Route path=\"/hirer-profil\">\r\n              <HirerProfil />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}